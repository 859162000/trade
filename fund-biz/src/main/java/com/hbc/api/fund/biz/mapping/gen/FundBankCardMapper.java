package com.hbc.api.fund.biz.mapping.gen;

import com.hbc.api.fund.biz.mapping.gen.bean.FundBankCard;
import com.hbc.api.fund.biz.mapping.gen.bean.FundBankCardExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface FundBankCardMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_bank_card`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FundBankCardSqlProvider.class, method="countByExample")
    int countByExample(FundBankCardExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_bank_card`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FundBankCardSqlProvider.class, method="deleteByExample")
    int deleteByExample(FundBankCardExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_bank_card`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `fund_bank_card`",
        "where bank_no = #{bankNo,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String bankNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_bank_card`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `fund_bank_card` (bank_no, guide_id, ",
        "guide_name, guide_agency_id, ",
        "guide_agency_name, account_holder_name, ",
        "account, bank, city_id, ",
        "city_name, currency, ",
        "swift, is_valid, ",
        "type, status, update_time, ",
        "create_time)",
        "values (#{bankNo,jdbcType=VARCHAR}, #{guideId,jdbcType=VARCHAR}, ",
        "#{guideName,jdbcType=VARCHAR}, #{guideAgencyId,jdbcType=VARCHAR}, ",
        "#{guideAgencyName,jdbcType=VARCHAR}, #{accountHolderName,jdbcType=VARCHAR}, ",
        "#{account,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR}, #{cityId,jdbcType=INTEGER}, ",
        "#{cityName,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, ",
        "#{swift,jdbcType=VARCHAR}, #{isValid,jdbcType=INTEGER}, ",
        "#{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, ",
        "#{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(FundBankCard record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_bank_card`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FundBankCardSqlProvider.class, method="insertSelective")
    int insertSelective(FundBankCard record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_bank_card`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FundBankCardSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="bank_no", property="bankNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_name", property="guideName", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_agency_id", property="guideAgencyId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_agency_name", property="guideAgencyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_holder_name", property="accountHolderName", jdbcType=JdbcType.VARCHAR),
        @Result(column="account", property="account", jdbcType=JdbcType.VARCHAR),
        @Result(column="bank", property="bank", jdbcType=JdbcType.VARCHAR),
        @Result(column="city_id", property="cityId", jdbcType=JdbcType.INTEGER),
        @Result(column="city_name", property="cityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency", property="currency", jdbcType=JdbcType.VARCHAR),
        @Result(column="swift", property="swift", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_valid", property="isValid", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FundBankCard> selectByExample(FundBankCardExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_bank_card`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "bank_no, guide_id, guide_name, guide_agency_id, guide_agency_name, account_holder_name, ",
        "account, bank, city_id, city_name, currency, swift, is_valid, type, status, ",
        "update_time, create_time",
        "from `fund_bank_card`",
        "where bank_no = #{bankNo,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="bank_no", property="bankNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_name", property="guideName", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_agency_id", property="guideAgencyId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_agency_name", property="guideAgencyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_holder_name", property="accountHolderName", jdbcType=JdbcType.VARCHAR),
        @Result(column="account", property="account", jdbcType=JdbcType.VARCHAR),
        @Result(column="bank", property="bank", jdbcType=JdbcType.VARCHAR),
        @Result(column="city_id", property="cityId", jdbcType=JdbcType.INTEGER),
        @Result(column="city_name", property="cityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency", property="currency", jdbcType=JdbcType.VARCHAR),
        @Result(column="swift", property="swift", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_valid", property="isValid", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    FundBankCard selectByPrimaryKey(String bankNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_bank_card`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FundBankCardSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FundBankCard record, @Param("example") FundBankCardExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_bank_card`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FundBankCardSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FundBankCard record);
}