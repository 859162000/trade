package com.hbc.api.fund.biz.mapping.gen;

import com.hbc.api.fund.biz.mapping.gen.bean.FundWithdrawal;
import com.hbc.api.fund.biz.mapping.gen.bean.FundWithdrawalExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface FundWithdrawalMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_withdraw`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FundWithdrawalSqlProvider.class, method="countByExample")
    int countByExample(FundWithdrawalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_withdraw`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FundWithdrawalSqlProvider.class, method="deleteByExample")
    int deleteByExample(FundWithdrawalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_withdraw`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `fund_withdraw`",
        "where draw_no = #{drawNo,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String drawNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_withdraw`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `fund_withdraw` (draw_no, bach_no, ",
        "guide_id, guide_name, ",
        "guide_agency_id, guide_agency_name, ",
        "apply_time, price, ",
        "fin_bank_no, fin_name, ",
        "fin_account, fin_bank, ",
        "fin_currency, fin_type, ",
        "admin_id, admin_name, ",
        "actual_price, transfer_time, ",
        "account, draw_comment, ",
        "draw_status, is_auto, ",
        "update_time, create_time, ",
        "process_status, guide_no)",
        "values (#{drawNo,jdbcType=VARCHAR}, #{bachNo,jdbcType=VARCHAR}, ",
        "#{guideId,jdbcType=VARCHAR}, #{guideName,jdbcType=VARCHAR}, ",
        "#{guideAgencyId,jdbcType=VARCHAR}, #{guideAgencyName,jdbcType=VARCHAR}, ",
        "#{applyTime,jdbcType=TIMESTAMP}, #{price,jdbcType=DOUBLE}, ",
        "#{finBankNo,jdbcType=VARCHAR}, #{finName,jdbcType=VARCHAR}, ",
        "#{finAccount,jdbcType=VARCHAR}, #{finBank,jdbcType=VARCHAR}, ",
        "#{finCurrency,jdbcType=VARCHAR}, #{finType,jdbcType=INTEGER}, ",
        "#{adminId,jdbcType=VARCHAR}, #{adminName,jdbcType=VARCHAR}, ",
        "#{actualPrice,jdbcType=DOUBLE}, #{transferTime,jdbcType=TIMESTAMP}, ",
        "#{account,jdbcType=VARCHAR}, #{drawComment,jdbcType=VARCHAR}, ",
        "#{drawStatus,jdbcType=INTEGER}, #{isAuto,jdbcType=INTEGER}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{processStatus,jdbcType=INTEGER}, #{guideNo,jdbcType=VARCHAR})"
    })
    int insert(FundWithdrawal record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_withdraw`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FundWithdrawalSqlProvider.class, method="insertSelective")
    int insertSelective(FundWithdrawal record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_withdraw`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FundWithdrawalSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="draw_no", property="drawNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="bach_no", property="bachNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_name", property="guideName", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_agency_id", property="guideAgencyId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_agency_name", property="guideAgencyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="apply_time", property="applyTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="fin_bank_no", property="finBankNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="fin_name", property="finName", jdbcType=JdbcType.VARCHAR),
        @Result(column="fin_account", property="finAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="fin_bank", property="finBank", jdbcType=JdbcType.VARCHAR),
        @Result(column="fin_currency", property="finCurrency", jdbcType=JdbcType.VARCHAR),
        @Result(column="fin_type", property="finType", jdbcType=JdbcType.INTEGER),
        @Result(column="admin_id", property="adminId", jdbcType=JdbcType.VARCHAR),
        @Result(column="admin_name", property="adminName", jdbcType=JdbcType.VARCHAR),
        @Result(column="actual_price", property="actualPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="transfer_time", property="transferTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="account", property="account", jdbcType=JdbcType.VARCHAR),
        @Result(column="draw_comment", property="drawComment", jdbcType=JdbcType.VARCHAR),
        @Result(column="draw_status", property="drawStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="is_auto", property="isAuto", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="process_status", property="processStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="guide_no", property="guideNo", jdbcType=JdbcType.VARCHAR)
    })
    List<FundWithdrawal> selectByExample(FundWithdrawalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_withdraw`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "draw_no, bach_no, guide_id, guide_name, guide_agency_id, guide_agency_name, ",
        "apply_time, price, fin_bank_no, fin_name, fin_account, fin_bank, fin_currency, ",
        "fin_type, admin_id, admin_name, actual_price, transfer_time, account, draw_comment, ",
        "draw_status, is_auto, update_time, create_time, process_status, guide_no",
        "from `fund_withdraw`",
        "where draw_no = #{drawNo,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="draw_no", property="drawNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="bach_no", property="bachNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_name", property="guideName", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_agency_id", property="guideAgencyId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_agency_name", property="guideAgencyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="apply_time", property="applyTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="fin_bank_no", property="finBankNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="fin_name", property="finName", jdbcType=JdbcType.VARCHAR),
        @Result(column="fin_account", property="finAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="fin_bank", property="finBank", jdbcType=JdbcType.VARCHAR),
        @Result(column="fin_currency", property="finCurrency", jdbcType=JdbcType.VARCHAR),
        @Result(column="fin_type", property="finType", jdbcType=JdbcType.INTEGER),
        @Result(column="admin_id", property="adminId", jdbcType=JdbcType.VARCHAR),
        @Result(column="admin_name", property="adminName", jdbcType=JdbcType.VARCHAR),
        @Result(column="actual_price", property="actualPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="transfer_time", property="transferTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="account", property="account", jdbcType=JdbcType.VARCHAR),
        @Result(column="draw_comment", property="drawComment", jdbcType=JdbcType.VARCHAR),
        @Result(column="draw_status", property="drawStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="is_auto", property="isAuto", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="process_status", property="processStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="guide_no", property="guideNo", jdbcType=JdbcType.VARCHAR)
    })
    FundWithdrawal selectByPrimaryKey(String drawNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_withdraw`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FundWithdrawalSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FundWithdrawal record, @Param("example") FundWithdrawalExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_withdraw`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FundWithdrawalSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FundWithdrawal record);
}