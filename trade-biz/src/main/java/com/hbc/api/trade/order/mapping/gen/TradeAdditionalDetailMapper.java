package com.hbc.api.trade.order.mapping.gen;

import com.hbc.api.trade.order.mapping.gen.bean.TradeAdditionalDetail;
import com.hbc.api.trade.order.mapping.gen.bean.TradeAdditionalDetailExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TradeAdditionalDetailMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_detail`
     *
     * @mbggenerated
     */
    @SelectProvider(type=TradeAdditionalDetailSqlProvider.class, method="countByExample")
    int countByExample(TradeAdditionalDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_detail`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=TradeAdditionalDetailSqlProvider.class, method="deleteByExample")
    int deleteByExample(TradeAdditionalDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_detail`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `trade_additional_detail`",
        "where detail_id = #{detailId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String detailId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_detail`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `trade_additional_detail` (detail_id, additional_id, ",
        "daily_date, over_time, ",
        "over_time_price, unit_time_price, ",
        "over_distance, over_distance_price, ",
        "unit_distance_price, over_day, ",
        "over_day_price, unit_day_price, ",
        "over_wait_time_cost, other_fee1, ",
        "other_fee2, applyFee, ",
        "cfm_over_time, cfm_over_distance, ",
        "cfm_over_day, cfm_other_fee1, ",
        "cfm_other_fee2, cfm_fee, ",
        "update_time, create_time)",
        "values (#{detailId,jdbcType=VARCHAR}, #{additionalId,jdbcType=VARCHAR}, ",
        "#{dailyDate,jdbcType=DATE}, #{overTime,jdbcType=INTEGER}, ",
        "#{overTimePrice,jdbcType=DOUBLE}, #{unitTimePrice,jdbcType=DOUBLE}, ",
        "#{overDistance,jdbcType=DOUBLE}, #{overDistancePrice,jdbcType=DOUBLE}, ",
        "#{unitDistancePrice,jdbcType=DOUBLE}, #{overDay,jdbcType=DOUBLE}, ",
        "#{overDayPrice,jdbcType=DOUBLE}, #{unitDayPrice,jdbcType=DOUBLE}, ",
        "#{overWaitTimeCost,jdbcType=DOUBLE}, #{otherFee1,jdbcType=DOUBLE}, ",
        "#{otherFee2,jdbcType=DOUBLE}, #{applyfee,jdbcType=DOUBLE}, ",
        "#{cfmOverTime,jdbcType=INTEGER}, #{cfmOverDistance,jdbcType=DOUBLE}, ",
        "#{cfmOverDay,jdbcType=DOUBLE}, #{cfmOtherFee1,jdbcType=DOUBLE}, ",
        "#{cfmOtherFee2,jdbcType=DOUBLE}, #{cfmFee,jdbcType=DOUBLE}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(TradeAdditionalDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_detail`
     *
     * @mbggenerated
     */
    @InsertProvider(type=TradeAdditionalDetailSqlProvider.class, method="insertSelective")
    int insertSelective(TradeAdditionalDetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_detail`
     *
     * @mbggenerated
     */
    @SelectProvider(type=TradeAdditionalDetailSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="detail_id", property="detailId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="additional_id", property="additionalId", jdbcType=JdbcType.VARCHAR),
        @Result(column="daily_date", property="dailyDate", jdbcType=JdbcType.DATE),
        @Result(column="over_time", property="overTime", jdbcType=JdbcType.INTEGER),
        @Result(column="over_time_price", property="overTimePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="unit_time_price", property="unitTimePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_distance", property="overDistance", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_distance_price", property="overDistancePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="unit_distance_price", property="unitDistancePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_day", property="overDay", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_day_price", property="overDayPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="unit_day_price", property="unitDayPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_wait_time_cost", property="overWaitTimeCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="other_fee1", property="otherFee1", jdbcType=JdbcType.DOUBLE),
        @Result(column="other_fee2", property="otherFee2", jdbcType=JdbcType.DOUBLE),
        @Result(column="applyFee", property="applyfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="cfm_over_time", property="cfmOverTime", jdbcType=JdbcType.INTEGER),
        @Result(column="cfm_over_distance", property="cfmOverDistance", jdbcType=JdbcType.DOUBLE),
        @Result(column="cfm_over_day", property="cfmOverDay", jdbcType=JdbcType.DOUBLE),
        @Result(column="cfm_other_fee1", property="cfmOtherFee1", jdbcType=JdbcType.DOUBLE),
        @Result(column="cfm_other_fee2", property="cfmOtherFee2", jdbcType=JdbcType.DOUBLE),
        @Result(column="cfm_fee", property="cfmFee", jdbcType=JdbcType.DOUBLE),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TradeAdditionalDetail> selectByExample(TradeAdditionalDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_detail`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "detail_id, additional_id, daily_date, over_time, over_time_price, unit_time_price, ",
        "over_distance, over_distance_price, unit_distance_price, over_day, over_day_price, ",
        "unit_day_price, over_wait_time_cost, other_fee1, other_fee2, applyFee, cfm_over_time, ",
        "cfm_over_distance, cfm_over_day, cfm_other_fee1, cfm_other_fee2, cfm_fee, update_time, ",
        "create_time",
        "from `trade_additional_detail`",
        "where detail_id = #{detailId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="detail_id", property="detailId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="additional_id", property="additionalId", jdbcType=JdbcType.VARCHAR),
        @Result(column="daily_date", property="dailyDate", jdbcType=JdbcType.DATE),
        @Result(column="over_time", property="overTime", jdbcType=JdbcType.INTEGER),
        @Result(column="over_time_price", property="overTimePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="unit_time_price", property="unitTimePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_distance", property="overDistance", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_distance_price", property="overDistancePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="unit_distance_price", property="unitDistancePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_day", property="overDay", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_day_price", property="overDayPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="unit_day_price", property="unitDayPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_wait_time_cost", property="overWaitTimeCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="other_fee1", property="otherFee1", jdbcType=JdbcType.DOUBLE),
        @Result(column="other_fee2", property="otherFee2", jdbcType=JdbcType.DOUBLE),
        @Result(column="applyFee", property="applyfee", jdbcType=JdbcType.DOUBLE),
        @Result(column="cfm_over_time", property="cfmOverTime", jdbcType=JdbcType.INTEGER),
        @Result(column="cfm_over_distance", property="cfmOverDistance", jdbcType=JdbcType.DOUBLE),
        @Result(column="cfm_over_day", property="cfmOverDay", jdbcType=JdbcType.DOUBLE),
        @Result(column="cfm_other_fee1", property="cfmOtherFee1", jdbcType=JdbcType.DOUBLE),
        @Result(column="cfm_other_fee2", property="cfmOtherFee2", jdbcType=JdbcType.DOUBLE),
        @Result(column="cfm_fee", property="cfmFee", jdbcType=JdbcType.DOUBLE),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    TradeAdditionalDetail selectByPrimaryKey(String detailId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_detail`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TradeAdditionalDetailSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TradeAdditionalDetail record, @Param("example") TradeAdditionalDetailExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_detail`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TradeAdditionalDetailSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TradeAdditionalDetail record);
}