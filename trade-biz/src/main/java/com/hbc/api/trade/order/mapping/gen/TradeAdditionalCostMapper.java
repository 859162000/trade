package com.hbc.api.trade.order.mapping.gen;

import com.hbc.api.trade.order.mapping.gen.bean.TradeAdditionalCost;
import com.hbc.api.trade.order.mapping.gen.bean.TradeAdditionalCostExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TradeAdditionalCostMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_cost`
     *
     * @mbggenerated
     */
    @SelectProvider(type=TradeAdditionalCostSqlProvider.class, method="countByExample")
    int countByExample(TradeAdditionalCostExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_cost`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=TradeAdditionalCostSqlProvider.class, method="deleteByExample")
    int deleteByExample(TradeAdditionalCostExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_cost`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `trade_additional_cost`",
        "where additional_no = #{additionalNo,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String additionalNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_cost`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `trade_additional_cost` (additional_no, guide_id, ",
        "addition_status, order_no, ",
        "apply_price, over_time_cost, ",
        "over_distance_cost, over_day_cost, ",
        "addition_is_read, over_pay_cost, ",
        "over_wait_time_cost, other_cost1, ",
        "other_cost2, update_time, ",
        "create_time, reason)",
        "values (#{additionalNo,jdbcType=VARCHAR}, #{guideId,jdbcType=INTEGER}, ",
        "#{additionStatus,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, ",
        "#{applyPrice,jdbcType=DOUBLE}, #{overTimeCost,jdbcType=DOUBLE}, ",
        "#{overDistanceCost,jdbcType=DOUBLE}, #{overDayCost,jdbcType=DOUBLE}, ",
        "#{additionIsRead,jdbcType=INTEGER}, #{overPayCost,jdbcType=DOUBLE}, ",
        "#{overWaitTimeCost,jdbcType=DOUBLE}, #{otherCost1,jdbcType=DOUBLE}, ",
        "#{otherCost2,jdbcType=DOUBLE}, #{updateTime,jdbcType=TIMESTAMP}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{reason,jdbcType=LONGVARCHAR})"
    })
    int insert(TradeAdditionalCost record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_cost`
     *
     * @mbggenerated
     */
    @InsertProvider(type=TradeAdditionalCostSqlProvider.class, method="insertSelective")
    int insertSelective(TradeAdditionalCost record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_cost`
     *
     * @mbggenerated
     */
    @SelectProvider(type=TradeAdditionalCostSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="additional_no", property="additionalNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.INTEGER),
        @Result(column="addition_status", property="additionStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="apply_price", property="applyPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_time_cost", property="overTimeCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_distance_cost", property="overDistanceCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_day_cost", property="overDayCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="addition_is_read", property="additionIsRead", jdbcType=JdbcType.INTEGER),
        @Result(column="over_pay_cost", property="overPayCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_wait_time_cost", property="overWaitTimeCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="other_cost1", property="otherCost1", jdbcType=JdbcType.DOUBLE),
        @Result(column="other_cost2", property="otherCost2", jdbcType=JdbcType.DOUBLE),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="reason", property="reason", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<TradeAdditionalCost> selectByExampleWithBLOBs(TradeAdditionalCostExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_cost`
     *
     * @mbggenerated
     */
    @SelectProvider(type=TradeAdditionalCostSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="additional_no", property="additionalNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.INTEGER),
        @Result(column="addition_status", property="additionStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="apply_price", property="applyPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_time_cost", property="overTimeCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_distance_cost", property="overDistanceCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_day_cost", property="overDayCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="addition_is_read", property="additionIsRead", jdbcType=JdbcType.INTEGER),
        @Result(column="over_pay_cost", property="overPayCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_wait_time_cost", property="overWaitTimeCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="other_cost1", property="otherCost1", jdbcType=JdbcType.DOUBLE),
        @Result(column="other_cost2", property="otherCost2", jdbcType=JdbcType.DOUBLE),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TradeAdditionalCost> selectByExample(TradeAdditionalCostExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_cost`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "additional_no, guide_id, addition_status, order_no, apply_price, over_time_cost, ",
        "over_distance_cost, over_day_cost, addition_is_read, over_pay_cost, over_wait_time_cost, ",
        "other_cost1, other_cost2, update_time, create_time, reason",
        "from `trade_additional_cost`",
        "where additional_no = #{additionalNo,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="additional_no", property="additionalNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.INTEGER),
        @Result(column="addition_status", property="additionStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="apply_price", property="applyPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_time_cost", property="overTimeCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_distance_cost", property="overDistanceCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_day_cost", property="overDayCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="addition_is_read", property="additionIsRead", jdbcType=JdbcType.INTEGER),
        @Result(column="over_pay_cost", property="overPayCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="over_wait_time_cost", property="overWaitTimeCost", jdbcType=JdbcType.DOUBLE),
        @Result(column="other_cost1", property="otherCost1", jdbcType=JdbcType.DOUBLE),
        @Result(column="other_cost2", property="otherCost2", jdbcType=JdbcType.DOUBLE),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="reason", property="reason", jdbcType=JdbcType.LONGVARCHAR)
    })
    TradeAdditionalCost selectByPrimaryKey(String additionalNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_cost`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TradeAdditionalCostSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TradeAdditionalCost record, @Param("example") TradeAdditionalCostExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_additional_cost`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TradeAdditionalCostSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TradeAdditionalCost record);
}