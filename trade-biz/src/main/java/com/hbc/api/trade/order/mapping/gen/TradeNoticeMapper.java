package com.hbc.api.trade.order.mapping.gen;

import com.hbc.api.trade.order.mapping.gen.bean.TradeNotice;
import com.hbc.api.trade.order.mapping.gen.bean.TradeNoticeExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TradeNoticeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_notice`
     *
     * @mbggenerated
     */
    @SelectProvider(type=TradeNoticeSqlProvider.class, method="countByExample")
    int countByExample(TradeNoticeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_notice`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=TradeNoticeSqlProvider.class, method="deleteByExample")
    int deleteByExample(TradeNoticeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_notice`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `trade_notice`",
        "where notice_no = #{noticeNo,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String noticeNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_notice`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `trade_notice` (notice_no, order_no, ",
        "user_id, user_type, ",
        "notice_num, notice_type, ",
        "flag, notice_target, ",
        "notice_content, plan_time, ",
        "send_time, alarm_type, ",
        "alarm_status, update_time, ",
        "create_time)",
        "values (#{noticeNo,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, ",
        "#{userId,jdbcType=INTEGER}, #{userType,jdbcType=INTEGER}, ",
        "#{noticeNum,jdbcType=INTEGER}, #{noticeType,jdbcType=INTEGER}, ",
        "#{flag,jdbcType=INTEGER}, #{noticeTarget,jdbcType=VARCHAR}, ",
        "#{noticeContent,jdbcType=VARCHAR}, #{planTime,jdbcType=TIMESTAMP}, ",
        "#{sendTime,jdbcType=TIMESTAMP}, #{alarmType,jdbcType=INTEGER}, ",
        "#{alarmStatus,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, ",
        "#{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(TradeNotice record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_notice`
     *
     * @mbggenerated
     */
    @InsertProvider(type=TradeNoticeSqlProvider.class, method="insertSelective")
    int insertSelective(TradeNotice record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_notice`
     *
     * @mbggenerated
     */
    @SelectProvider(type=TradeNoticeSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="notice_no", property="noticeNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.INTEGER),
        @Result(column="notice_num", property="noticeNum", jdbcType=JdbcType.INTEGER),
        @Result(column="notice_type", property="noticeType", jdbcType=JdbcType.INTEGER),
        @Result(column="flag", property="flag", jdbcType=JdbcType.INTEGER),
        @Result(column="notice_target", property="noticeTarget", jdbcType=JdbcType.VARCHAR),
        @Result(column="notice_content", property="noticeContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="plan_time", property="planTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="send_time", property="sendTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="alarm_type", property="alarmType", jdbcType=JdbcType.INTEGER),
        @Result(column="alarm_status", property="alarmStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TradeNotice> selectByExample(TradeNoticeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_notice`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "notice_no, order_no, user_id, user_type, notice_num, notice_type, flag, notice_target, ",
        "notice_content, plan_time, send_time, alarm_type, alarm_status, update_time, ",
        "create_time",
        "from `trade_notice`",
        "where notice_no = #{noticeNo,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="notice_no", property="noticeNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="user_type", property="userType", jdbcType=JdbcType.INTEGER),
        @Result(column="notice_num", property="noticeNum", jdbcType=JdbcType.INTEGER),
        @Result(column="notice_type", property="noticeType", jdbcType=JdbcType.INTEGER),
        @Result(column="flag", property="flag", jdbcType=JdbcType.INTEGER),
        @Result(column="notice_target", property="noticeTarget", jdbcType=JdbcType.VARCHAR),
        @Result(column="notice_content", property="noticeContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="plan_time", property="planTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="send_time", property="sendTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="alarm_type", property="alarmType", jdbcType=JdbcType.INTEGER),
        @Result(column="alarm_status", property="alarmStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    TradeNotice selectByPrimaryKey(String noticeNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_notice`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TradeNoticeSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TradeNotice record, @Param("example") TradeNoticeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_notice`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TradeNoticeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TradeNotice record);
}