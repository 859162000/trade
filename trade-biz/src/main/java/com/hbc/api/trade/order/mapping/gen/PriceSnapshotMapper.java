package com.hbc.api.trade.order.mapping.gen;

import com.hbc.api.trade.order.mapping.gen.bean.PriceSnapshot;
import com.hbc.api.trade.order.mapping.gen.bean.PriceSnapshotExample;
import com.hbc.api.trade.order.mapping.gen.bean.PriceSnapshotWithBLOBs;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface PriceSnapshotMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `price_snapshot`
     *
     * @mbggenerated
     */
    @SelectProvider(type=PriceSnapshotSqlProvider.class, method="countByExample")
    int countByExample(PriceSnapshotExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `price_snapshot`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=PriceSnapshotSqlProvider.class, method="deleteByExample")
    int deleteByExample(PriceSnapshotExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `price_snapshot`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `price_snapshot`",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `price_snapshot`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `price_snapshot` (id, create_time, ",
        "update_time, service_type, ",
        "channel, pricemark, ",
        "currency_rate, car_type, ",
        "seat_category, city_id, ",
        "airport_id, airport_code, ",
        "service_date, start_location, ",
        "end_location, is_urgent, ",
        "sys_price, ticket_price, ",
        "guide_price, channel_price, ",
        "sys_slices, ticket_slices, ",
        "channel_slices, guide_slices, ",
        "price_factor, distance, ",
        "est_time, charge_per_hour, ",
        "charge_per_km, charge_per_day, ",
        "charge_per_minute, expired_time, ",
        "status, price_version, ",
        "sys_detail, guide_detail, ",
        "channel_detail, rule)",
        "values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{serviceType,jdbcType=SMALLINT}, ",
        "#{channel,jdbcType=INTEGER}, #{pricemark,jdbcType=VARCHAR}, ",
        "#{currencyRate,jdbcType=REAL}, #{carType,jdbcType=SMALLINT}, ",
        "#{seatCategory,jdbcType=SMALLINT}, #{cityId,jdbcType=INTEGER}, ",
        "#{airportId,jdbcType=INTEGER}, #{airportCode,jdbcType=VARCHAR}, ",
        "#{serviceDate,jdbcType=VARCHAR}, #{startLocation,jdbcType=VARCHAR}, ",
        "#{endLocation,jdbcType=VARCHAR}, #{isUrgent,jdbcType=TINYINT}, ",
        "#{sysPrice,jdbcType=DOUBLE}, #{ticketPrice,jdbcType=DOUBLE}, ",
        "#{guidePrice,jdbcType=DOUBLE}, #{channelPrice,jdbcType=DOUBLE}, ",
        "#{sysSlices,jdbcType=VARCHAR}, #{ticketSlices,jdbcType=VARCHAR}, ",
        "#{channelSlices,jdbcType=VARCHAR}, #{guideSlices,jdbcType=VARCHAR}, ",
        "#{priceFactor,jdbcType=VARCHAR}, #{distance,jdbcType=DOUBLE}, ",
        "#{estTime,jdbcType=INTEGER}, #{chargePerHour,jdbcType=DOUBLE}, ",
        "#{chargePerKm,jdbcType=DOUBLE}, #{chargePerDay,jdbcType=DOUBLE}, ",
        "#{chargePerMinute,jdbcType=DOUBLE}, #{expiredTime,jdbcType=TIMESTAMP}, ",
        "#{status,jdbcType=TINYINT}, #{priceVersion,jdbcType=INTEGER}, ",
        "#{sysDetail,jdbcType=LONGVARCHAR}, #{guideDetail,jdbcType=LONGVARCHAR}, ",
        "#{channelDetail,jdbcType=LONGVARCHAR}, #{rule,jdbcType=LONGVARCHAR})"
    })
    int insert(PriceSnapshotWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `price_snapshot`
     *
     * @mbggenerated
     */
    @InsertProvider(type=PriceSnapshotSqlProvider.class, method="insertSelective")
    int insertSelective(PriceSnapshotWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `price_snapshot`
     *
     * @mbggenerated
     */
    @SelectProvider(type=PriceSnapshotSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="service_type", property="serviceType", jdbcType=JdbcType.SMALLINT),
        @Result(column="channel", property="channel", jdbcType=JdbcType.INTEGER),
        @Result(column="pricemark", property="pricemark", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency_rate", property="currencyRate", jdbcType=JdbcType.REAL),
        @Result(column="car_type", property="carType", jdbcType=JdbcType.SMALLINT),
        @Result(column="seat_category", property="seatCategory", jdbcType=JdbcType.SMALLINT),
        @Result(column="city_id", property="cityId", jdbcType=JdbcType.INTEGER),
        @Result(column="airport_id", property="airportId", jdbcType=JdbcType.INTEGER),
        @Result(column="airport_code", property="airportCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="service_date", property="serviceDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="start_location", property="startLocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="end_location", property="endLocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_urgent", property="isUrgent", jdbcType=JdbcType.TINYINT),
        @Result(column="sys_price", property="sysPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="ticket_price", property="ticketPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="guide_price", property="guidePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="channel_price", property="channelPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="sys_slices", property="sysSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="ticket_slices", property="ticketSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="channel_slices", property="channelSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_slices", property="guideSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="price_factor", property="priceFactor", jdbcType=JdbcType.VARCHAR),
        @Result(column="distance", property="distance", jdbcType=JdbcType.DOUBLE),
        @Result(column="est_time", property="estTime", jdbcType=JdbcType.INTEGER),
        @Result(column="charge_per_hour", property="chargePerHour", jdbcType=JdbcType.DOUBLE),
        @Result(column="charge_per_km", property="chargePerKm", jdbcType=JdbcType.DOUBLE),
        @Result(column="charge_per_day", property="chargePerDay", jdbcType=JdbcType.DOUBLE),
        @Result(column="charge_per_minute", property="chargePerMinute", jdbcType=JdbcType.DOUBLE),
        @Result(column="expired_time", property="expiredTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="price_version", property="priceVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="sys_detail", property="sysDetail", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="guide_detail", property="guideDetail", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="channel_detail", property="channelDetail", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="rule", property="rule", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<PriceSnapshotWithBLOBs> selectByExampleWithBLOBs(PriceSnapshotExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `price_snapshot`
     *
     * @mbggenerated
     */
    @SelectProvider(type=PriceSnapshotSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="service_type", property="serviceType", jdbcType=JdbcType.SMALLINT),
        @Result(column="channel", property="channel", jdbcType=JdbcType.INTEGER),
        @Result(column="pricemark", property="pricemark", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency_rate", property="currencyRate", jdbcType=JdbcType.REAL),
        @Result(column="car_type", property="carType", jdbcType=JdbcType.SMALLINT),
        @Result(column="seat_category", property="seatCategory", jdbcType=JdbcType.SMALLINT),
        @Result(column="city_id", property="cityId", jdbcType=JdbcType.INTEGER),
        @Result(column="airport_id", property="airportId", jdbcType=JdbcType.INTEGER),
        @Result(column="airport_code", property="airportCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="service_date", property="serviceDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="start_location", property="startLocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="end_location", property="endLocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_urgent", property="isUrgent", jdbcType=JdbcType.TINYINT),
        @Result(column="sys_price", property="sysPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="ticket_price", property="ticketPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="guide_price", property="guidePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="channel_price", property="channelPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="sys_slices", property="sysSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="ticket_slices", property="ticketSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="channel_slices", property="channelSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_slices", property="guideSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="price_factor", property="priceFactor", jdbcType=JdbcType.VARCHAR),
        @Result(column="distance", property="distance", jdbcType=JdbcType.DOUBLE),
        @Result(column="est_time", property="estTime", jdbcType=JdbcType.INTEGER),
        @Result(column="charge_per_hour", property="chargePerHour", jdbcType=JdbcType.DOUBLE),
        @Result(column="charge_per_km", property="chargePerKm", jdbcType=JdbcType.DOUBLE),
        @Result(column="charge_per_day", property="chargePerDay", jdbcType=JdbcType.DOUBLE),
        @Result(column="charge_per_minute", property="chargePerMinute", jdbcType=JdbcType.DOUBLE),
        @Result(column="expired_time", property="expiredTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="price_version", property="priceVersion", jdbcType=JdbcType.INTEGER)
    })
    List<PriceSnapshot> selectByExample(PriceSnapshotExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `price_snapshot`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, create_time, update_time, service_type, channel, pricemark, currency_rate, ",
        "car_type, seat_category, city_id, airport_id, airport_code, service_date, start_location, ",
        "end_location, is_urgent, sys_price, ticket_price, guide_price, channel_price, ",
        "sys_slices, ticket_slices, channel_slices, guide_slices, price_factor, distance, ",
        "est_time, charge_per_hour, charge_per_km, charge_per_day, charge_per_minute, ",
        "expired_time, status, price_version, sys_detail, guide_detail, channel_detail, ",
        "rule",
        "from `price_snapshot`",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="service_type", property="serviceType", jdbcType=JdbcType.SMALLINT),
        @Result(column="channel", property="channel", jdbcType=JdbcType.INTEGER),
        @Result(column="pricemark", property="pricemark", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency_rate", property="currencyRate", jdbcType=JdbcType.REAL),
        @Result(column="car_type", property="carType", jdbcType=JdbcType.SMALLINT),
        @Result(column="seat_category", property="seatCategory", jdbcType=JdbcType.SMALLINT),
        @Result(column="city_id", property="cityId", jdbcType=JdbcType.INTEGER),
        @Result(column="airport_id", property="airportId", jdbcType=JdbcType.INTEGER),
        @Result(column="airport_code", property="airportCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="service_date", property="serviceDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="start_location", property="startLocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="end_location", property="endLocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_urgent", property="isUrgent", jdbcType=JdbcType.TINYINT),
        @Result(column="sys_price", property="sysPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="ticket_price", property="ticketPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="guide_price", property="guidePrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="channel_price", property="channelPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="sys_slices", property="sysSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="ticket_slices", property="ticketSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="channel_slices", property="channelSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_slices", property="guideSlices", jdbcType=JdbcType.VARCHAR),
        @Result(column="price_factor", property="priceFactor", jdbcType=JdbcType.VARCHAR),
        @Result(column="distance", property="distance", jdbcType=JdbcType.DOUBLE),
        @Result(column="est_time", property="estTime", jdbcType=JdbcType.INTEGER),
        @Result(column="charge_per_hour", property="chargePerHour", jdbcType=JdbcType.DOUBLE),
        @Result(column="charge_per_km", property="chargePerKm", jdbcType=JdbcType.DOUBLE),
        @Result(column="charge_per_day", property="chargePerDay", jdbcType=JdbcType.DOUBLE),
        @Result(column="charge_per_minute", property="chargePerMinute", jdbcType=JdbcType.DOUBLE),
        @Result(column="expired_time", property="expiredTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="price_version", property="priceVersion", jdbcType=JdbcType.INTEGER),
        @Result(column="sys_detail", property="sysDetail", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="guide_detail", property="guideDetail", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="channel_detail", property="channelDetail", jdbcType=JdbcType.LONGVARCHAR),
        @Result(column="rule", property="rule", jdbcType=JdbcType.LONGVARCHAR)
    })
    PriceSnapshotWithBLOBs selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `price_snapshot`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=PriceSnapshotSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") PriceSnapshotWithBLOBs record, @Param("example") PriceSnapshotExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `price_snapshot`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=PriceSnapshotSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(PriceSnapshotWithBLOBs record);
}