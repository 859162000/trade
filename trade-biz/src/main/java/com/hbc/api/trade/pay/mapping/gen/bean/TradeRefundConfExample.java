package com.hbc.api.trade.pay.mapping.gen.bean;

import com.hbc.api.trade.bdata.common.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TradeRefundConfExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public TradeRefundConfExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRefundConfNoIsNull() {
            addCriterion("refund_conf_no is null");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoIsNotNull() {
            addCriterion("refund_conf_no is not null");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoEqualTo(String value) {
            addCriterion("refund_conf_no =", value, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoNotEqualTo(String value) {
            addCriterion("refund_conf_no <>", value, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoGreaterThan(String value) {
            addCriterion("refund_conf_no >", value, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoGreaterThanOrEqualTo(String value) {
            addCriterion("refund_conf_no >=", value, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoLessThan(String value) {
            addCriterion("refund_conf_no <", value, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoLessThanOrEqualTo(String value) {
            addCriterion("refund_conf_no <=", value, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoLike(String value) {
            addCriterion("refund_conf_no like", value, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoNotLike(String value) {
            addCriterion("refund_conf_no not like", value, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoIn(List<String> values) {
            addCriterion("refund_conf_no in", values, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoNotIn(List<String> values) {
            addCriterion("refund_conf_no not in", values, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoBetween(String value1, String value2) {
            addCriterion("refund_conf_no between", value1, value2, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andRefundConfNoNotBetween(String value1, String value2) {
            addCriterion("refund_conf_no not between", value1, value2, "refundConfNo");
            return (Criteria) this;
        }

        public Criteria andStartHourIsNull() {
            addCriterion("start_hour is null");
            return (Criteria) this;
        }

        public Criteria andStartHourIsNotNull() {
            addCriterion("start_hour is not null");
            return (Criteria) this;
        }

        public Criteria andStartHourEqualTo(Integer value) {
            addCriterion("start_hour =", value, "startHour");
            return (Criteria) this;
        }

        public Criteria andStartHourNotEqualTo(Integer value) {
            addCriterion("start_hour <>", value, "startHour");
            return (Criteria) this;
        }

        public Criteria andStartHourGreaterThan(Integer value) {
            addCriterion("start_hour >", value, "startHour");
            return (Criteria) this;
        }

        public Criteria andStartHourGreaterThanOrEqualTo(Integer value) {
            addCriterion("start_hour >=", value, "startHour");
            return (Criteria) this;
        }

        public Criteria andStartHourLessThan(Integer value) {
            addCriterion("start_hour <", value, "startHour");
            return (Criteria) this;
        }

        public Criteria andStartHourLessThanOrEqualTo(Integer value) {
            addCriterion("start_hour <=", value, "startHour");
            return (Criteria) this;
        }

        public Criteria andStartHourIn(List<Integer> values) {
            addCriterion("start_hour in", values, "startHour");
            return (Criteria) this;
        }

        public Criteria andStartHourNotIn(List<Integer> values) {
            addCriterion("start_hour not in", values, "startHour");
            return (Criteria) this;
        }

        public Criteria andStartHourBetween(Integer value1, Integer value2) {
            addCriterion("start_hour between", value1, value2, "startHour");
            return (Criteria) this;
        }

        public Criteria andStartHourNotBetween(Integer value1, Integer value2) {
            addCriterion("start_hour not between", value1, value2, "startHour");
            return (Criteria) this;
        }

        public Criteria andIsContainStartIsNull() {
            addCriterion("is_contain_start is null");
            return (Criteria) this;
        }

        public Criteria andIsContainStartIsNotNull() {
            addCriterion("is_contain_start is not null");
            return (Criteria) this;
        }

        public Criteria andIsContainStartEqualTo(Integer value) {
            addCriterion("is_contain_start =", value, "isContainStart");
            return (Criteria) this;
        }

        public Criteria andIsContainStartNotEqualTo(Integer value) {
            addCriterion("is_contain_start <>", value, "isContainStart");
            return (Criteria) this;
        }

        public Criteria andIsContainStartGreaterThan(Integer value) {
            addCriterion("is_contain_start >", value, "isContainStart");
            return (Criteria) this;
        }

        public Criteria andIsContainStartGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_contain_start >=", value, "isContainStart");
            return (Criteria) this;
        }

        public Criteria andIsContainStartLessThan(Integer value) {
            addCriterion("is_contain_start <", value, "isContainStart");
            return (Criteria) this;
        }

        public Criteria andIsContainStartLessThanOrEqualTo(Integer value) {
            addCriterion("is_contain_start <=", value, "isContainStart");
            return (Criteria) this;
        }

        public Criteria andIsContainStartIn(List<Integer> values) {
            addCriterion("is_contain_start in", values, "isContainStart");
            return (Criteria) this;
        }

        public Criteria andIsContainStartNotIn(List<Integer> values) {
            addCriterion("is_contain_start not in", values, "isContainStart");
            return (Criteria) this;
        }

        public Criteria andIsContainStartBetween(Integer value1, Integer value2) {
            addCriterion("is_contain_start between", value1, value2, "isContainStart");
            return (Criteria) this;
        }

        public Criteria andIsContainStartNotBetween(Integer value1, Integer value2) {
            addCriterion("is_contain_start not between", value1, value2, "isContainStart");
            return (Criteria) this;
        }

        public Criteria andEndHourIsNull() {
            addCriterion("end_hour is null");
            return (Criteria) this;
        }

        public Criteria andEndHourIsNotNull() {
            addCriterion("end_hour is not null");
            return (Criteria) this;
        }

        public Criteria andEndHourEqualTo(Integer value) {
            addCriterion("end_hour =", value, "endHour");
            return (Criteria) this;
        }

        public Criteria andEndHourNotEqualTo(Integer value) {
            addCriterion("end_hour <>", value, "endHour");
            return (Criteria) this;
        }

        public Criteria andEndHourGreaterThan(Integer value) {
            addCriterion("end_hour >", value, "endHour");
            return (Criteria) this;
        }

        public Criteria andEndHourGreaterThanOrEqualTo(Integer value) {
            addCriterion("end_hour >=", value, "endHour");
            return (Criteria) this;
        }

        public Criteria andEndHourLessThan(Integer value) {
            addCriterion("end_hour <", value, "endHour");
            return (Criteria) this;
        }

        public Criteria andEndHourLessThanOrEqualTo(Integer value) {
            addCriterion("end_hour <=", value, "endHour");
            return (Criteria) this;
        }

        public Criteria andEndHourIn(List<Integer> values) {
            addCriterion("end_hour in", values, "endHour");
            return (Criteria) this;
        }

        public Criteria andEndHourNotIn(List<Integer> values) {
            addCriterion("end_hour not in", values, "endHour");
            return (Criteria) this;
        }

        public Criteria andEndHourBetween(Integer value1, Integer value2) {
            addCriterion("end_hour between", value1, value2, "endHour");
            return (Criteria) this;
        }

        public Criteria andEndHourNotBetween(Integer value1, Integer value2) {
            addCriterion("end_hour not between", value1, value2, "endHour");
            return (Criteria) this;
        }

        public Criteria andIsContainEndIsNull() {
            addCriterion("is_contain_end is null");
            return (Criteria) this;
        }

        public Criteria andIsContainEndIsNotNull() {
            addCriterion("is_contain_end is not null");
            return (Criteria) this;
        }

        public Criteria andIsContainEndEqualTo(Integer value) {
            addCriterion("is_contain_end =", value, "isContainEnd");
            return (Criteria) this;
        }

        public Criteria andIsContainEndNotEqualTo(Integer value) {
            addCriterion("is_contain_end <>", value, "isContainEnd");
            return (Criteria) this;
        }

        public Criteria andIsContainEndGreaterThan(Integer value) {
            addCriterion("is_contain_end >", value, "isContainEnd");
            return (Criteria) this;
        }

        public Criteria andIsContainEndGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_contain_end >=", value, "isContainEnd");
            return (Criteria) this;
        }

        public Criteria andIsContainEndLessThan(Integer value) {
            addCriterion("is_contain_end <", value, "isContainEnd");
            return (Criteria) this;
        }

        public Criteria andIsContainEndLessThanOrEqualTo(Integer value) {
            addCriterion("is_contain_end <=", value, "isContainEnd");
            return (Criteria) this;
        }

        public Criteria andIsContainEndIn(List<Integer> values) {
            addCriterion("is_contain_end in", values, "isContainEnd");
            return (Criteria) this;
        }

        public Criteria andIsContainEndNotIn(List<Integer> values) {
            addCriterion("is_contain_end not in", values, "isContainEnd");
            return (Criteria) this;
        }

        public Criteria andIsContainEndBetween(Integer value1, Integer value2) {
            addCriterion("is_contain_end between", value1, value2, "isContainEnd");
            return (Criteria) this;
        }

        public Criteria andIsContainEndNotBetween(Integer value1, Integer value2) {
            addCriterion("is_contain_end not between", value1, value2, "isContainEnd");
            return (Criteria) this;
        }

        public Criteria andUserRatioIsNull() {
            addCriterion("user_ratio is null");
            return (Criteria) this;
        }

        public Criteria andUserRatioIsNotNull() {
            addCriterion("user_ratio is not null");
            return (Criteria) this;
        }

        public Criteria andUserRatioEqualTo(Double value) {
            addCriterion("user_ratio =", value, "userRatio");
            return (Criteria) this;
        }

        public Criteria andUserRatioNotEqualTo(Double value) {
            addCriterion("user_ratio <>", value, "userRatio");
            return (Criteria) this;
        }

        public Criteria andUserRatioGreaterThan(Double value) {
            addCriterion("user_ratio >", value, "userRatio");
            return (Criteria) this;
        }

        public Criteria andUserRatioGreaterThanOrEqualTo(Double value) {
            addCriterion("user_ratio >=", value, "userRatio");
            return (Criteria) this;
        }

        public Criteria andUserRatioLessThan(Double value) {
            addCriterion("user_ratio <", value, "userRatio");
            return (Criteria) this;
        }

        public Criteria andUserRatioLessThanOrEqualTo(Double value) {
            addCriterion("user_ratio <=", value, "userRatio");
            return (Criteria) this;
        }

        public Criteria andUserRatioIn(List<Double> values) {
            addCriterion("user_ratio in", values, "userRatio");
            return (Criteria) this;
        }

        public Criteria andUserRatioNotIn(List<Double> values) {
            addCriterion("user_ratio not in", values, "userRatio");
            return (Criteria) this;
        }

        public Criteria andUserRatioBetween(Double value1, Double value2) {
            addCriterion("user_ratio between", value1, value2, "userRatio");
            return (Criteria) this;
        }

        public Criteria andUserRatioNotBetween(Double value1, Double value2) {
            addCriterion("user_ratio not between", value1, value2, "userRatio");
            return (Criteria) this;
        }

        public Criteria andGuideRatioIsNull() {
            addCriterion("guide_ratio is null");
            return (Criteria) this;
        }

        public Criteria andGuideRatioIsNotNull() {
            addCriterion("guide_ratio is not null");
            return (Criteria) this;
        }

        public Criteria andGuideRatioEqualTo(Double value) {
            addCriterion("guide_ratio =", value, "guideRatio");
            return (Criteria) this;
        }

        public Criteria andGuideRatioNotEqualTo(Double value) {
            addCriterion("guide_ratio <>", value, "guideRatio");
            return (Criteria) this;
        }

        public Criteria andGuideRatioGreaterThan(Double value) {
            addCriterion("guide_ratio >", value, "guideRatio");
            return (Criteria) this;
        }

        public Criteria andGuideRatioGreaterThanOrEqualTo(Double value) {
            addCriterion("guide_ratio >=", value, "guideRatio");
            return (Criteria) this;
        }

        public Criteria andGuideRatioLessThan(Double value) {
            addCriterion("guide_ratio <", value, "guideRatio");
            return (Criteria) this;
        }

        public Criteria andGuideRatioLessThanOrEqualTo(Double value) {
            addCriterion("guide_ratio <=", value, "guideRatio");
            return (Criteria) this;
        }

        public Criteria andGuideRatioIn(List<Double> values) {
            addCriterion("guide_ratio in", values, "guideRatio");
            return (Criteria) this;
        }

        public Criteria andGuideRatioNotIn(List<Double> values) {
            addCriterion("guide_ratio not in", values, "guideRatio");
            return (Criteria) this;
        }

        public Criteria andGuideRatioBetween(Double value1, Double value2) {
            addCriterion("guide_ratio between", value1, value2, "guideRatio");
            return (Criteria) this;
        }

        public Criteria andGuideRatioNotBetween(Double value1, Double value2) {
            addCriterion("guide_ratio not between", value1, value2, "guideRatio");
            return (Criteria) this;
        }

        public Criteria andRefundTypeIsNull() {
            addCriterion("refund_type is null");
            return (Criteria) this;
        }

        public Criteria andRefundTypeIsNotNull() {
            addCriterion("refund_type is not null");
            return (Criteria) this;
        }

        public Criteria andRefundTypeEqualTo(Integer value) {
            addCriterion("refund_type =", value, "refundType");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNotEqualTo(Integer value) {
            addCriterion("refund_type <>", value, "refundType");
            return (Criteria) this;
        }

        public Criteria andRefundTypeGreaterThan(Integer value) {
            addCriterion("refund_type >", value, "refundType");
            return (Criteria) this;
        }

        public Criteria andRefundTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("refund_type >=", value, "refundType");
            return (Criteria) this;
        }

        public Criteria andRefundTypeLessThan(Integer value) {
            addCriterion("refund_type <", value, "refundType");
            return (Criteria) this;
        }

        public Criteria andRefundTypeLessThanOrEqualTo(Integer value) {
            addCriterion("refund_type <=", value, "refundType");
            return (Criteria) this;
        }

        public Criteria andRefundTypeIn(List<Integer> values) {
            addCriterion("refund_type in", values, "refundType");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNotIn(List<Integer> values) {
            addCriterion("refund_type not in", values, "refundType");
            return (Criteria) this;
        }

        public Criteria andRefundTypeBetween(Integer value1, Integer value2) {
            addCriterion("refund_type between", value1, value2, "refundType");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("refund_type not between", value1, value2, "refundType");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameIsNull() {
            addCriterion("refund_type_name is null");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameIsNotNull() {
            addCriterion("refund_type_name is not null");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameEqualTo(String value) {
            addCriterion("refund_type_name =", value, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameNotEqualTo(String value) {
            addCriterion("refund_type_name <>", value, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameGreaterThan(String value) {
            addCriterion("refund_type_name >", value, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameGreaterThanOrEqualTo(String value) {
            addCriterion("refund_type_name >=", value, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameLessThan(String value) {
            addCriterion("refund_type_name <", value, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameLessThanOrEqualTo(String value) {
            addCriterion("refund_type_name <=", value, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameLike(String value) {
            addCriterion("refund_type_name like", value, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameNotLike(String value) {
            addCriterion("refund_type_name not like", value, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameIn(List<String> values) {
            addCriterion("refund_type_name in", values, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameNotIn(List<String> values) {
            addCriterion("refund_type_name not in", values, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameBetween(String value1, String value2) {
            addCriterion("refund_type_name between", value1, value2, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andRefundTypeNameNotBetween(String value1, String value2) {
            addCriterion("refund_type_name not between", value1, value2, "refundTypeName");
            return (Criteria) this;
        }

        public Criteria andCityIdIsNull() {
            addCriterion("city_id is null");
            return (Criteria) this;
        }

        public Criteria andCityIdIsNotNull() {
            addCriterion("city_id is not null");
            return (Criteria) this;
        }

        public Criteria andCityIdEqualTo(String value) {
            addCriterion("city_id =", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotEqualTo(String value) {
            addCriterion("city_id <>", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdGreaterThan(String value) {
            addCriterion("city_id >", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdGreaterThanOrEqualTo(String value) {
            addCriterion("city_id >=", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdLessThan(String value) {
            addCriterion("city_id <", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdLessThanOrEqualTo(String value) {
            addCriterion("city_id <=", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdLike(String value) {
            addCriterion("city_id like", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotLike(String value) {
            addCriterion("city_id not like", value, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdIn(List<String> values) {
            addCriterion("city_id in", values, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotIn(List<String> values) {
            addCriterion("city_id not in", values, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdBetween(String value1, String value2) {
            addCriterion("city_id between", value1, value2, "cityId");
            return (Criteria) this;
        }

        public Criteria andCityIdNotBetween(String value1, String value2) {
            addCriterion("city_id not between", value1, value2, "cityId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `trade_refund_conf`
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}