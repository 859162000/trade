package com.hbc.api.trade.order.mapping.gen;

import com.hbc.api.trade.order.mapping.gen.bean.TradeGuideAttitudinal;
import com.hbc.api.trade.order.mapping.gen.bean.TradeGuideAttitudinalExample.Criteria;
import com.hbc.api.trade.order.mapping.gen.bean.TradeGuideAttitudinalExample.Criterion;
import com.hbc.api.trade.order.mapping.gen.bean.TradeGuideAttitudinalExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class TradeGuideAttitudinalSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_guide_attitudinal`
     *
     * @mbggenerated
     */
    public String countByExample(TradeGuideAttitudinalExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`trade_guide_attitudinal`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_guide_attitudinal`
     *
     * @mbggenerated
     */
    public String deleteByExample(TradeGuideAttitudinalExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`trade_guide_attitudinal`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_guide_attitudinal`
     *
     * @mbggenerated
     */
    public String insertSelective(TradeGuideAttitudinal record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`trade_guide_attitudinal`");
        
        if (record.getGuideId() != null) {
            sql.VALUES("guide_id", "#{guideId,jdbcType=VARCHAR}");
        }
        
        if (record.getSerialFailTimes() != null) {
            sql.VALUES("serial_fail_times", "#{serialFailTimes,jdbcType=INTEGER}");
        }
        
        if (record.getSerialFailDays() != null) {
            sql.VALUES("serial_fail_days", "#{serialFailDays,jdbcType=INTEGER}");
        }
        
        if (record.getTodayFailTimes() != null) {
            sql.VALUES("today_fail_times", "#{todayFailTimes,jdbcType=INTEGER}");
        }
        
        if (record.getTodayDealTimes() != null) {
            sql.VALUES("today_deal_times", "#{todayDealTimes,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeFailTimes() != null) {
            sql.VALUES("accumulative_fail_times", "#{accumulativeFailTimes,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeFailDays() != null) {
            sql.VALUES("accumulative_fail_days", "#{accumulativeFailDays,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeDealOrders() != null) {
            sql.VALUES("accumulative_deal_orders", "#{accumulativeDealOrders,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeExpectTimes() != null) {
            sql.VALUES("accumulative_expect_times", "#{accumulativeExpectTimes,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeDemandTimes() != null) {
            sql.VALUES("accumulative_demand_times", "#{accumulativeDemandTimes,jdbcType=INTEGER}");
        }
        
        if (record.getReptdt() != null) {
            sql.VALUES("reptdt", "#{reptdt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_guide_attitudinal`
     *
     * @mbggenerated
     */
    public String selectByExample(TradeGuideAttitudinalExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("guide_id");
        } else {
            sql.SELECT("guide_id");
        }
        sql.SELECT("serial_fail_times");
        sql.SELECT("serial_fail_days");
        sql.SELECT("today_fail_times");
        sql.SELECT("today_deal_times");
        sql.SELECT("accumulative_fail_times");
        sql.SELECT("accumulative_fail_days");
        sql.SELECT("accumulative_deal_orders");
        sql.SELECT("accumulative_expect_times");
        sql.SELECT("accumulative_demand_times");
        sql.SELECT("reptdt");
        sql.SELECT("update_time");
        sql.SELECT("create_time");
        sql.FROM("`trade_guide_attitudinal`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_guide_attitudinal`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        TradeGuideAttitudinal record = (TradeGuideAttitudinal) parameter.get("record");
        TradeGuideAttitudinalExample example = (TradeGuideAttitudinalExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`trade_guide_attitudinal`");
        
        if (record.getGuideId() != null) {
            sql.SET("guide_id = #{record.guideId,jdbcType=VARCHAR}");
        }
        
        if (record.getSerialFailTimes() != null) {
            sql.SET("serial_fail_times = #{record.serialFailTimes,jdbcType=INTEGER}");
        }
        
        if (record.getSerialFailDays() != null) {
            sql.SET("serial_fail_days = #{record.serialFailDays,jdbcType=INTEGER}");
        }
        
        if (record.getTodayFailTimes() != null) {
            sql.SET("today_fail_times = #{record.todayFailTimes,jdbcType=INTEGER}");
        }
        
        if (record.getTodayDealTimes() != null) {
            sql.SET("today_deal_times = #{record.todayDealTimes,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeFailTimes() != null) {
            sql.SET("accumulative_fail_times = #{record.accumulativeFailTimes,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeFailDays() != null) {
            sql.SET("accumulative_fail_days = #{record.accumulativeFailDays,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeDealOrders() != null) {
            sql.SET("accumulative_deal_orders = #{record.accumulativeDealOrders,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeExpectTimes() != null) {
            sql.SET("accumulative_expect_times = #{record.accumulativeExpectTimes,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeDemandTimes() != null) {
            sql.SET("accumulative_demand_times = #{record.accumulativeDemandTimes,jdbcType=INTEGER}");
        }
        
        if (record.getReptdt() != null) {
            sql.SET("reptdt = #{record.reptdt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_guide_attitudinal`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`trade_guide_attitudinal`");
        
        sql.SET("guide_id = #{record.guideId,jdbcType=VARCHAR}");
        sql.SET("serial_fail_times = #{record.serialFailTimes,jdbcType=INTEGER}");
        sql.SET("serial_fail_days = #{record.serialFailDays,jdbcType=INTEGER}");
        sql.SET("today_fail_times = #{record.todayFailTimes,jdbcType=INTEGER}");
        sql.SET("today_deal_times = #{record.todayDealTimes,jdbcType=INTEGER}");
        sql.SET("accumulative_fail_times = #{record.accumulativeFailTimes,jdbcType=INTEGER}");
        sql.SET("accumulative_fail_days = #{record.accumulativeFailDays,jdbcType=INTEGER}");
        sql.SET("accumulative_deal_orders = #{record.accumulativeDealOrders,jdbcType=INTEGER}");
        sql.SET("accumulative_expect_times = #{record.accumulativeExpectTimes,jdbcType=INTEGER}");
        sql.SET("accumulative_demand_times = #{record.accumulativeDemandTimes,jdbcType=INTEGER}");
        sql.SET("reptdt = #{record.reptdt,jdbcType=TIMESTAMP}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        
        TradeGuideAttitudinalExample example = (TradeGuideAttitudinalExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_guide_attitudinal`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(TradeGuideAttitudinal record) {
        SQL sql = new SQL();
        sql.UPDATE("`trade_guide_attitudinal`");
        
        if (record.getSerialFailTimes() != null) {
            sql.SET("serial_fail_times = #{serialFailTimes,jdbcType=INTEGER}");
        }
        
        if (record.getSerialFailDays() != null) {
            sql.SET("serial_fail_days = #{serialFailDays,jdbcType=INTEGER}");
        }
        
        if (record.getTodayFailTimes() != null) {
            sql.SET("today_fail_times = #{todayFailTimes,jdbcType=INTEGER}");
        }
        
        if (record.getTodayDealTimes() != null) {
            sql.SET("today_deal_times = #{todayDealTimes,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeFailTimes() != null) {
            sql.SET("accumulative_fail_times = #{accumulativeFailTimes,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeFailDays() != null) {
            sql.SET("accumulative_fail_days = #{accumulativeFailDays,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeDealOrders() != null) {
            sql.SET("accumulative_deal_orders = #{accumulativeDealOrders,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeExpectTimes() != null) {
            sql.SET("accumulative_expect_times = #{accumulativeExpectTimes,jdbcType=INTEGER}");
        }
        
        if (record.getAccumulativeDemandTimes() != null) {
            sql.SET("accumulative_demand_times = #{accumulativeDemandTimes,jdbcType=INTEGER}");
        }
        
        if (record.getReptdt() != null) {
            sql.SET("reptdt = #{reptdt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("guide_id = #{guideId,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_guide_attitudinal`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, TradeGuideAttitudinalExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}