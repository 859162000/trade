package com.hbc.api.trade.order.mapping.gen;

import com.hbc.api.trade.order.mapping.gen.bean.OrderLog;
import com.hbc.api.trade.order.mapping.gen.bean.OrderLogExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface OrderLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_order_log`
     *
     * @mbggenerated
     */
    @SelectProvider(type=OrderLogSqlProvider.class, method="countByExample")
    int countByExample(OrderLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_order_log`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=OrderLogSqlProvider.class, method="deleteByExample")
    int deleteByExample(OrderLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_order_log`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `trade_order_log`",
        "where log_id = #{logId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer logId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_order_log`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `trade_order_log` (log_id, order_no, ",
        "guide_id, guide_name, ",
        "log_type, op_type, ",
        "content, comment, ",
        "op_user_id, op_user_name, ",
        "update_time, create_time)",
        "values (#{logId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, ",
        "#{guideId,jdbcType=VARCHAR}, #{guideName,jdbcType=VARCHAR}, ",
        "#{logType,jdbcType=INTEGER}, #{opType,jdbcType=INTEGER}, ",
        "#{content,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, ",
        "#{opUserId,jdbcType=VARCHAR}, #{opUserName,jdbcType=VARCHAR}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(OrderLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_order_log`
     *
     * @mbggenerated
     */
    @InsertProvider(type=OrderLogSqlProvider.class, method="insertSelective")
    int insertSelective(OrderLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_order_log`
     *
     * @mbggenerated
     */
    @SelectProvider(type=OrderLogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="log_id", property="logId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_name", property="guideName", jdbcType=JdbcType.VARCHAR),
        @Result(column="log_type", property="logType", jdbcType=JdbcType.INTEGER),
        @Result(column="op_type", property="opType", jdbcType=JdbcType.INTEGER),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="op_user_id", property="opUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="op_user_name", property="opUserName", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<OrderLog> selectByExample(OrderLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_order_log`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "log_id, order_no, guide_id, guide_name, log_type, op_type, content, comment, ",
        "op_user_id, op_user_name, update_time, create_time",
        "from `trade_order_log`",
        "where log_id = #{logId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="log_id", property="logId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_name", property="guideName", jdbcType=JdbcType.VARCHAR),
        @Result(column="log_type", property="logType", jdbcType=JdbcType.INTEGER),
        @Result(column="op_type", property="opType", jdbcType=JdbcType.INTEGER),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="op_user_id", property="opUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="op_user_name", property="opUserName", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    OrderLog selectByPrimaryKey(Integer logId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_order_log`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=OrderLogSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") OrderLog record, @Param("example") OrderLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_order_log`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=OrderLogSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(OrderLog record);
}