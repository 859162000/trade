package com.hbc.api.trade.pay.mapping.gen;

import com.hbc.api.trade.pay.mapping.gen.bean.TradePayment;
import com.hbc.api.trade.pay.mapping.gen.bean.TradePaymentExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TradePaymentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_payment`
     *
     * @mbggenerated
     */
    @SelectProvider(type=TradePaymentSqlProvider.class, method="countByExample")
    int countByExample(TradePaymentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_payment`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=TradePaymentSqlProvider.class, method="deleteByExample")
    int deleteByExample(TradePaymentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_payment`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `trade_payment`",
        "where pay_no = #{payNo,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String payNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_payment`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `trade_payment` (pay_no, order_no, ",
        "pay_getway, pay_gateway_name, ",
        "pay_status, order_price, ",
        "coup_id, coup_pay, ",
        "coupon_info, pay_should, ",
        "pay_actual, pay_fee, ",
        "pay_source, pay_time, ",
        "order_expire_time, order_create_time, ",
        "user_account_no, user_pay_account, ",
        "user_mobile, user_id, ",
        "user_name, pay_subject, ",
        "pay_desc, third_pay_no, ",
        "third_notify_status, update_time, ",
        "create_time, third_notify_log)",
        "values (#{payNo,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, ",
        "#{payGetway,jdbcType=INTEGER}, #{payGatewayName,jdbcType=VARCHAR}, ",
        "#{payStatus,jdbcType=INTEGER}, #{orderPrice,jdbcType=DOUBLE}, ",
        "#{coupId,jdbcType=VARCHAR}, #{coupPay,jdbcType=DOUBLE}, ",
        "#{couponInfo,jdbcType=VARCHAR}, #{payShould,jdbcType=DOUBLE}, ",
        "#{payActual,jdbcType=DOUBLE}, #{payFee,jdbcType=DOUBLE}, ",
        "#{paySource,jdbcType=INTEGER}, #{payTime,jdbcType=TIMESTAMP}, ",
        "#{orderExpireTime,jdbcType=TIMESTAMP}, #{orderCreateTime,jdbcType=TIMESTAMP}, ",
        "#{userAccountNo,jdbcType=VARCHAR}, #{userPayAccount,jdbcType=VARCHAR}, ",
        "#{userMobile,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{userName,jdbcType=VARCHAR}, #{paySubject,jdbcType=VARCHAR}, ",
        "#{payDesc,jdbcType=VARCHAR}, #{thirdPayNo,jdbcType=VARCHAR}, ",
        "#{thirdNotifyStatus,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{thirdNotifyLog,jdbcType=LONGVARCHAR})"
    })
    int insert(TradePayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_payment`
     *
     * @mbggenerated
     */
    @InsertProvider(type=TradePaymentSqlProvider.class, method="insertSelective")
    int insertSelective(TradePayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_payment`
     *
     * @mbggenerated
     */
    @SelectProvider(type=TradePaymentSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="pay_no", property="payNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_getway", property="payGetway", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_gateway_name", property="payGatewayName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_status", property="payStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="coup_id", property="coupId", jdbcType=JdbcType.VARCHAR),
        @Result(column="coup_pay", property="coupPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="coupon_info", property="couponInfo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_should", property="payShould", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_actual", property="payActual", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_fee", property="payFee", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_source", property="paySource", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="order_expire_time", property="orderExpireTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="order_create_time", property="orderCreateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_account_no", property="userAccountNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_pay_account", property="userPayAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_mobile", property="userMobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_subject", property="paySubject", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_desc", property="payDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_pay_no", property="thirdPayNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_notify_status", property="thirdNotifyStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="third_notify_log", property="thirdNotifyLog", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<TradePayment> selectByExampleWithBLOBs(TradePaymentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_payment`
     *
     * @mbggenerated
     */
    @SelectProvider(type=TradePaymentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="pay_no", property="payNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_getway", property="payGetway", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_gateway_name", property="payGatewayName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_status", property="payStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="coup_id", property="coupId", jdbcType=JdbcType.VARCHAR),
        @Result(column="coup_pay", property="coupPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="coupon_info", property="couponInfo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_should", property="payShould", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_actual", property="payActual", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_fee", property="payFee", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_source", property="paySource", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="order_expire_time", property="orderExpireTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="order_create_time", property="orderCreateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_account_no", property="userAccountNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_pay_account", property="userPayAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_mobile", property="userMobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_subject", property="paySubject", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_desc", property="payDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_pay_no", property="thirdPayNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_notify_status", property="thirdNotifyStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<TradePayment> selectByExample(TradePaymentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_payment`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "pay_no, order_no, pay_getway, pay_gateway_name, pay_status, order_price, coup_id, ",
        "coup_pay, coupon_info, pay_should, pay_actual, pay_fee, pay_source, pay_time, ",
        "order_expire_time, order_create_time, user_account_no, user_pay_account, user_mobile, ",
        "user_id, user_name, pay_subject, pay_desc, third_pay_no, third_notify_status, ",
        "update_time, create_time, third_notify_log",
        "from `trade_payment`",
        "where pay_no = #{payNo,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="pay_no", property="payNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_getway", property="payGetway", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_gateway_name", property="payGatewayName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_status", property="payStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="order_price", property="orderPrice", jdbcType=JdbcType.DOUBLE),
        @Result(column="coup_id", property="coupId", jdbcType=JdbcType.VARCHAR),
        @Result(column="coup_pay", property="coupPay", jdbcType=JdbcType.DOUBLE),
        @Result(column="coupon_info", property="couponInfo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_should", property="payShould", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_actual", property="payActual", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_fee", property="payFee", jdbcType=JdbcType.DOUBLE),
        @Result(column="pay_source", property="paySource", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="order_expire_time", property="orderExpireTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="order_create_time", property="orderCreateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="user_account_no", property="userAccountNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_pay_account", property="userPayAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_mobile", property="userMobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_subject", property="paySubject", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_desc", property="payDesc", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_pay_no", property="thirdPayNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_notify_status", property="thirdNotifyStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="third_notify_log", property="thirdNotifyLog", jdbcType=JdbcType.LONGVARCHAR)
    })
    TradePayment selectByPrimaryKey(String payNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_payment`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TradePaymentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TradePayment record, @Param("example") TradePaymentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_payment`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TradePaymentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TradePayment record);
}