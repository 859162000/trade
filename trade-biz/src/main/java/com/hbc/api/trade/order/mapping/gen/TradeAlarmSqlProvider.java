package com.hbc.api.trade.order.mapping.gen;

import com.hbc.api.trade.order.mapping.gen.bean.TradeAlarm;
import com.hbc.api.trade.order.mapping.gen.bean.TradeAlarmExample.Criteria;
import com.hbc.api.trade.order.mapping.gen.bean.TradeAlarmExample.Criterion;
import com.hbc.api.trade.order.mapping.gen.bean.TradeAlarmExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class TradeAlarmSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_alarm`
     *
     * @mbggenerated
     */
    public String countByExample(TradeAlarmExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`trade_alarm`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_alarm`
     *
     * @mbggenerated
     */
    public String deleteByExample(TradeAlarmExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`trade_alarm`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_alarm`
     *
     * @mbggenerated
     */
    public String insertSelective(TradeAlarm record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`trade_alarm`");
        
        if (record.getAlarmId() != null) {
            sql.VALUES("alarm_id", "#{alarmId,jdbcType=INTEGER}");
        }
        
        if (record.getOrderNo() != null) {
            sql.VALUES("order_no", "#{orderNo,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderServiceTime() != null) {
            sql.VALUES("order_service_time", "#{orderServiceTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAlarmType() != null) {
            sql.VALUES("alarm_type", "#{alarmType,jdbcType=INTEGER}");
        }
        
        if (record.getAlarmTypeName() != null) {
            sql.VALUES("alarm_type_name", "#{alarmTypeName,jdbcType=VARCHAR}");
        }
        
        if (record.getFlag() != null) {
            sql.VALUES("flag", "#{flag,jdbcType=INTEGER}");
        }
        
        if (record.getType() != null) {
            sql.VALUES("type", "#{type,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=INTEGER}");
        }
        
        if (record.getSendPreTime() != null) {
            sql.VALUES("send_pre_time", "#{sendPreTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getSendTime() != null) {
            sql.VALUES("send_time", "#{sendTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReqInfo() != null) {
            sql.VALUES("req_info", "#{reqInfo,jdbcType=VARCHAR}");
        }
        
        if (record.getRspInfo() != null) {
            sql.VALUES("rsp_info", "#{rspInfo,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_alarm`
     *
     * @mbggenerated
     */
    public String selectByExample(TradeAlarmExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("alarm_id");
        } else {
            sql.SELECT("alarm_id");
        }
        sql.SELECT("order_no");
        sql.SELECT("order_service_time");
        sql.SELECT("alarm_type");
        sql.SELECT("alarm_type_name");
        sql.SELECT("flag");
        sql.SELECT("type");
        sql.SELECT("status");
        sql.SELECT("send_pre_time");
        sql.SELECT("send_time");
        sql.SELECT("req_info");
        sql.SELECT("rsp_info");
        sql.SELECT("update_time");
        sql.SELECT("create_time");
        sql.FROM("`trade_alarm`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_alarm`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        TradeAlarm record = (TradeAlarm) parameter.get("record");
        TradeAlarmExample example = (TradeAlarmExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`trade_alarm`");
        
        if (record.getAlarmId() != null) {
            sql.SET("alarm_id = #{record.alarmId,jdbcType=INTEGER}");
        }
        
        if (record.getOrderNo() != null) {
            sql.SET("order_no = #{record.orderNo,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderServiceTime() != null) {
            sql.SET("order_service_time = #{record.orderServiceTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAlarmType() != null) {
            sql.SET("alarm_type = #{record.alarmType,jdbcType=INTEGER}");
        }
        
        if (record.getAlarmTypeName() != null) {
            sql.SET("alarm_type_name = #{record.alarmTypeName,jdbcType=VARCHAR}");
        }
        
        if (record.getFlag() != null) {
            sql.SET("flag = #{record.flag,jdbcType=INTEGER}");
        }
        
        if (record.getType() != null) {
            sql.SET("type = #{record.type,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{record.status,jdbcType=INTEGER}");
        }
        
        if (record.getSendPreTime() != null) {
            sql.SET("send_pre_time = #{record.sendPreTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getSendTime() != null) {
            sql.SET("send_time = #{record.sendTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReqInfo() != null) {
            sql.SET("req_info = #{record.reqInfo,jdbcType=VARCHAR}");
        }
        
        if (record.getRspInfo() != null) {
            sql.SET("rsp_info = #{record.rspInfo,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_alarm`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`trade_alarm`");
        
        sql.SET("alarm_id = #{record.alarmId,jdbcType=INTEGER}");
        sql.SET("order_no = #{record.orderNo,jdbcType=VARCHAR}");
        sql.SET("order_service_time = #{record.orderServiceTime,jdbcType=TIMESTAMP}");
        sql.SET("alarm_type = #{record.alarmType,jdbcType=INTEGER}");
        sql.SET("alarm_type_name = #{record.alarmTypeName,jdbcType=VARCHAR}");
        sql.SET("flag = #{record.flag,jdbcType=INTEGER}");
        sql.SET("type = #{record.type,jdbcType=INTEGER}");
        sql.SET("status = #{record.status,jdbcType=INTEGER}");
        sql.SET("send_pre_time = #{record.sendPreTime,jdbcType=TIMESTAMP}");
        sql.SET("send_time = #{record.sendTime,jdbcType=TIMESTAMP}");
        sql.SET("req_info = #{record.reqInfo,jdbcType=VARCHAR}");
        sql.SET("rsp_info = #{record.rspInfo,jdbcType=VARCHAR}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        
        TradeAlarmExample example = (TradeAlarmExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_alarm`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(TradeAlarm record) {
        SQL sql = new SQL();
        sql.UPDATE("`trade_alarm`");
        
        if (record.getOrderNo() != null) {
            sql.SET("order_no = #{orderNo,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderServiceTime() != null) {
            sql.SET("order_service_time = #{orderServiceTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAlarmType() != null) {
            sql.SET("alarm_type = #{alarmType,jdbcType=INTEGER}");
        }
        
        if (record.getAlarmTypeName() != null) {
            sql.SET("alarm_type_name = #{alarmTypeName,jdbcType=VARCHAR}");
        }
        
        if (record.getFlag() != null) {
            sql.SET("flag = #{flag,jdbcType=INTEGER}");
        }
        
        if (record.getType() != null) {
            sql.SET("type = #{type,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=INTEGER}");
        }
        
        if (record.getSendPreTime() != null) {
            sql.SET("send_pre_time = #{sendPreTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getSendTime() != null) {
            sql.SET("send_time = #{sendTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getReqInfo() != null) {
            sql.SET("req_info = #{reqInfo,jdbcType=VARCHAR}");
        }
        
        if (record.getRspInfo() != null) {
            sql.SET("rsp_info = #{rspInfo,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("alarm_id = #{alarmId,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `trade_alarm`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, TradeAlarmExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}