package com.hbc.api.trade.bdata.mapper.basedata.gen;

import com.hbc.api.trade.bdata.mapper.basedata.gen.bean.UserInfo;
import com.hbc.api.trade.bdata.mapper.basedata.gen.bean.UserInfoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface UserInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    @SelectProvider(type=UserInfoSqlProvider.class, method="countByExample")
    int countByExample(UserInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=UserInfoSqlProvider.class, method="deleteByExample")
    int deleteByExample(UserInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `user_info`",
        "where user_id = #{userId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `user_info` (user_id, name, ",
        "nick_name, email, ",
        "union_id, gender, ",
        "source, from_channel, ",
        "agent_id, agent_name, ",
        "avatar, referrer_id, ",
        "age_type, birthday, ",
        "zipcode, address, ",
        "signature, is_phone, ",
        "is_email, ip_last, ",
        "browser_last, place_city_name, ",
        "place_city_id, province_name, ",
        "province_id, place_name, ",
        "place_id, place_category_name, ",
        "place_category_id, activate_source, ",
        "activate_time, tag_visible, ",
        "tag_hidden, user_level, ",
        "device_last, app_version, ",
        "updated_at, created_at)",
        "values (#{userId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, ",
        "#{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, ",
        "#{unionId,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, ",
        "#{source,jdbcType=INTEGER}, #{fromChannel,jdbcType=INTEGER}, ",
        "#{agentId,jdbcType=VARCHAR}, #{agentName,jdbcType=VARCHAR}, ",
        "#{avatar,jdbcType=VARCHAR}, #{referrerId,jdbcType=VARCHAR}, ",
        "#{ageType,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, ",
        "#{zipcode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{signature,jdbcType=VARCHAR}, #{isPhone,jdbcType=INTEGER}, ",
        "#{isEmail,jdbcType=INTEGER}, #{ipLast,jdbcType=VARCHAR}, ",
        "#{browserLast,jdbcType=VARCHAR}, #{placeCityName,jdbcType=VARCHAR}, ",
        "#{placeCityId,jdbcType=INTEGER}, #{provinceName,jdbcType=VARCHAR}, ",
        "#{provinceId,jdbcType=INTEGER}, #{placeName,jdbcType=VARCHAR}, ",
        "#{placeId,jdbcType=INTEGER}, #{placeCategoryName,jdbcType=VARCHAR}, ",
        "#{placeCategoryId,jdbcType=INTEGER}, #{activateSource,jdbcType=INTEGER}, ",
        "#{activateTime,jdbcType=TIMESTAMP}, #{tagVisible,jdbcType=VARCHAR}, ",
        "#{tagHidden,jdbcType=VARCHAR}, #{userLevel,jdbcType=TINYINT}, ",
        "#{deviceLast,jdbcType=VARCHAR}, #{appVersion,jdbcType=VARCHAR}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    @InsertProvider(type=UserInfoSqlProvider.class, method="insertSelective")
    int insertSelective(UserInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    @SelectProvider(type=UserInfoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="nick_name", property="nickName", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="union_id", property="unionId", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.INTEGER),
        @Result(column="source", property="source", jdbcType=JdbcType.INTEGER),
        @Result(column="from_channel", property="fromChannel", jdbcType=JdbcType.INTEGER),
        @Result(column="agent_id", property="agentId", jdbcType=JdbcType.VARCHAR),
        @Result(column="agent_name", property="agentName", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="referrer_id", property="referrerId", jdbcType=JdbcType.VARCHAR),
        @Result(column="age_type", property="ageType", jdbcType=JdbcType.INTEGER),
        @Result(column="birthday", property="birthday", jdbcType=JdbcType.DATE),
        @Result(column="zipcode", property="zipcode", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="signature", property="signature", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_phone", property="isPhone", jdbcType=JdbcType.INTEGER),
        @Result(column="is_email", property="isEmail", jdbcType=JdbcType.INTEGER),
        @Result(column="ip_last", property="ipLast", jdbcType=JdbcType.VARCHAR),
        @Result(column="browser_last", property="browserLast", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_city_name", property="placeCityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_city_id", property="placeCityId", jdbcType=JdbcType.INTEGER),
        @Result(column="province_name", property="provinceName", jdbcType=JdbcType.VARCHAR),
        @Result(column="province_id", property="provinceId", jdbcType=JdbcType.INTEGER),
        @Result(column="place_name", property="placeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_id", property="placeId", jdbcType=JdbcType.INTEGER),
        @Result(column="place_category_name", property="placeCategoryName", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_category_id", property="placeCategoryId", jdbcType=JdbcType.INTEGER),
        @Result(column="activate_source", property="activateSource", jdbcType=JdbcType.INTEGER),
        @Result(column="activate_time", property="activateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="tag_visible", property="tagVisible", jdbcType=JdbcType.VARCHAR),
        @Result(column="tag_hidden", property="tagHidden", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_level", property="userLevel", jdbcType=JdbcType.TINYINT),
        @Result(column="device_last", property="deviceLast", jdbcType=JdbcType.VARCHAR),
        @Result(column="app_version", property="appVersion", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<UserInfo> selectByExample(UserInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "user_id, name, nick_name, email, union_id, gender, source, from_channel, agent_id, ",
        "agent_name, avatar, referrer_id, age_type, birthday, zipcode, address, signature, ",
        "is_phone, is_email, ip_last, browser_last, place_city_name, place_city_id, province_name, ",
        "province_id, place_name, place_id, place_category_name, place_category_id, activate_source, ",
        "activate_time, tag_visible, tag_hidden, user_level, device_last, app_version, ",
        "updated_at, created_at",
        "from `user_info`",
        "where user_id = #{userId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="nick_name", property="nickName", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="union_id", property="unionId", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.INTEGER),
        @Result(column="source", property="source", jdbcType=JdbcType.INTEGER),
        @Result(column="from_channel", property="fromChannel", jdbcType=JdbcType.INTEGER),
        @Result(column="agent_id", property="agentId", jdbcType=JdbcType.VARCHAR),
        @Result(column="agent_name", property="agentName", jdbcType=JdbcType.VARCHAR),
        @Result(column="avatar", property="avatar", jdbcType=JdbcType.VARCHAR),
        @Result(column="referrer_id", property="referrerId", jdbcType=JdbcType.VARCHAR),
        @Result(column="age_type", property="ageType", jdbcType=JdbcType.INTEGER),
        @Result(column="birthday", property="birthday", jdbcType=JdbcType.DATE),
        @Result(column="zipcode", property="zipcode", jdbcType=JdbcType.VARCHAR),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="signature", property="signature", jdbcType=JdbcType.VARCHAR),
        @Result(column="is_phone", property="isPhone", jdbcType=JdbcType.INTEGER),
        @Result(column="is_email", property="isEmail", jdbcType=JdbcType.INTEGER),
        @Result(column="ip_last", property="ipLast", jdbcType=JdbcType.VARCHAR),
        @Result(column="browser_last", property="browserLast", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_city_name", property="placeCityName", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_city_id", property="placeCityId", jdbcType=JdbcType.INTEGER),
        @Result(column="province_name", property="provinceName", jdbcType=JdbcType.VARCHAR),
        @Result(column="province_id", property="provinceId", jdbcType=JdbcType.INTEGER),
        @Result(column="place_name", property="placeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_id", property="placeId", jdbcType=JdbcType.INTEGER),
        @Result(column="place_category_name", property="placeCategoryName", jdbcType=JdbcType.VARCHAR),
        @Result(column="place_category_id", property="placeCategoryId", jdbcType=JdbcType.INTEGER),
        @Result(column="activate_source", property="activateSource", jdbcType=JdbcType.INTEGER),
        @Result(column="activate_time", property="activateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="tag_visible", property="tagVisible", jdbcType=JdbcType.VARCHAR),
        @Result(column="tag_hidden", property="tagHidden", jdbcType=JdbcType.VARCHAR),
        @Result(column="user_level", property="userLevel", jdbcType=JdbcType.TINYINT),
        @Result(column="device_last", property="deviceLast", jdbcType=JdbcType.VARCHAR),
        @Result(column="app_version", property="appVersion", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    UserInfo selectByPrimaryKey(String userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=UserInfoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserInfo record, @Param("example") UserInfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=UserInfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserInfo record);
}