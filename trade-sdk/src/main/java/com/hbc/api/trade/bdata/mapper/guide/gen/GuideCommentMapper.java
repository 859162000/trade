package com.hbc.api.trade.bdata.mapper.guide.gen;

import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideComment;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideCommentExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface GuideCommentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @SelectProvider(type=GuideCommentSqlProvider.class, method="countByExample")
    int countByExample(GuideCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=GuideCommentSqlProvider.class, method="deleteByExample")
    int deleteByExample(GuideCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `guide_comment`",
        "where guide_comment_id = #{guideCommentId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer guideCommentId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `guide_comment` (guide_comment_id, order_no, ",
        "order_type, scenery_narrate, ",
        "service_attitude, route_familiar, ",
        "from_uid, from_uname, ",
        "guide_id, guide_name, ",
        "comment_type, kpi1, ",
        "kpi2, kpi3, kpi4, ",
        "kpi5, kpi6, total_score, ",
        "update_time, create_time, ",
        "content)",
        "values (#{guideCommentId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, ",
        "#{orderType,jdbcType=TINYINT}, #{sceneryNarrate,jdbcType=DECIMAL}, ",
        "#{serviceAttitude,jdbcType=DECIMAL}, #{routeFamiliar,jdbcType=DECIMAL}, ",
        "#{fromUid,jdbcType=VARCHAR}, #{fromUname,jdbcType=VARCHAR}, ",
        "#{guideId,jdbcType=VARCHAR}, #{guideName,jdbcType=VARCHAR}, ",
        "#{commentType,jdbcType=TINYINT}, #{kpi1,jdbcType=TINYINT}, ",
        "#{kpi2,jdbcType=TINYINT}, #{kpi3,jdbcType=TINYINT}, #{kpi4,jdbcType=TINYINT}, ",
        "#{kpi5,jdbcType=TINYINT}, #{kpi6,jdbcType=TINYINT}, #{totalScore,jdbcType=DECIMAL}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{content,jdbcType=LONGVARCHAR})"
    })
    int insert(GuideComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @InsertProvider(type=GuideCommentSqlProvider.class, method="insertSelective")
    int insertSelective(GuideComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @SelectProvider(type=GuideCommentSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="guide_comment_id", property="guideCommentId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_type", property="orderType", jdbcType=JdbcType.TINYINT),
        @Result(column="scenery_narrate", property="sceneryNarrate", jdbcType=JdbcType.DECIMAL),
        @Result(column="service_attitude", property="serviceAttitude", jdbcType=JdbcType.DECIMAL),
        @Result(column="route_familiar", property="routeFamiliar", jdbcType=JdbcType.DECIMAL),
        @Result(column="from_uid", property="fromUid", jdbcType=JdbcType.VARCHAR),
        @Result(column="from_uname", property="fromUname", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_name", property="guideName", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment_type", property="commentType", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi1", property="kpi1", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi2", property="kpi2", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi3", property="kpi3", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi4", property="kpi4", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi5", property="kpi5", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi6", property="kpi6", jdbcType=JdbcType.TINYINT),
        @Result(column="total_score", property="totalScore", jdbcType=JdbcType.DECIMAL),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<GuideComment> selectByExampleWithBLOBs(GuideCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @SelectProvider(type=GuideCommentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="guide_comment_id", property="guideCommentId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_type", property="orderType", jdbcType=JdbcType.TINYINT),
        @Result(column="scenery_narrate", property="sceneryNarrate", jdbcType=JdbcType.DECIMAL),
        @Result(column="service_attitude", property="serviceAttitude", jdbcType=JdbcType.DECIMAL),
        @Result(column="route_familiar", property="routeFamiliar", jdbcType=JdbcType.DECIMAL),
        @Result(column="from_uid", property="fromUid", jdbcType=JdbcType.VARCHAR),
        @Result(column="from_uname", property="fromUname", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_name", property="guideName", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment_type", property="commentType", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi1", property="kpi1", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi2", property="kpi2", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi3", property="kpi3", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi4", property="kpi4", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi5", property="kpi5", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi6", property="kpi6", jdbcType=JdbcType.TINYINT),
        @Result(column="total_score", property="totalScore", jdbcType=JdbcType.DECIMAL),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<GuideComment> selectByExample(GuideCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "guide_comment_id, order_no, order_type, scenery_narrate, service_attitude, route_familiar, ",
        "from_uid, from_uname, guide_id, guide_name, comment_type, kpi1, kpi2, kpi3, ",
        "kpi4, kpi5, kpi6, total_score, update_time, create_time, content",
        "from `guide_comment`",
        "where guide_comment_id = #{guideCommentId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="guide_comment_id", property="guideCommentId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_type", property="orderType", jdbcType=JdbcType.TINYINT),
        @Result(column="scenery_narrate", property="sceneryNarrate", jdbcType=JdbcType.DECIMAL),
        @Result(column="service_attitude", property="serviceAttitude", jdbcType=JdbcType.DECIMAL),
        @Result(column="route_familiar", property="routeFamiliar", jdbcType=JdbcType.DECIMAL),
        @Result(column="from_uid", property="fromUid", jdbcType=JdbcType.VARCHAR),
        @Result(column="from_uname", property="fromUname", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR),
        @Result(column="guide_name", property="guideName", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment_type", property="commentType", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi1", property="kpi1", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi2", property="kpi2", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi3", property="kpi3", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi4", property="kpi4", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi5", property="kpi5", jdbcType=JdbcType.TINYINT),
        @Result(column="kpi6", property="kpi6", jdbcType=JdbcType.TINYINT),
        @Result(column="total_score", property="totalScore", jdbcType=JdbcType.DECIMAL),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARCHAR)
    })
    GuideComment selectByPrimaryKey(Integer guideCommentId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=GuideCommentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") GuideComment record, @Param("example") GuideCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=GuideCommentSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") GuideComment record, @Param("example") GuideCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=GuideCommentSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") GuideComment record, @Param("example") GuideCommentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=GuideCommentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(GuideComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @Update({
        "update `guide_comment`",
        "set order_no = #{orderNo,jdbcType=VARCHAR},",
          "order_type = #{orderType,jdbcType=TINYINT},",
          "scenery_narrate = #{sceneryNarrate,jdbcType=DECIMAL},",
          "service_attitude = #{serviceAttitude,jdbcType=DECIMAL},",
          "route_familiar = #{routeFamiliar,jdbcType=DECIMAL},",
          "from_uid = #{fromUid,jdbcType=VARCHAR},",
          "from_uname = #{fromUname,jdbcType=VARCHAR},",
          "guide_id = #{guideId,jdbcType=VARCHAR},",
          "guide_name = #{guideName,jdbcType=VARCHAR},",
          "comment_type = #{commentType,jdbcType=TINYINT},",
          "kpi1 = #{kpi1,jdbcType=TINYINT},",
          "kpi2 = #{kpi2,jdbcType=TINYINT},",
          "kpi3 = #{kpi3,jdbcType=TINYINT},",
          "kpi4 = #{kpi4,jdbcType=TINYINT},",
          "kpi5 = #{kpi5,jdbcType=TINYINT},",
          "kpi6 = #{kpi6,jdbcType=TINYINT},",
          "total_score = #{totalScore,jdbcType=DECIMAL},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "content = #{content,jdbcType=LONGVARCHAR}",
        "where guide_comment_id = #{guideCommentId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(GuideComment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_comment`
     *
     * @mbggenerated
     */
    @Update({
        "update `guide_comment`",
        "set order_no = #{orderNo,jdbcType=VARCHAR},",
          "order_type = #{orderType,jdbcType=TINYINT},",
          "scenery_narrate = #{sceneryNarrate,jdbcType=DECIMAL},",
          "service_attitude = #{serviceAttitude,jdbcType=DECIMAL},",
          "route_familiar = #{routeFamiliar,jdbcType=DECIMAL},",
          "from_uid = #{fromUid,jdbcType=VARCHAR},",
          "from_uname = #{fromUname,jdbcType=VARCHAR},",
          "guide_id = #{guideId,jdbcType=VARCHAR},",
          "guide_name = #{guideName,jdbcType=VARCHAR},",
          "comment_type = #{commentType,jdbcType=TINYINT},",
          "kpi1 = #{kpi1,jdbcType=TINYINT},",
          "kpi2 = #{kpi2,jdbcType=TINYINT},",
          "kpi3 = #{kpi3,jdbcType=TINYINT},",
          "kpi4 = #{kpi4,jdbcType=TINYINT},",
          "kpi5 = #{kpi5,jdbcType=TINYINT},",
          "kpi6 = #{kpi6,jdbcType=TINYINT},",
          "total_score = #{totalScore,jdbcType=DECIMAL},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where guide_comment_id = #{guideCommentId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(GuideComment record);
}