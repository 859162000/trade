package com.hbc.api.trade.bdata.mapper.guide.gen;

import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideActivity;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideActivityExample.Criteria;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideActivityExample.Criterion;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideActivityExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class GuideActivitySqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_activity`
     *
     * @mbggenerated
     */
    public String countByExample(GuideActivityExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`guide_activity`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_activity`
     *
     * @mbggenerated
     */
    public String deleteByExample(GuideActivityExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`guide_activity`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_activity`
     *
     * @mbggenerated
     */
    public String insertSelective(GuideActivity record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`guide_activity`");
        
        if (record.getGuideActivityId() != null) {
            sql.VALUES("guide_activity_id", "#{guideActivityId,jdbcType=INTEGER}");
        }
        
        if (record.getGuideId() != null) {
            sql.VALUES("guide_id", "#{guideId,jdbcType=VARCHAR}");
        }
        
        if (record.getAccessKey() != null) {
            sql.VALUES("access_key", "#{accessKey,jdbcType=VARCHAR}");
        }
        
        if (record.getChannel() != null) {
            sql.VALUES("channel", "#{channel,jdbcType=VARCHAR}");
        }
        
        if (record.getOpType() != null) {
            sql.VALUES("op_type", "#{opType,jdbcType=INTEGER}");
        }
        
        if (record.getUserType() != null) {
            sql.VALUES("user_type", "#{userType,jdbcType=INTEGER}");
        }
        
        if (record.getDeviceType() != null) {
            sql.VALUES("device_type", "#{deviceType,jdbcType=INTEGER}");
        }
        
        if (record.getDeviceName() != null) {
            sql.VALUES("device_name", "#{deviceName,jdbcType=VARCHAR}");
        }
        
        if (record.getOsVersion() != null) {
            sql.VALUES("os_version", "#{osVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getAppVersion() != null) {
            sql.VALUES("app_version", "#{appVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getNetwork() != null) {
            sql.VALUES("network", "#{network,jdbcType=VARCHAR}");
        }
        
        if (record.getCarrierOperator() != null) {
            sql.VALUES("carrier_operator", "#{carrierOperator,jdbcType=VARCHAR}");
        }
        
        if (record.getManufacturer() != null) {
            sql.VALUES("manufacturer", "#{manufacturer,jdbcType=VARCHAR}");
        }
        
        if (record.getOpTime() != null) {
            sql.VALUES("op_time", "#{opTime,jdbcType=BIGINT}");
        }
        
        if (record.getMacAddress() != null) {
            sql.VALUES("mac_address", "#{macAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getImei() != null) {
            sql.VALUES("imei", "#{imei,jdbcType=VARCHAR}");
        }
        
        if (record.getResolution() != null) {
            sql.VALUES("resolution", "#{resolution,jdbcType=VARCHAR}");
        }
        
        if (record.getImsi() != null) {
            sql.VALUES("imsi", "#{imsi,jdbcType=VARCHAR}");
        }
        
        if (record.getIdfa() != null) {
            sql.VALUES("idfa", "#{idfa,jdbcType=VARCHAR}");
        }
        
        if (record.getIdfv() != null) {
            sql.VALUES("idfv", "#{idfv,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getContent() != null) {
            sql.VALUES("content", "#{content,jdbcType=LONGVARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_activity`
     *
     * @mbggenerated
     */
    public String selectByExampleWithBLOBs(GuideActivityExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("guide_activity_id");
        } else {
            sql.SELECT("guide_activity_id");
        }
        sql.SELECT("guide_id");
        sql.SELECT("access_key");
        sql.SELECT("channel");
        sql.SELECT("op_type");
        sql.SELECT("user_type");
        sql.SELECT("device_type");
        sql.SELECT("device_name");
        sql.SELECT("os_version");
        sql.SELECT("app_version");
        sql.SELECT("network");
        sql.SELECT("carrier_operator");
        sql.SELECT("manufacturer");
        sql.SELECT("op_time");
        sql.SELECT("mac_address");
        sql.SELECT("imei");
        sql.SELECT("resolution");
        sql.SELECT("imsi");
        sql.SELECT("idfa");
        sql.SELECT("idfv");
        sql.SELECT("update_time");
        sql.SELECT("create_time");
        sql.SELECT("content");
        sql.FROM("`guide_activity`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_activity`
     *
     * @mbggenerated
     */
    public String selectByExample(GuideActivityExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("guide_activity_id");
        } else {
            sql.SELECT("guide_activity_id");
        }
        sql.SELECT("guide_id");
        sql.SELECT("access_key");
        sql.SELECT("channel");
        sql.SELECT("op_type");
        sql.SELECT("user_type");
        sql.SELECT("device_type");
        sql.SELECT("device_name");
        sql.SELECT("os_version");
        sql.SELECT("app_version");
        sql.SELECT("network");
        sql.SELECT("carrier_operator");
        sql.SELECT("manufacturer");
        sql.SELECT("op_time");
        sql.SELECT("mac_address");
        sql.SELECT("imei");
        sql.SELECT("resolution");
        sql.SELECT("imsi");
        sql.SELECT("idfa");
        sql.SELECT("idfv");
        sql.SELECT("update_time");
        sql.SELECT("create_time");
        sql.FROM("`guide_activity`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_activity`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        GuideActivity record = (GuideActivity) parameter.get("record");
        GuideActivityExample example = (GuideActivityExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`guide_activity`");
        
        if (record.getGuideActivityId() != null) {
            sql.SET("guide_activity_id = #{record.guideActivityId,jdbcType=INTEGER}");
        }
        
        if (record.getGuideId() != null) {
            sql.SET("guide_id = #{record.guideId,jdbcType=VARCHAR}");
        }
        
        if (record.getAccessKey() != null) {
            sql.SET("access_key = #{record.accessKey,jdbcType=VARCHAR}");
        }
        
        if (record.getChannel() != null) {
            sql.SET("channel = #{record.channel,jdbcType=VARCHAR}");
        }
        
        if (record.getOpType() != null) {
            sql.SET("op_type = #{record.opType,jdbcType=INTEGER}");
        }
        
        if (record.getUserType() != null) {
            sql.SET("user_type = #{record.userType,jdbcType=INTEGER}");
        }
        
        if (record.getDeviceType() != null) {
            sql.SET("device_type = #{record.deviceType,jdbcType=INTEGER}");
        }
        
        if (record.getDeviceName() != null) {
            sql.SET("device_name = #{record.deviceName,jdbcType=VARCHAR}");
        }
        
        if (record.getOsVersion() != null) {
            sql.SET("os_version = #{record.osVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getAppVersion() != null) {
            sql.SET("app_version = #{record.appVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getNetwork() != null) {
            sql.SET("network = #{record.network,jdbcType=VARCHAR}");
        }
        
        if (record.getCarrierOperator() != null) {
            sql.SET("carrier_operator = #{record.carrierOperator,jdbcType=VARCHAR}");
        }
        
        if (record.getManufacturer() != null) {
            sql.SET("manufacturer = #{record.manufacturer,jdbcType=VARCHAR}");
        }
        
        if (record.getOpTime() != null) {
            sql.SET("op_time = #{record.opTime,jdbcType=BIGINT}");
        }
        
        if (record.getMacAddress() != null) {
            sql.SET("mac_address = #{record.macAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getImei() != null) {
            sql.SET("imei = #{record.imei,jdbcType=VARCHAR}");
        }
        
        if (record.getResolution() != null) {
            sql.SET("resolution = #{record.resolution,jdbcType=VARCHAR}");
        }
        
        if (record.getImsi() != null) {
            sql.SET("imsi = #{record.imsi,jdbcType=VARCHAR}");
        }
        
        if (record.getIdfa() != null) {
            sql.SET("idfa = #{record.idfa,jdbcType=VARCHAR}");
        }
        
        if (record.getIdfv() != null) {
            sql.SET("idfv = #{record.idfv,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getContent() != null) {
            sql.SET("content = #{record.content,jdbcType=LONGVARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_activity`
     *
     * @mbggenerated
     */
    public String updateByExampleWithBLOBs(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`guide_activity`");
        
        sql.SET("guide_activity_id = #{record.guideActivityId,jdbcType=INTEGER}");
        sql.SET("guide_id = #{record.guideId,jdbcType=VARCHAR}");
        sql.SET("access_key = #{record.accessKey,jdbcType=VARCHAR}");
        sql.SET("channel = #{record.channel,jdbcType=VARCHAR}");
        sql.SET("op_type = #{record.opType,jdbcType=INTEGER}");
        sql.SET("user_type = #{record.userType,jdbcType=INTEGER}");
        sql.SET("device_type = #{record.deviceType,jdbcType=INTEGER}");
        sql.SET("device_name = #{record.deviceName,jdbcType=VARCHAR}");
        sql.SET("os_version = #{record.osVersion,jdbcType=VARCHAR}");
        sql.SET("app_version = #{record.appVersion,jdbcType=VARCHAR}");
        sql.SET("network = #{record.network,jdbcType=VARCHAR}");
        sql.SET("carrier_operator = #{record.carrierOperator,jdbcType=VARCHAR}");
        sql.SET("manufacturer = #{record.manufacturer,jdbcType=VARCHAR}");
        sql.SET("op_time = #{record.opTime,jdbcType=BIGINT}");
        sql.SET("mac_address = #{record.macAddress,jdbcType=VARCHAR}");
        sql.SET("imei = #{record.imei,jdbcType=VARCHAR}");
        sql.SET("resolution = #{record.resolution,jdbcType=VARCHAR}");
        sql.SET("imsi = #{record.imsi,jdbcType=VARCHAR}");
        sql.SET("idfa = #{record.idfa,jdbcType=VARCHAR}");
        sql.SET("idfv = #{record.idfv,jdbcType=VARCHAR}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        sql.SET("content = #{record.content,jdbcType=LONGVARCHAR}");
        
        GuideActivityExample example = (GuideActivityExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_activity`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`guide_activity`");
        
        sql.SET("guide_activity_id = #{record.guideActivityId,jdbcType=INTEGER}");
        sql.SET("guide_id = #{record.guideId,jdbcType=VARCHAR}");
        sql.SET("access_key = #{record.accessKey,jdbcType=VARCHAR}");
        sql.SET("channel = #{record.channel,jdbcType=VARCHAR}");
        sql.SET("op_type = #{record.opType,jdbcType=INTEGER}");
        sql.SET("user_type = #{record.userType,jdbcType=INTEGER}");
        sql.SET("device_type = #{record.deviceType,jdbcType=INTEGER}");
        sql.SET("device_name = #{record.deviceName,jdbcType=VARCHAR}");
        sql.SET("os_version = #{record.osVersion,jdbcType=VARCHAR}");
        sql.SET("app_version = #{record.appVersion,jdbcType=VARCHAR}");
        sql.SET("network = #{record.network,jdbcType=VARCHAR}");
        sql.SET("carrier_operator = #{record.carrierOperator,jdbcType=VARCHAR}");
        sql.SET("manufacturer = #{record.manufacturer,jdbcType=VARCHAR}");
        sql.SET("op_time = #{record.opTime,jdbcType=BIGINT}");
        sql.SET("mac_address = #{record.macAddress,jdbcType=VARCHAR}");
        sql.SET("imei = #{record.imei,jdbcType=VARCHAR}");
        sql.SET("resolution = #{record.resolution,jdbcType=VARCHAR}");
        sql.SET("imsi = #{record.imsi,jdbcType=VARCHAR}");
        sql.SET("idfa = #{record.idfa,jdbcType=VARCHAR}");
        sql.SET("idfv = #{record.idfv,jdbcType=VARCHAR}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        
        GuideActivityExample example = (GuideActivityExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_activity`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(GuideActivity record) {
        SQL sql = new SQL();
        sql.UPDATE("`guide_activity`");
        
        if (record.getGuideId() != null) {
            sql.SET("guide_id = #{guideId,jdbcType=VARCHAR}");
        }
        
        if (record.getAccessKey() != null) {
            sql.SET("access_key = #{accessKey,jdbcType=VARCHAR}");
        }
        
        if (record.getChannel() != null) {
            sql.SET("channel = #{channel,jdbcType=VARCHAR}");
        }
        
        if (record.getOpType() != null) {
            sql.SET("op_type = #{opType,jdbcType=INTEGER}");
        }
        
        if (record.getUserType() != null) {
            sql.SET("user_type = #{userType,jdbcType=INTEGER}");
        }
        
        if (record.getDeviceType() != null) {
            sql.SET("device_type = #{deviceType,jdbcType=INTEGER}");
        }
        
        if (record.getDeviceName() != null) {
            sql.SET("device_name = #{deviceName,jdbcType=VARCHAR}");
        }
        
        if (record.getOsVersion() != null) {
            sql.SET("os_version = #{osVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getAppVersion() != null) {
            sql.SET("app_version = #{appVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getNetwork() != null) {
            sql.SET("network = #{network,jdbcType=VARCHAR}");
        }
        
        if (record.getCarrierOperator() != null) {
            sql.SET("carrier_operator = #{carrierOperator,jdbcType=VARCHAR}");
        }
        
        if (record.getManufacturer() != null) {
            sql.SET("manufacturer = #{manufacturer,jdbcType=VARCHAR}");
        }
        
        if (record.getOpTime() != null) {
            sql.SET("op_time = #{opTime,jdbcType=BIGINT}");
        }
        
        if (record.getMacAddress() != null) {
            sql.SET("mac_address = #{macAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getImei() != null) {
            sql.SET("imei = #{imei,jdbcType=VARCHAR}");
        }
        
        if (record.getResolution() != null) {
            sql.SET("resolution = #{resolution,jdbcType=VARCHAR}");
        }
        
        if (record.getImsi() != null) {
            sql.SET("imsi = #{imsi,jdbcType=VARCHAR}");
        }
        
        if (record.getIdfa() != null) {
            sql.SET("idfa = #{idfa,jdbcType=VARCHAR}");
        }
        
        if (record.getIdfv() != null) {
            sql.SET("idfv = #{idfv,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getContent() != null) {
            sql.SET("content = #{content,jdbcType=LONGVARCHAR}");
        }
        
        sql.WHERE("guide_activity_id = #{guideActivityId,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_activity`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, GuideActivityExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}