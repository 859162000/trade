package com.hbc.api.trade.bdata.mapper.guide.gen;

import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideGrade;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideGradeExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface GuideGradeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @SelectProvider(type=GuideGradeSqlProvider.class, method="countByExample")
    int countByExample(GuideGradeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=GuideGradeSqlProvider.class, method="deleteByExample")
    int deleteByExample(GuideGradeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `guide_grade`",
        "where guide_id = #{guideId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String guideId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `guide_grade` (guide_id, start_date, ",
        "pre_assessment, sys_assessment, ",
        "grab_order_rate, reset_count, ",
        "dispatch_priority, pickup_base, ",
        "transfer_base, daily_base, ",
        "per_use_base, total_base, ",
        "update_time, create_time)",
        "values (#{guideId,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, ",
        "#{preAssessment,jdbcType=REAL}, #{sysAssessment,jdbcType=REAL}, ",
        "#{grabOrderRate,jdbcType=INTEGER}, #{resetCount,jdbcType=INTEGER}, ",
        "#{dispatchPriority,jdbcType=INTEGER}, #{pickupBase,jdbcType=INTEGER}, ",
        "#{transferBase,jdbcType=INTEGER}, #{dailyBase,jdbcType=INTEGER}, ",
        "#{perUseBase,jdbcType=INTEGER}, #{totalBase,jdbcType=INTEGER}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(GuideGrade record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @InsertProvider(type=GuideGradeSqlProvider.class, method="insertSelective")
    int insertSelective(GuideGrade record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @SelectProvider(type=GuideGradeSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="start_date", property="startDate", jdbcType=JdbcType.DATE),
        @Result(column="pre_assessment", property="preAssessment", jdbcType=JdbcType.REAL),
        @Result(column="sys_assessment", property="sysAssessment", jdbcType=JdbcType.REAL),
        @Result(column="grab_order_rate", property="grabOrderRate", jdbcType=JdbcType.INTEGER),
        @Result(column="reset_count", property="resetCount", jdbcType=JdbcType.INTEGER),
        @Result(column="dispatch_priority", property="dispatchPriority", jdbcType=JdbcType.INTEGER),
        @Result(column="pickup_base", property="pickupBase", jdbcType=JdbcType.INTEGER),
        @Result(column="transfer_base", property="transferBase", jdbcType=JdbcType.INTEGER),
        @Result(column="daily_base", property="dailyBase", jdbcType=JdbcType.INTEGER),
        @Result(column="per_use_base", property="perUseBase", jdbcType=JdbcType.INTEGER),
        @Result(column="total_base", property="totalBase", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<GuideGrade> selectByExample(GuideGradeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "guide_id, start_date, pre_assessment, sys_assessment, grab_order_rate, reset_count, ",
        "dispatch_priority, pickup_base, transfer_base, daily_base, per_use_base, total_base, ",
        "update_time, create_time",
        "from `guide_grade`",
        "where guide_id = #{guideId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="guide_id", property="guideId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="start_date", property="startDate", jdbcType=JdbcType.DATE),
        @Result(column="pre_assessment", property="preAssessment", jdbcType=JdbcType.REAL),
        @Result(column="sys_assessment", property="sysAssessment", jdbcType=JdbcType.REAL),
        @Result(column="grab_order_rate", property="grabOrderRate", jdbcType=JdbcType.INTEGER),
        @Result(column="reset_count", property="resetCount", jdbcType=JdbcType.INTEGER),
        @Result(column="dispatch_priority", property="dispatchPriority", jdbcType=JdbcType.INTEGER),
        @Result(column="pickup_base", property="pickupBase", jdbcType=JdbcType.INTEGER),
        @Result(column="transfer_base", property="transferBase", jdbcType=JdbcType.INTEGER),
        @Result(column="daily_base", property="dailyBase", jdbcType=JdbcType.INTEGER),
        @Result(column="per_use_base", property="perUseBase", jdbcType=JdbcType.INTEGER),
        @Result(column="total_base", property="totalBase", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    GuideGrade selectByPrimaryKey(String guideId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=GuideGradeSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") GuideGrade record, @Param("example") GuideGradeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=GuideGradeSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") GuideGrade record, @Param("example") GuideGradeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=GuideGradeSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(GuideGrade record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    @Update({
        "update `guide_grade`",
        "set start_date = #{startDate,jdbcType=DATE},",
          "pre_assessment = #{preAssessment,jdbcType=REAL},",
          "sys_assessment = #{sysAssessment,jdbcType=REAL},",
          "grab_order_rate = #{grabOrderRate,jdbcType=INTEGER},",
          "reset_count = #{resetCount,jdbcType=INTEGER},",
          "dispatch_priority = #{dispatchPriority,jdbcType=INTEGER},",
          "pickup_base = #{pickupBase,jdbcType=INTEGER},",
          "transfer_base = #{transferBase,jdbcType=INTEGER},",
          "daily_base = #{dailyBase,jdbcType=INTEGER},",
          "per_use_base = #{perUseBase,jdbcType=INTEGER},",
          "total_base = #{totalBase,jdbcType=INTEGER},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where guide_id = #{guideId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(GuideGrade record);
}