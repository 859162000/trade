package com.hbc.api.trade.bdata.mapper.guide.gen;

import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideGrade;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideGradeExample.Criteria;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideGradeExample.Criterion;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideGradeExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class GuideGradeSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public String countByExample(GuideGradeExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`guide_grade`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public String deleteByExample(GuideGradeExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`guide_grade`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public String insertSelective(GuideGrade record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`guide_grade`");
        
        if (record.getGuideId() != null) {
            sql.VALUES("guide_id", "#{guideId,jdbcType=VARCHAR}");
        }
        
        if (record.getStartDate() != null) {
            sql.VALUES("start_date", "#{startDate,jdbcType=DATE}");
        }
        
        if (record.getPreAssessment() != null) {
            sql.VALUES("pre_assessment", "#{preAssessment,jdbcType=REAL}");
        }
        
        if (record.getSysAssessment() != null) {
            sql.VALUES("sys_assessment", "#{sysAssessment,jdbcType=REAL}");
        }
        
        if (record.getGrabOrderRate() != null) {
            sql.VALUES("grab_order_rate", "#{grabOrderRate,jdbcType=INTEGER}");
        }
        
        if (record.getResetCount() != null) {
            sql.VALUES("reset_count", "#{resetCount,jdbcType=INTEGER}");
        }
        
        if (record.getDispatchPriority() != null) {
            sql.VALUES("dispatch_priority", "#{dispatchPriority,jdbcType=INTEGER}");
        }
        
        if (record.getPickupBase() != null) {
            sql.VALUES("pickup_base", "#{pickupBase,jdbcType=INTEGER}");
        }
        
        if (record.getTransferBase() != null) {
            sql.VALUES("transfer_base", "#{transferBase,jdbcType=INTEGER}");
        }
        
        if (record.getDailyBase() != null) {
            sql.VALUES("daily_base", "#{dailyBase,jdbcType=INTEGER}");
        }
        
        if (record.getPerUseBase() != null) {
            sql.VALUES("per_use_base", "#{perUseBase,jdbcType=INTEGER}");
        }
        
        if (record.getTotalBase() != null) {
            sql.VALUES("total_base", "#{totalBase,jdbcType=INTEGER}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public String selectByExample(GuideGradeExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("guide_id");
        } else {
            sql.SELECT("guide_id");
        }
        sql.SELECT("start_date");
        sql.SELECT("pre_assessment");
        sql.SELECT("sys_assessment");
        sql.SELECT("grab_order_rate");
        sql.SELECT("reset_count");
        sql.SELECT("dispatch_priority");
        sql.SELECT("pickup_base");
        sql.SELECT("transfer_base");
        sql.SELECT("daily_base");
        sql.SELECT("per_use_base");
        sql.SELECT("total_base");
        sql.SELECT("update_time");
        sql.SELECT("create_time");
        sql.FROM("`guide_grade`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        GuideGrade record = (GuideGrade) parameter.get("record");
        GuideGradeExample example = (GuideGradeExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`guide_grade`");
        
        if (record.getGuideId() != null) {
            sql.SET("guide_id = #{record.guideId,jdbcType=VARCHAR}");
        }
        
        if (record.getStartDate() != null) {
            sql.SET("start_date = #{record.startDate,jdbcType=DATE}");
        }
        
        if (record.getPreAssessment() != null) {
            sql.SET("pre_assessment = #{record.preAssessment,jdbcType=REAL}");
        }
        
        if (record.getSysAssessment() != null) {
            sql.SET("sys_assessment = #{record.sysAssessment,jdbcType=REAL}");
        }
        
        if (record.getGrabOrderRate() != null) {
            sql.SET("grab_order_rate = #{record.grabOrderRate,jdbcType=INTEGER}");
        }
        
        if (record.getResetCount() != null) {
            sql.SET("reset_count = #{record.resetCount,jdbcType=INTEGER}");
        }
        
        if (record.getDispatchPriority() != null) {
            sql.SET("dispatch_priority = #{record.dispatchPriority,jdbcType=INTEGER}");
        }
        
        if (record.getPickupBase() != null) {
            sql.SET("pickup_base = #{record.pickupBase,jdbcType=INTEGER}");
        }
        
        if (record.getTransferBase() != null) {
            sql.SET("transfer_base = #{record.transferBase,jdbcType=INTEGER}");
        }
        
        if (record.getDailyBase() != null) {
            sql.SET("daily_base = #{record.dailyBase,jdbcType=INTEGER}");
        }
        
        if (record.getPerUseBase() != null) {
            sql.SET("per_use_base = #{record.perUseBase,jdbcType=INTEGER}");
        }
        
        if (record.getTotalBase() != null) {
            sql.SET("total_base = #{record.totalBase,jdbcType=INTEGER}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`guide_grade`");
        
        sql.SET("guide_id = #{record.guideId,jdbcType=VARCHAR}");
        sql.SET("start_date = #{record.startDate,jdbcType=DATE}");
        sql.SET("pre_assessment = #{record.preAssessment,jdbcType=REAL}");
        sql.SET("sys_assessment = #{record.sysAssessment,jdbcType=REAL}");
        sql.SET("grab_order_rate = #{record.grabOrderRate,jdbcType=INTEGER}");
        sql.SET("reset_count = #{record.resetCount,jdbcType=INTEGER}");
        sql.SET("dispatch_priority = #{record.dispatchPriority,jdbcType=INTEGER}");
        sql.SET("pickup_base = #{record.pickupBase,jdbcType=INTEGER}");
        sql.SET("transfer_base = #{record.transferBase,jdbcType=INTEGER}");
        sql.SET("daily_base = #{record.dailyBase,jdbcType=INTEGER}");
        sql.SET("per_use_base = #{record.perUseBase,jdbcType=INTEGER}");
        sql.SET("total_base = #{record.totalBase,jdbcType=INTEGER}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        
        GuideGradeExample example = (GuideGradeExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(GuideGrade record) {
        SQL sql = new SQL();
        sql.UPDATE("`guide_grade`");
        
        if (record.getStartDate() != null) {
            sql.SET("start_date = #{startDate,jdbcType=DATE}");
        }
        
        if (record.getPreAssessment() != null) {
            sql.SET("pre_assessment = #{preAssessment,jdbcType=REAL}");
        }
        
        if (record.getSysAssessment() != null) {
            sql.SET("sys_assessment = #{sysAssessment,jdbcType=REAL}");
        }
        
        if (record.getGrabOrderRate() != null) {
            sql.SET("grab_order_rate = #{grabOrderRate,jdbcType=INTEGER}");
        }
        
        if (record.getResetCount() != null) {
            sql.SET("reset_count = #{resetCount,jdbcType=INTEGER}");
        }
        
        if (record.getDispatchPriority() != null) {
            sql.SET("dispatch_priority = #{dispatchPriority,jdbcType=INTEGER}");
        }
        
        if (record.getPickupBase() != null) {
            sql.SET("pickup_base = #{pickupBase,jdbcType=INTEGER}");
        }
        
        if (record.getTransferBase() != null) {
            sql.SET("transfer_base = #{transferBase,jdbcType=INTEGER}");
        }
        
        if (record.getDailyBase() != null) {
            sql.SET("daily_base = #{dailyBase,jdbcType=INTEGER}");
        }
        
        if (record.getPerUseBase() != null) {
            sql.SET("per_use_base = #{perUseBase,jdbcType=INTEGER}");
        }
        
        if (record.getTotalBase() != null) {
            sql.SET("total_base = #{totalBase,jdbcType=INTEGER}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("guide_id = #{guideId,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, GuideGradeExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}