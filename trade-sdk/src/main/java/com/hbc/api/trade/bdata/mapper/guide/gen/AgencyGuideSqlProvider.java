package com.hbc.api.trade.bdata.mapper.guide.gen;

import com.hbc.api.trade.bdata.mapper.guide.gen.bean.AgencyGuide;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.AgencyGuideExample.Criteria;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.AgencyGuideExample.Criterion;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.AgencyGuideExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class AgencyGuideSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency_guide`
     *
     * @mbggenerated
     */
    public String countByExample(AgencyGuideExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`agency_guide`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency_guide`
     *
     * @mbggenerated
     */
    public String deleteByExample(AgencyGuideExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`agency_guide`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency_guide`
     *
     * @mbggenerated
     */
    public String insertSelective(AgencyGuide record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`agency_guide`");
        
        if (record.getAgencyGuideId() != null) {
            sql.VALUES("agency_guide_id", "#{agencyGuideId,jdbcType=INTEGER}");
        }
        
        if (record.getUniqueCode() != null) {
            sql.VALUES("unique_code", "#{uniqueCode,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideId() != null) {
            sql.VALUES("guide_id", "#{guideId,jdbcType=BIGINT}");
        }
        
        if (record.getAgencyId() != null) {
            sql.VALUES("agency_id", "#{agencyId,jdbcType=INTEGER}");
        }
        
        if (record.getGuideName() != null) {
            sql.VALUES("guide_name", "#{guideName,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideAreaCode() != null) {
            sql.VALUES("guide_area_code", "#{guideAreaCode,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideMobile() != null) {
            sql.VALUES("guide_mobile", "#{guideMobile,jdbcType=VARCHAR}");
        }
        
        if (record.getSendTime() != null) {
            sql.VALUES("send_time", "#{sendTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUseTime() != null) {
            sql.VALUES("use_time", "#{useTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRegisterTime() != null) {
            sql.VALUES("register_time", "#{registerTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getType() != null) {
            sql.VALUES("type", "#{type,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=INTEGER}");
        }
        
        if (record.getBindTime() != null) {
            sql.VALUES("bind_time", "#{bindTime,jdbcType=DATE}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency_guide`
     *
     * @mbggenerated
     */
    public String selectByExample(AgencyGuideExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("agency_guide_id");
        } else {
            sql.SELECT("agency_guide_id");
        }
        sql.SELECT("unique_code");
        sql.SELECT("guide_id");
        sql.SELECT("agency_id");
        sql.SELECT("guide_name");
        sql.SELECT("guide_area_code");
        sql.SELECT("guide_mobile");
        sql.SELECT("send_time");
        sql.SELECT("use_time");
        sql.SELECT("register_time");
        sql.SELECT("type");
        sql.SELECT("status");
        sql.SELECT("bind_time");
        sql.SELECT("update_time");
        sql.SELECT("create_time");
        sql.FROM("`agency_guide`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency_guide`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        AgencyGuide record = (AgencyGuide) parameter.get("record");
        AgencyGuideExample example = (AgencyGuideExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`agency_guide`");
        
        if (record.getAgencyGuideId() != null) {
            sql.SET("agency_guide_id = #{record.agencyGuideId,jdbcType=INTEGER}");
        }
        
        if (record.getUniqueCode() != null) {
            sql.SET("unique_code = #{record.uniqueCode,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideId() != null) {
            sql.SET("guide_id = #{record.guideId,jdbcType=BIGINT}");
        }
        
        if (record.getAgencyId() != null) {
            sql.SET("agency_id = #{record.agencyId,jdbcType=INTEGER}");
        }
        
        if (record.getGuideName() != null) {
            sql.SET("guide_name = #{record.guideName,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideAreaCode() != null) {
            sql.SET("guide_area_code = #{record.guideAreaCode,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideMobile() != null) {
            sql.SET("guide_mobile = #{record.guideMobile,jdbcType=VARCHAR}");
        }
        
        if (record.getSendTime() != null) {
            sql.SET("send_time = #{record.sendTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUseTime() != null) {
            sql.SET("use_time = #{record.useTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRegisterTime() != null) {
            sql.SET("register_time = #{record.registerTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getType() != null) {
            sql.SET("type = #{record.type,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{record.status,jdbcType=INTEGER}");
        }
        
        if (record.getBindTime() != null) {
            sql.SET("bind_time = #{record.bindTime,jdbcType=DATE}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency_guide`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`agency_guide`");
        
        sql.SET("agency_guide_id = #{record.agencyGuideId,jdbcType=INTEGER}");
        sql.SET("unique_code = #{record.uniqueCode,jdbcType=VARCHAR}");
        sql.SET("guide_id = #{record.guideId,jdbcType=BIGINT}");
        sql.SET("agency_id = #{record.agencyId,jdbcType=INTEGER}");
        sql.SET("guide_name = #{record.guideName,jdbcType=VARCHAR}");
        sql.SET("guide_area_code = #{record.guideAreaCode,jdbcType=VARCHAR}");
        sql.SET("guide_mobile = #{record.guideMobile,jdbcType=VARCHAR}");
        sql.SET("send_time = #{record.sendTime,jdbcType=TIMESTAMP}");
        sql.SET("use_time = #{record.useTime,jdbcType=TIMESTAMP}");
        sql.SET("register_time = #{record.registerTime,jdbcType=TIMESTAMP}");
        sql.SET("type = #{record.type,jdbcType=INTEGER}");
        sql.SET("status = #{record.status,jdbcType=INTEGER}");
        sql.SET("bind_time = #{record.bindTime,jdbcType=DATE}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        
        AgencyGuideExample example = (AgencyGuideExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency_guide`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(AgencyGuide record) {
        SQL sql = new SQL();
        sql.UPDATE("`agency_guide`");
        
        if (record.getUniqueCode() != null) {
            sql.SET("unique_code = #{uniqueCode,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideId() != null) {
            sql.SET("guide_id = #{guideId,jdbcType=BIGINT}");
        }
        
        if (record.getAgencyId() != null) {
            sql.SET("agency_id = #{agencyId,jdbcType=INTEGER}");
        }
        
        if (record.getGuideName() != null) {
            sql.SET("guide_name = #{guideName,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideAreaCode() != null) {
            sql.SET("guide_area_code = #{guideAreaCode,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideMobile() != null) {
            sql.SET("guide_mobile = #{guideMobile,jdbcType=VARCHAR}");
        }
        
        if (record.getSendTime() != null) {
            sql.SET("send_time = #{sendTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUseTime() != null) {
            sql.SET("use_time = #{useTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRegisterTime() != null) {
            sql.SET("register_time = #{registerTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getType() != null) {
            sql.SET("type = #{type,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=INTEGER}");
        }
        
        if (record.getBindTime() != null) {
            sql.SET("bind_time = #{bindTime,jdbcType=DATE}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("agency_guide_id = #{agencyGuideId,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency_guide`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, AgencyGuideExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}