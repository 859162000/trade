package com.hbc.api.trade.bdata.mapper.coup.gen;

import com.hbc.api.trade.bdata.mapper.coup.gen.bean.CouponBean;
import com.hbc.api.trade.bdata.mapper.coup.gen.bean.CouponBeanExample.Criteria;
import com.hbc.api.trade.bdata.mapper.coup.gen.bean.CouponBeanExample.Criterion;
import com.hbc.api.trade.bdata.mapper.coup.gen.bean.CouponBeanExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class CouponBeanSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `coupon`
     *
     * @mbggenerated
     */
    public String countByExample(CouponBeanExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`coupon`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `coupon`
     *
     * @mbggenerated
     */
    public String deleteByExample(CouponBeanExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`coupon`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `coupon`
     *
     * @mbggenerated
     */
    public String insertSelective(CouponBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`coupon`");
        
        if (record.getCouponId() != null) {
            sql.VALUES("coupon_id", "#{couponId,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponBatchId() != null) {
            sql.VALUES("coupon_batch_id", "#{couponBatchId,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponPackageId() != null) {
            sql.VALUES("coupon_package_id", "#{couponPackageId,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponCode() != null) {
            sql.VALUES("coupon_code", "#{couponCode,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderNo() != null) {
            sql.VALUES("order_no", "#{orderNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponPrice() != null) {
            sql.VALUES("coupon_price", "#{couponPrice,jdbcType=INTEGER}");
        }
        
        if (record.getCouponDiscount() != null) {
            sql.VALUES("coupon_discount", "#{couponDiscount,jdbcType=INTEGER}");
        }
        
        if (record.getPassword() != null) {
            sql.VALUES("password", "#{password,jdbcType=VARCHAR}");
        }
        
        if (record.getIsRead() != null) {
            sql.VALUES("is_read", "#{isRead,jdbcType=TINYINT}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=INTEGER}");
        }
        
        if (record.getBindUserType() != null) {
            sql.VALUES("bind_user_type", "#{bindUserType,jdbcType=TINYINT}");
        }
        
        if (record.getBindUserId() != null) {
            sql.VALUES("bind_user_id", "#{bindUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getBindDateTime() != null) {
            sql.VALUES("bind_date_time", "#{bindDateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUseUserId() != null) {
            sql.VALUES("use_user_id", "#{useUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getUseDateTime() != null) {
            sql.VALUES("use_date_time", "#{useDateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCouponType() != null) {
            sql.VALUES("coupon_type", "#{couponType,jdbcType=TINYINT}");
        }
        
        if (record.getTransferCount() != null) {
            sql.VALUES("transfer_count", "#{transferCount,jdbcType=INTEGER}");
        }
        
        if (record.getFromUserType() != null) {
            sql.VALUES("from_user_type", "#{fromUserType,jdbcType=TINYINT}");
        }
        
        if (record.getFromUserId() != null) {
            sql.VALUES("from_user_id", "#{fromUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getVendorId() != null) {
            sql.VALUES("vendor_id", "#{vendorId,jdbcType=VARCHAR}");
        }
        
        if (record.getVendorType() != null) {
            sql.VALUES("vendor_type", "#{vendorType,jdbcType=TINYINT}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `coupon`
     *
     * @mbggenerated
     */
    public String selectByExample(CouponBeanExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("coupon_id");
        } else {
            sql.SELECT("coupon_id");
        }
        sql.SELECT("coupon_batch_id");
        sql.SELECT("coupon_package_id");
        sql.SELECT("coupon_code");
        sql.SELECT("order_no");
        sql.SELECT("coupon_price");
        sql.SELECT("coupon_discount");
        sql.SELECT("password");
        sql.SELECT("is_read");
        sql.SELECT("status");
        sql.SELECT("bind_user_type");
        sql.SELECT("bind_user_id");
        sql.SELECT("bind_date_time");
        sql.SELECT("use_user_id");
        sql.SELECT("use_date_time");
        sql.SELECT("coupon_type");
        sql.SELECT("transfer_count");
        sql.SELECT("from_user_type");
        sql.SELECT("from_user_id");
        sql.SELECT("vendor_id");
        sql.SELECT("vendor_type");
        sql.SELECT("update_time");
        sql.SELECT("create_time");
        sql.FROM("`coupon`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `coupon`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        CouponBean record = (CouponBean) parameter.get("record");
        CouponBeanExample example = (CouponBeanExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`coupon`");
        
        if (record.getCouponId() != null) {
            sql.SET("coupon_id = #{record.couponId,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponBatchId() != null) {
            sql.SET("coupon_batch_id = #{record.couponBatchId,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponPackageId() != null) {
            sql.SET("coupon_package_id = #{record.couponPackageId,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponCode() != null) {
            sql.SET("coupon_code = #{record.couponCode,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderNo() != null) {
            sql.SET("order_no = #{record.orderNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponPrice() != null) {
            sql.SET("coupon_price = #{record.couponPrice,jdbcType=INTEGER}");
        }
        
        if (record.getCouponDiscount() != null) {
            sql.SET("coupon_discount = #{record.couponDiscount,jdbcType=INTEGER}");
        }
        
        if (record.getPassword() != null) {
            sql.SET("password = #{record.password,jdbcType=VARCHAR}");
        }
        
        if (record.getIsRead() != null) {
            sql.SET("is_read = #{record.isRead,jdbcType=TINYINT}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{record.status,jdbcType=INTEGER}");
        }
        
        if (record.getBindUserType() != null) {
            sql.SET("bind_user_type = #{record.bindUserType,jdbcType=TINYINT}");
        }
        
        if (record.getBindUserId() != null) {
            sql.SET("bind_user_id = #{record.bindUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getBindDateTime() != null) {
            sql.SET("bind_date_time = #{record.bindDateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUseUserId() != null) {
            sql.SET("use_user_id = #{record.useUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getUseDateTime() != null) {
            sql.SET("use_date_time = #{record.useDateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCouponType() != null) {
            sql.SET("coupon_type = #{record.couponType,jdbcType=TINYINT}");
        }
        
        if (record.getTransferCount() != null) {
            sql.SET("transfer_count = #{record.transferCount,jdbcType=INTEGER}");
        }
        
        if (record.getFromUserType() != null) {
            sql.SET("from_user_type = #{record.fromUserType,jdbcType=TINYINT}");
        }
        
        if (record.getFromUserId() != null) {
            sql.SET("from_user_id = #{record.fromUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getVendorId() != null) {
            sql.SET("vendor_id = #{record.vendorId,jdbcType=VARCHAR}");
        }
        
        if (record.getVendorType() != null) {
            sql.SET("vendor_type = #{record.vendorType,jdbcType=TINYINT}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `coupon`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`coupon`");
        
        sql.SET("coupon_id = #{record.couponId,jdbcType=VARCHAR}");
        sql.SET("coupon_batch_id = #{record.couponBatchId,jdbcType=VARCHAR}");
        sql.SET("coupon_package_id = #{record.couponPackageId,jdbcType=VARCHAR}");
        sql.SET("coupon_code = #{record.couponCode,jdbcType=VARCHAR}");
        sql.SET("order_no = #{record.orderNo,jdbcType=VARCHAR}");
        sql.SET("coupon_price = #{record.couponPrice,jdbcType=INTEGER}");
        sql.SET("coupon_discount = #{record.couponDiscount,jdbcType=INTEGER}");
        sql.SET("password = #{record.password,jdbcType=VARCHAR}");
        sql.SET("is_read = #{record.isRead,jdbcType=TINYINT}");
        sql.SET("status = #{record.status,jdbcType=INTEGER}");
        sql.SET("bind_user_type = #{record.bindUserType,jdbcType=TINYINT}");
        sql.SET("bind_user_id = #{record.bindUserId,jdbcType=VARCHAR}");
        sql.SET("bind_date_time = #{record.bindDateTime,jdbcType=TIMESTAMP}");
        sql.SET("use_user_id = #{record.useUserId,jdbcType=VARCHAR}");
        sql.SET("use_date_time = #{record.useDateTime,jdbcType=TIMESTAMP}");
        sql.SET("coupon_type = #{record.couponType,jdbcType=TINYINT}");
        sql.SET("transfer_count = #{record.transferCount,jdbcType=INTEGER}");
        sql.SET("from_user_type = #{record.fromUserType,jdbcType=TINYINT}");
        sql.SET("from_user_id = #{record.fromUserId,jdbcType=VARCHAR}");
        sql.SET("vendor_id = #{record.vendorId,jdbcType=VARCHAR}");
        sql.SET("vendor_type = #{record.vendorType,jdbcType=TINYINT}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        
        CouponBeanExample example = (CouponBeanExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `coupon`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(CouponBean record) {
        SQL sql = new SQL();
        sql.UPDATE("`coupon`");
        
        if (record.getCouponBatchId() != null) {
            sql.SET("coupon_batch_id = #{couponBatchId,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponPackageId() != null) {
            sql.SET("coupon_package_id = #{couponPackageId,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponCode() != null) {
            sql.SET("coupon_code = #{couponCode,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderNo() != null) {
            sql.SET("order_no = #{orderNo,jdbcType=VARCHAR}");
        }
        
        if (record.getCouponPrice() != null) {
            sql.SET("coupon_price = #{couponPrice,jdbcType=INTEGER}");
        }
        
        if (record.getCouponDiscount() != null) {
            sql.SET("coupon_discount = #{couponDiscount,jdbcType=INTEGER}");
        }
        
        if (record.getPassword() != null) {
            sql.SET("password = #{password,jdbcType=VARCHAR}");
        }
        
        if (record.getIsRead() != null) {
            sql.SET("is_read = #{isRead,jdbcType=TINYINT}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=INTEGER}");
        }
        
        if (record.getBindUserType() != null) {
            sql.SET("bind_user_type = #{bindUserType,jdbcType=TINYINT}");
        }
        
        if (record.getBindUserId() != null) {
            sql.SET("bind_user_id = #{bindUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getBindDateTime() != null) {
            sql.SET("bind_date_time = #{bindDateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUseUserId() != null) {
            sql.SET("use_user_id = #{useUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getUseDateTime() != null) {
            sql.SET("use_date_time = #{useDateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCouponType() != null) {
            sql.SET("coupon_type = #{couponType,jdbcType=TINYINT}");
        }
        
        if (record.getTransferCount() != null) {
            sql.SET("transfer_count = #{transferCount,jdbcType=INTEGER}");
        }
        
        if (record.getFromUserType() != null) {
            sql.SET("from_user_type = #{fromUserType,jdbcType=TINYINT}");
        }
        
        if (record.getFromUserId() != null) {
            sql.SET("from_user_id = #{fromUserId,jdbcType=VARCHAR}");
        }
        
        if (record.getVendorId() != null) {
            sql.SET("vendor_id = #{vendorId,jdbcType=VARCHAR}");
        }
        
        if (record.getVendorType() != null) {
            sql.SET("vendor_type = #{vendorType,jdbcType=TINYINT}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("coupon_id = #{couponId,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `coupon`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, CouponBeanExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}