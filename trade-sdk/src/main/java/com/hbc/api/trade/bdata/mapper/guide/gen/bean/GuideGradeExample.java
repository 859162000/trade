package com.hbc.api.trade.bdata.mapper.guide.gen.bean;

import com.hbc.api.trade.bdata.common.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class GuideGradeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public GuideGradeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andGuideIdIsNull() {
            addCriterion("guide_id is null");
            return (Criteria) this;
        }

        public Criteria andGuideIdIsNotNull() {
            addCriterion("guide_id is not null");
            return (Criteria) this;
        }

        public Criteria andGuideIdEqualTo(String value) {
            addCriterion("guide_id =", value, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdNotEqualTo(String value) {
            addCriterion("guide_id <>", value, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdGreaterThan(String value) {
            addCriterion("guide_id >", value, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdGreaterThanOrEqualTo(String value) {
            addCriterion("guide_id >=", value, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdLessThan(String value) {
            addCriterion("guide_id <", value, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdLessThanOrEqualTo(String value) {
            addCriterion("guide_id <=", value, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdLike(String value) {
            addCriterion("guide_id like", value, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdNotLike(String value) {
            addCriterion("guide_id not like", value, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdIn(List<String> values) {
            addCriterion("guide_id in", values, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdNotIn(List<String> values) {
            addCriterion("guide_id not in", values, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdBetween(String value1, String value2) {
            addCriterion("guide_id between", value1, value2, "guideId");
            return (Criteria) this;
        }

        public Criteria andGuideIdNotBetween(String value1, String value2) {
            addCriterion("guide_id not between", value1, value2, "guideId");
            return (Criteria) this;
        }

        public Criteria andStartDateIsNull() {
            addCriterion("start_date is null");
            return (Criteria) this;
        }

        public Criteria andStartDateIsNotNull() {
            addCriterion("start_date is not null");
            return (Criteria) this;
        }

        public Criteria andStartDateEqualTo(Date value) {
            addCriterionForJDBCDate("start_date =", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("start_date <>", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateGreaterThan(Date value) {
            addCriterionForJDBCDate("start_date >", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("start_date >=", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateLessThan(Date value) {
            addCriterionForJDBCDate("start_date <", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("start_date <=", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateIn(List<Date> values) {
            addCriterionForJDBCDate("start_date in", values, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("start_date not in", values, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("start_date between", value1, value2, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("start_date not between", value1, value2, "startDate");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentIsNull() {
            addCriterion("pre_assessment is null");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentIsNotNull() {
            addCriterion("pre_assessment is not null");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentEqualTo(Float value) {
            addCriterion("pre_assessment =", value, "preAssessment");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentNotEqualTo(Float value) {
            addCriterion("pre_assessment <>", value, "preAssessment");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentGreaterThan(Float value) {
            addCriterion("pre_assessment >", value, "preAssessment");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentGreaterThanOrEqualTo(Float value) {
            addCriterion("pre_assessment >=", value, "preAssessment");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentLessThan(Float value) {
            addCriterion("pre_assessment <", value, "preAssessment");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentLessThanOrEqualTo(Float value) {
            addCriterion("pre_assessment <=", value, "preAssessment");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentIn(List<Float> values) {
            addCriterion("pre_assessment in", values, "preAssessment");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentNotIn(List<Float> values) {
            addCriterion("pre_assessment not in", values, "preAssessment");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentBetween(Float value1, Float value2) {
            addCriterion("pre_assessment between", value1, value2, "preAssessment");
            return (Criteria) this;
        }

        public Criteria andPreAssessmentNotBetween(Float value1, Float value2) {
            addCriterion("pre_assessment not between", value1, value2, "preAssessment");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentIsNull() {
            addCriterion("sys_assessment is null");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentIsNotNull() {
            addCriterion("sys_assessment is not null");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentEqualTo(Float value) {
            addCriterion("sys_assessment =", value, "sysAssessment");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentNotEqualTo(Float value) {
            addCriterion("sys_assessment <>", value, "sysAssessment");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentGreaterThan(Float value) {
            addCriterion("sys_assessment >", value, "sysAssessment");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentGreaterThanOrEqualTo(Float value) {
            addCriterion("sys_assessment >=", value, "sysAssessment");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentLessThan(Float value) {
            addCriterion("sys_assessment <", value, "sysAssessment");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentLessThanOrEqualTo(Float value) {
            addCriterion("sys_assessment <=", value, "sysAssessment");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentIn(List<Float> values) {
            addCriterion("sys_assessment in", values, "sysAssessment");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentNotIn(List<Float> values) {
            addCriterion("sys_assessment not in", values, "sysAssessment");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentBetween(Float value1, Float value2) {
            addCriterion("sys_assessment between", value1, value2, "sysAssessment");
            return (Criteria) this;
        }

        public Criteria andSysAssessmentNotBetween(Float value1, Float value2) {
            addCriterion("sys_assessment not between", value1, value2, "sysAssessment");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateIsNull() {
            addCriterion("grab_order_rate is null");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateIsNotNull() {
            addCriterion("grab_order_rate is not null");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateEqualTo(Integer value) {
            addCriterion("grab_order_rate =", value, "grabOrderRate");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateNotEqualTo(Integer value) {
            addCriterion("grab_order_rate <>", value, "grabOrderRate");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateGreaterThan(Integer value) {
            addCriterion("grab_order_rate >", value, "grabOrderRate");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateGreaterThanOrEqualTo(Integer value) {
            addCriterion("grab_order_rate >=", value, "grabOrderRate");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateLessThan(Integer value) {
            addCriterion("grab_order_rate <", value, "grabOrderRate");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateLessThanOrEqualTo(Integer value) {
            addCriterion("grab_order_rate <=", value, "grabOrderRate");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateIn(List<Integer> values) {
            addCriterion("grab_order_rate in", values, "grabOrderRate");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateNotIn(List<Integer> values) {
            addCriterion("grab_order_rate not in", values, "grabOrderRate");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateBetween(Integer value1, Integer value2) {
            addCriterion("grab_order_rate between", value1, value2, "grabOrderRate");
            return (Criteria) this;
        }

        public Criteria andGrabOrderRateNotBetween(Integer value1, Integer value2) {
            addCriterion("grab_order_rate not between", value1, value2, "grabOrderRate");
            return (Criteria) this;
        }

        public Criteria andResetCountIsNull() {
            addCriterion("reset_count is null");
            return (Criteria) this;
        }

        public Criteria andResetCountIsNotNull() {
            addCriterion("reset_count is not null");
            return (Criteria) this;
        }

        public Criteria andResetCountEqualTo(Integer value) {
            addCriterion("reset_count =", value, "resetCount");
            return (Criteria) this;
        }

        public Criteria andResetCountNotEqualTo(Integer value) {
            addCriterion("reset_count <>", value, "resetCount");
            return (Criteria) this;
        }

        public Criteria andResetCountGreaterThan(Integer value) {
            addCriterion("reset_count >", value, "resetCount");
            return (Criteria) this;
        }

        public Criteria andResetCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("reset_count >=", value, "resetCount");
            return (Criteria) this;
        }

        public Criteria andResetCountLessThan(Integer value) {
            addCriterion("reset_count <", value, "resetCount");
            return (Criteria) this;
        }

        public Criteria andResetCountLessThanOrEqualTo(Integer value) {
            addCriterion("reset_count <=", value, "resetCount");
            return (Criteria) this;
        }

        public Criteria andResetCountIn(List<Integer> values) {
            addCriterion("reset_count in", values, "resetCount");
            return (Criteria) this;
        }

        public Criteria andResetCountNotIn(List<Integer> values) {
            addCriterion("reset_count not in", values, "resetCount");
            return (Criteria) this;
        }

        public Criteria andResetCountBetween(Integer value1, Integer value2) {
            addCriterion("reset_count between", value1, value2, "resetCount");
            return (Criteria) this;
        }

        public Criteria andResetCountNotBetween(Integer value1, Integer value2) {
            addCriterion("reset_count not between", value1, value2, "resetCount");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityIsNull() {
            addCriterion("dispatch_priority is null");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityIsNotNull() {
            addCriterion("dispatch_priority is not null");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityEqualTo(Integer value) {
            addCriterion("dispatch_priority =", value, "dispatchPriority");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityNotEqualTo(Integer value) {
            addCriterion("dispatch_priority <>", value, "dispatchPriority");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityGreaterThan(Integer value) {
            addCriterion("dispatch_priority >", value, "dispatchPriority");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityGreaterThanOrEqualTo(Integer value) {
            addCriterion("dispatch_priority >=", value, "dispatchPriority");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityLessThan(Integer value) {
            addCriterion("dispatch_priority <", value, "dispatchPriority");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityLessThanOrEqualTo(Integer value) {
            addCriterion("dispatch_priority <=", value, "dispatchPriority");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityIn(List<Integer> values) {
            addCriterion("dispatch_priority in", values, "dispatchPriority");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityNotIn(List<Integer> values) {
            addCriterion("dispatch_priority not in", values, "dispatchPriority");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityBetween(Integer value1, Integer value2) {
            addCriterion("dispatch_priority between", value1, value2, "dispatchPriority");
            return (Criteria) this;
        }

        public Criteria andDispatchPriorityNotBetween(Integer value1, Integer value2) {
            addCriterion("dispatch_priority not between", value1, value2, "dispatchPriority");
            return (Criteria) this;
        }

        public Criteria andPickupBaseIsNull() {
            addCriterion("pickup_base is null");
            return (Criteria) this;
        }

        public Criteria andPickupBaseIsNotNull() {
            addCriterion("pickup_base is not null");
            return (Criteria) this;
        }

        public Criteria andPickupBaseEqualTo(Integer value) {
            addCriterion("pickup_base =", value, "pickupBase");
            return (Criteria) this;
        }

        public Criteria andPickupBaseNotEqualTo(Integer value) {
            addCriterion("pickup_base <>", value, "pickupBase");
            return (Criteria) this;
        }

        public Criteria andPickupBaseGreaterThan(Integer value) {
            addCriterion("pickup_base >", value, "pickupBase");
            return (Criteria) this;
        }

        public Criteria andPickupBaseGreaterThanOrEqualTo(Integer value) {
            addCriterion("pickup_base >=", value, "pickupBase");
            return (Criteria) this;
        }

        public Criteria andPickupBaseLessThan(Integer value) {
            addCriterion("pickup_base <", value, "pickupBase");
            return (Criteria) this;
        }

        public Criteria andPickupBaseLessThanOrEqualTo(Integer value) {
            addCriterion("pickup_base <=", value, "pickupBase");
            return (Criteria) this;
        }

        public Criteria andPickupBaseIn(List<Integer> values) {
            addCriterion("pickup_base in", values, "pickupBase");
            return (Criteria) this;
        }

        public Criteria andPickupBaseNotIn(List<Integer> values) {
            addCriterion("pickup_base not in", values, "pickupBase");
            return (Criteria) this;
        }

        public Criteria andPickupBaseBetween(Integer value1, Integer value2) {
            addCriterion("pickup_base between", value1, value2, "pickupBase");
            return (Criteria) this;
        }

        public Criteria andPickupBaseNotBetween(Integer value1, Integer value2) {
            addCriterion("pickup_base not between", value1, value2, "pickupBase");
            return (Criteria) this;
        }

        public Criteria andTransferBaseIsNull() {
            addCriterion("transfer_base is null");
            return (Criteria) this;
        }

        public Criteria andTransferBaseIsNotNull() {
            addCriterion("transfer_base is not null");
            return (Criteria) this;
        }

        public Criteria andTransferBaseEqualTo(Integer value) {
            addCriterion("transfer_base =", value, "transferBase");
            return (Criteria) this;
        }

        public Criteria andTransferBaseNotEqualTo(Integer value) {
            addCriterion("transfer_base <>", value, "transferBase");
            return (Criteria) this;
        }

        public Criteria andTransferBaseGreaterThan(Integer value) {
            addCriterion("transfer_base >", value, "transferBase");
            return (Criteria) this;
        }

        public Criteria andTransferBaseGreaterThanOrEqualTo(Integer value) {
            addCriterion("transfer_base >=", value, "transferBase");
            return (Criteria) this;
        }

        public Criteria andTransferBaseLessThan(Integer value) {
            addCriterion("transfer_base <", value, "transferBase");
            return (Criteria) this;
        }

        public Criteria andTransferBaseLessThanOrEqualTo(Integer value) {
            addCriterion("transfer_base <=", value, "transferBase");
            return (Criteria) this;
        }

        public Criteria andTransferBaseIn(List<Integer> values) {
            addCriterion("transfer_base in", values, "transferBase");
            return (Criteria) this;
        }

        public Criteria andTransferBaseNotIn(List<Integer> values) {
            addCriterion("transfer_base not in", values, "transferBase");
            return (Criteria) this;
        }

        public Criteria andTransferBaseBetween(Integer value1, Integer value2) {
            addCriterion("transfer_base between", value1, value2, "transferBase");
            return (Criteria) this;
        }

        public Criteria andTransferBaseNotBetween(Integer value1, Integer value2) {
            addCriterion("transfer_base not between", value1, value2, "transferBase");
            return (Criteria) this;
        }

        public Criteria andDailyBaseIsNull() {
            addCriterion("daily_base is null");
            return (Criteria) this;
        }

        public Criteria andDailyBaseIsNotNull() {
            addCriterion("daily_base is not null");
            return (Criteria) this;
        }

        public Criteria andDailyBaseEqualTo(Integer value) {
            addCriterion("daily_base =", value, "dailyBase");
            return (Criteria) this;
        }

        public Criteria andDailyBaseNotEqualTo(Integer value) {
            addCriterion("daily_base <>", value, "dailyBase");
            return (Criteria) this;
        }

        public Criteria andDailyBaseGreaterThan(Integer value) {
            addCriterion("daily_base >", value, "dailyBase");
            return (Criteria) this;
        }

        public Criteria andDailyBaseGreaterThanOrEqualTo(Integer value) {
            addCriterion("daily_base >=", value, "dailyBase");
            return (Criteria) this;
        }

        public Criteria andDailyBaseLessThan(Integer value) {
            addCriterion("daily_base <", value, "dailyBase");
            return (Criteria) this;
        }

        public Criteria andDailyBaseLessThanOrEqualTo(Integer value) {
            addCriterion("daily_base <=", value, "dailyBase");
            return (Criteria) this;
        }

        public Criteria andDailyBaseIn(List<Integer> values) {
            addCriterion("daily_base in", values, "dailyBase");
            return (Criteria) this;
        }

        public Criteria andDailyBaseNotIn(List<Integer> values) {
            addCriterion("daily_base not in", values, "dailyBase");
            return (Criteria) this;
        }

        public Criteria andDailyBaseBetween(Integer value1, Integer value2) {
            addCriterion("daily_base between", value1, value2, "dailyBase");
            return (Criteria) this;
        }

        public Criteria andDailyBaseNotBetween(Integer value1, Integer value2) {
            addCriterion("daily_base not between", value1, value2, "dailyBase");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseIsNull() {
            addCriterion("per_use_base is null");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseIsNotNull() {
            addCriterion("per_use_base is not null");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseEqualTo(Integer value) {
            addCriterion("per_use_base =", value, "perUseBase");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseNotEqualTo(Integer value) {
            addCriterion("per_use_base <>", value, "perUseBase");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseGreaterThan(Integer value) {
            addCriterion("per_use_base >", value, "perUseBase");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseGreaterThanOrEqualTo(Integer value) {
            addCriterion("per_use_base >=", value, "perUseBase");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseLessThan(Integer value) {
            addCriterion("per_use_base <", value, "perUseBase");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseLessThanOrEqualTo(Integer value) {
            addCriterion("per_use_base <=", value, "perUseBase");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseIn(List<Integer> values) {
            addCriterion("per_use_base in", values, "perUseBase");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseNotIn(List<Integer> values) {
            addCriterion("per_use_base not in", values, "perUseBase");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseBetween(Integer value1, Integer value2) {
            addCriterion("per_use_base between", value1, value2, "perUseBase");
            return (Criteria) this;
        }

        public Criteria andPerUseBaseNotBetween(Integer value1, Integer value2) {
            addCriterion("per_use_base not between", value1, value2, "perUseBase");
            return (Criteria) this;
        }

        public Criteria andTotalBaseIsNull() {
            addCriterion("total_base is null");
            return (Criteria) this;
        }

        public Criteria andTotalBaseIsNotNull() {
            addCriterion("total_base is not null");
            return (Criteria) this;
        }

        public Criteria andTotalBaseEqualTo(Integer value) {
            addCriterion("total_base =", value, "totalBase");
            return (Criteria) this;
        }

        public Criteria andTotalBaseNotEqualTo(Integer value) {
            addCriterion("total_base <>", value, "totalBase");
            return (Criteria) this;
        }

        public Criteria andTotalBaseGreaterThan(Integer value) {
            addCriterion("total_base >", value, "totalBase");
            return (Criteria) this;
        }

        public Criteria andTotalBaseGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_base >=", value, "totalBase");
            return (Criteria) this;
        }

        public Criteria andTotalBaseLessThan(Integer value) {
            addCriterion("total_base <", value, "totalBase");
            return (Criteria) this;
        }

        public Criteria andTotalBaseLessThanOrEqualTo(Integer value) {
            addCriterion("total_base <=", value, "totalBase");
            return (Criteria) this;
        }

        public Criteria andTotalBaseIn(List<Integer> values) {
            addCriterion("total_base in", values, "totalBase");
            return (Criteria) this;
        }

        public Criteria andTotalBaseNotIn(List<Integer> values) {
            addCriterion("total_base not in", values, "totalBase");
            return (Criteria) this;
        }

        public Criteria andTotalBaseBetween(Integer value1, Integer value2) {
            addCriterion("total_base between", value1, value2, "totalBase");
            return (Criteria) this;
        }

        public Criteria andTotalBaseNotBetween(Integer value1, Integer value2) {
            addCriterion("total_base not between", value1, value2, "totalBase");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `guide_grade`
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `guide_grade`
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}