package com.hbc.api.trade.bdata.mapper.basedata.gen;

import com.hbc.api.trade.bdata.mapper.basedata.gen.bean.ContinentBean;
import com.hbc.api.trade.bdata.mapper.basedata.gen.bean.ContinentBeanExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface ContinentBeanMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `basedata_continents`
     *
     * @mbggenerated
     */
    @SelectProvider(type=ContinentBeanSqlProvider.class, method="countByExample")
    int countByExample(ContinentBeanExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `basedata_continents`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=ContinentBeanSqlProvider.class, method="deleteByExample")
    int deleteByExample(ContinentBeanExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `basedata_continents`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `basedata_continents`",
        "where continent_id = #{continentId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer continentId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `basedata_continents`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `basedata_continents` (continent_id, continent_name, ",
        "order_id, status, ",
        "updated_at, deleted_at, ",
        "created_at)",
        "values (#{continentId,jdbcType=INTEGER}, #{continentName,jdbcType=VARCHAR}, ",
        "#{orderId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP}, ",
        "#{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(ContinentBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `basedata_continents`
     *
     * @mbggenerated
     */
    @InsertProvider(type=ContinentBeanSqlProvider.class, method="insertSelective")
    int insertSelective(ContinentBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `basedata_continents`
     *
     * @mbggenerated
     */
    @SelectProvider(type=ContinentBeanSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="continent_id", property="continentId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="continent_name", property="continentName", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<ContinentBean> selectByExample(ContinentBeanExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `basedata_continents`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "continent_id, continent_name, order_id, status, updated_at, deleted_at, created_at",
        "from `basedata_continents`",
        "where continent_id = #{continentId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="continent_id", property="continentId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="continent_name", property="continentName", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_id", property="orderId", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    ContinentBean selectByPrimaryKey(Integer continentId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `basedata_continents`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=ContinentBeanSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") ContinentBean record, @Param("example") ContinentBeanExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `basedata_continents`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=ContinentBeanSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ContinentBean record);
}