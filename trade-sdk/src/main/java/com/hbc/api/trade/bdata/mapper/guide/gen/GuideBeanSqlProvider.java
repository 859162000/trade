package com.hbc.api.trade.bdata.mapper.guide.gen;

import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideBean;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideBeanExample.Criteria;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideBeanExample.Criterion;
import com.hbc.api.trade.bdata.mapper.guide.gen.bean.GuideBeanExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class GuideBeanSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide`
     *
     * @mbggenerated
     */
    public String countByExample(GuideBeanExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`guide`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide`
     *
     * @mbggenerated
     */
    public String deleteByExample(GuideBeanExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`guide`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide`
     *
     * @mbggenerated
     */
    public String insertSelective(GuideBean record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`guide`");
        
        if (record.getGuideId() != null) {
            sql.VALUES("guide_id", "#{guideId,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideNo() != null) {
            sql.VALUES("guide_no", "#{guideNo,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideName() != null) {
            sql.VALUES("guide_name", "#{guideName,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaCode() != null) {
            sql.VALUES("area_code", "#{areaCode,jdbcType=VARCHAR}");
        }
        
        if (record.getMobile() != null) {
            sql.VALUES("mobile", "#{mobile,jdbcType=VARCHAR}");
        }
        
        if (record.getFundAccountId() != null) {
            sql.VALUES("fund_account_id", "#{fundAccountId,jdbcType=VARCHAR}");
        }
        
        if (record.getContinentId() != null) {
            sql.VALUES("continent_id", "#{continentId,jdbcType=INTEGER}");
        }
        
        if (record.getContinentName() != null) {
            sql.VALUES("continent_name", "#{continentName,jdbcType=VARCHAR}");
        }
        
        if (record.getCountryId() != null) {
            sql.VALUES("country_id", "#{countryId,jdbcType=INTEGER}");
        }
        
        if (record.getCountryName() != null) {
            sql.VALUES("country_name", "#{countryName,jdbcType=VARCHAR}");
        }
        
        if (record.getCityId() != null) {
            sql.VALUES("city_id", "#{cityId,jdbcType=INTEGER}");
        }
        
        if (record.getCityName() != null) {
            sql.VALUES("city_name", "#{cityName,jdbcType=VARCHAR}");
        }
        
        if (record.getSignStatus() != null) {
            sql.VALUES("sign_status", "#{signStatus,jdbcType=TINYINT}");
        }
        
        if (record.getDrivingLicence() != null) {
            sql.VALUES("driving_licence", "#{drivingLicence,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto() != null) {
            sql.VALUES("car_photo", "#{carPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getIdentityCard() != null) {
            sql.VALUES("identity_card", "#{identityCard,jdbcType=VARCHAR}");
        }
        
        if (record.getMobileValid() != null) {
            sql.VALUES("mobile_valid", "#{mobileValid,jdbcType=TINYINT}");
        }
        
        if (record.getMobileValidMode() != null) {
            sql.VALUES("mobile_valid_mode", "#{mobileValidMode,jdbcType=TINYINT}");
        }
        
        if (record.getAvatar() != null) {
            sql.VALUES("avatar", "#{avatar,jdbcType=VARCHAR}");
        }
        
        if (record.getGender() != null) {
            sql.VALUES("gender", "#{gender,jdbcType=TINYINT}");
        }
        
        if (record.getBirthday() != null) {
            sql.VALUES("birthday", "#{birthday,jdbcType=DATE}");
        }
        
        if (record.getAddress() != null) {
            sql.VALUES("address", "#{address,jdbcType=VARCHAR}");
        }
        
        if (record.getZipcode() != null) {
            sql.VALUES("zipcode", "#{zipcode,jdbcType=VARCHAR}");
        }
        
        if (record.getLiveStart() != null) {
            sql.VALUES("live_start", "#{liveStart,jdbcType=TINYINT}");
        }
        
        if (record.getLiveYear() != null) {
            sql.VALUES("live_year", "#{liveYear,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.VALUES("email", "#{email,jdbcType=VARCHAR}");
        }
        
        if (record.getWeixin() != null) {
            sql.VALUES("weixin", "#{weixin,jdbcType=VARCHAR}");
        }
        
        if (record.getQq() != null) {
            sql.VALUES("qq", "#{qq,jdbcType=VARCHAR}");
        }
        
        if (record.getFacebook() != null) {
            sql.VALUES("facebook", "#{facebook,jdbcType=VARCHAR}");
        }
        
        if (record.getHometownId() != null) {
            sql.VALUES("hometown_id", "#{hometownId,jdbcType=INTEGER}");
        }
        
        if (record.getHometownName() != null) {
            sql.VALUES("hometown_name", "#{hometownName,jdbcType=VARCHAR}");
        }
        
        if (record.getIdentityCardNo() != null) {
            sql.VALUES("identity_card_no", "#{identityCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getPassportNo() != null) {
            sql.VALUES("passport_no", "#{passportNo,jdbcType=VARCHAR}");
        }
        
        if (record.getEducation() != null) {
            sql.VALUES("education", "#{education,jdbcType=TINYINT}");
        }
        
        if (record.getDescription() != null) {
            sql.VALUES("description", "#{description,jdbcType=VARCHAR}");
        }
        
        if (record.getOtherContact() != null) {
            sql.VALUES("other_contact", "#{otherContact,jdbcType=VARCHAR}");
        }
        
        if (record.getContactName() != null) {
            sql.VALUES("contact_name", "#{contactName,jdbcType=VARCHAR}");
        }
        
        if (record.getContactAreaCode() != null) {
            sql.VALUES("contact_area_code", "#{contactAreaCode,jdbcType=VARCHAR}");
        }
        
        if (record.getContactMobile() != null) {
            sql.VALUES("contact_mobile", "#{contactMobile,jdbcType=VARCHAR}");
        }
        
        if (record.getJobType() != null) {
            sql.VALUES("job_type", "#{jobType,jdbcType=TINYINT}");
        }
        
        if (record.getLatestCommitTime() != null) {
            sql.VALUES("latest_commit_time", "#{latestCommitTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLatestCheckTime() != null) {
            sql.VALUES("latest_check_time", "#{latestCheckTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTrainTime() != null) {
            sql.VALUES("train_time", "#{trainTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAgencyType() != null) {
            sql.VALUES("agency_type", "#{agencyType,jdbcType=TINYINT}");
        }
        
        if (record.getAgencyId() != null) {
            sql.VALUES("agency_id", "#{agencyId,jdbcType=INTEGER}");
        }
        
        if (record.getAgencyBossId() != null) {
            sql.VALUES("agency_boss_id", "#{agencyBossId,jdbcType=VARCHAR}");
        }
        
        if (record.getRegisterSource() != null) {
            sql.VALUES("register_source", "#{registerSource,jdbcType=TINYINT}");
        }
        
        if (record.getSignDate() != null) {
            sql.VALUES("sign_date", "#{signDate,jdbcType=DATE}");
        }
        
        if (record.getComment() != null) {
            sql.VALUES("comment", "#{comment,jdbcType=VARCHAR}");
        }
        
        if (record.getReferrer() != null) {
            sql.VALUES("referrer", "#{referrer,jdbcType=VARCHAR}");
        }
        
        if (record.getReferrerDescription() != null) {
            sql.VALUES("referrer_description", "#{referrerDescription,jdbcType=VARCHAR}");
        }
        
        if (record.getSendOrderFlag() != null) {
            sql.VALUES("send_order_flag", "#{sendOrderFlag,jdbcType=TINYINT}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=TINYINT}");
        }
        
        if (record.getSigningBonus() != null) {
            sql.VALUES("signing_bonus", "#{signingBonus,jdbcType=INTEGER}");
        }
        
        if (record.getSigningBonusComment() != null) {
            sql.VALUES("signing_bonus_comment", "#{signingBonusComment,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideLevel() != null) {
            sql.VALUES("guide_level", "#{guideLevel,jdbcType=TINYINT}");
        }
        
        if (record.getImToken() != null) {
            sql.VALUES("im_token", "#{imToken,jdbcType=VARCHAR}");
        }
        
        if (record.getDriveLicence() != null) {
            sql.VALUES("drive_licence", "#{driveLicence,jdbcType=VARCHAR}");
        }
        
        if (record.getOperatePermit() != null) {
            sql.VALUES("operate_permit", "#{operatePermit,jdbcType=VARCHAR}");
        }
        
        if (record.getCarLicence() != null) {
            sql.VALUES("car_licence", "#{carLicence,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto1() != null) {
            sql.VALUES("car_photo1", "#{carPhoto1,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto2() != null) {
            sql.VALUES("car_photo2", "#{carPhoto2,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto3() != null) {
            sql.VALUES("car_photo3", "#{carPhoto3,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto4() != null) {
            sql.VALUES("car_photo4", "#{carPhoto4,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto5() != null) {
            sql.VALUES("car_photo5", "#{carPhoto5,jdbcType=VARCHAR}");
        }
        
        if (record.getDriveStart() != null) {
            sql.VALUES("drive_start", "#{driveStart,jdbcType=DATE}");
        }
        
        if (record.getBaseCheckReason() != null) {
            sql.VALUES("base_check_reason", "#{baseCheckReason,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoCheckReason() != null) {
            sql.VALUES("photo_check_reason", "#{photoCheckReason,jdbcType=VARCHAR}");
        }
        
        if (record.getPunishment() != null) {
            sql.VALUES("punishment", "#{punishment,jdbcType=INTEGER}");
        }
        
        if (record.getIntegral() != null) {
            sql.VALUES("integral", "#{integral,jdbcType=INTEGER}");
        }
        
        if (record.getIntegralCollectTime() != null) {
            sql.VALUES("integral_collect_time", "#{integralCollectTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLoginNum() != null) {
            sql.VALUES("login_num", "#{loginNum,jdbcType=INTEGER}");
        }
        
        if (record.getLatestLoginTime() != null) {
            sql.VALUES("latest_login_time", "#{latestLoginTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide`
     *
     * @mbggenerated
     */
    public String selectByExample(GuideBeanExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("guide_id");
        } else {
            sql.SELECT("guide_id");
        }
        sql.SELECT("guide_no");
        sql.SELECT("guide_name");
        sql.SELECT("area_code");
        sql.SELECT("mobile");
        sql.SELECT("fund_account_id");
        sql.SELECT("continent_id");
        sql.SELECT("continent_name");
        sql.SELECT("country_id");
        sql.SELECT("country_name");
        sql.SELECT("city_id");
        sql.SELECT("city_name");
        sql.SELECT("sign_status");
        sql.SELECT("driving_licence");
        sql.SELECT("car_photo");
        sql.SELECT("identity_card");
        sql.SELECT("mobile_valid");
        sql.SELECT("mobile_valid_mode");
        sql.SELECT("avatar");
        sql.SELECT("gender");
        sql.SELECT("birthday");
        sql.SELECT("address");
        sql.SELECT("zipcode");
        sql.SELECT("live_start");
        sql.SELECT("live_year");
        sql.SELECT("email");
        sql.SELECT("weixin");
        sql.SELECT("qq");
        sql.SELECT("facebook");
        sql.SELECT("hometown_id");
        sql.SELECT("hometown_name");
        sql.SELECT("identity_card_no");
        sql.SELECT("passport_no");
        sql.SELECT("education");
        sql.SELECT("description");
        sql.SELECT("other_contact");
        sql.SELECT("contact_name");
        sql.SELECT("contact_area_code");
        sql.SELECT("contact_mobile");
        sql.SELECT("job_type");
        sql.SELECT("latest_commit_time");
        sql.SELECT("latest_check_time");
        sql.SELECT("train_time");
        sql.SELECT("agency_type");
        sql.SELECT("agency_id");
        sql.SELECT("agency_boss_id");
        sql.SELECT("register_source");
        sql.SELECT("sign_date");
        sql.SELECT("comment");
        sql.SELECT("referrer");
        sql.SELECT("referrer_description");
        sql.SELECT("send_order_flag");
        sql.SELECT("status");
        sql.SELECT("signing_bonus");
        sql.SELECT("signing_bonus_comment");
        sql.SELECT("guide_level");
        sql.SELECT("im_token");
        sql.SELECT("drive_licence");
        sql.SELECT("operate_permit");
        sql.SELECT("car_licence");
        sql.SELECT("car_photo1");
        sql.SELECT("car_photo2");
        sql.SELECT("car_photo3");
        sql.SELECT("car_photo4");
        sql.SELECT("car_photo5");
        sql.SELECT("drive_start");
        sql.SELECT("base_check_reason");
        sql.SELECT("photo_check_reason");
        sql.SELECT("punishment");
        sql.SELECT("integral");
        sql.SELECT("integral_collect_time");
        sql.SELECT("login_num");
        sql.SELECT("latest_login_time");
        sql.SELECT("create_time");
        sql.SELECT("update_time");
        sql.FROM("`guide`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        GuideBean record = (GuideBean) parameter.get("record");
        GuideBeanExample example = (GuideBeanExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`guide`");
        
        if (record.getGuideId() != null) {
            sql.SET("guide_id = #{record.guideId,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideNo() != null) {
            sql.SET("guide_no = #{record.guideNo,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideName() != null) {
            sql.SET("guide_name = #{record.guideName,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaCode() != null) {
            sql.SET("area_code = #{record.areaCode,jdbcType=VARCHAR}");
        }
        
        if (record.getMobile() != null) {
            sql.SET("mobile = #{record.mobile,jdbcType=VARCHAR}");
        }
        
        if (record.getFundAccountId() != null) {
            sql.SET("fund_account_id = #{record.fundAccountId,jdbcType=VARCHAR}");
        }
        
        if (record.getContinentId() != null) {
            sql.SET("continent_id = #{record.continentId,jdbcType=INTEGER}");
        }
        
        if (record.getContinentName() != null) {
            sql.SET("continent_name = #{record.continentName,jdbcType=VARCHAR}");
        }
        
        if (record.getCountryId() != null) {
            sql.SET("country_id = #{record.countryId,jdbcType=INTEGER}");
        }
        
        if (record.getCountryName() != null) {
            sql.SET("country_name = #{record.countryName,jdbcType=VARCHAR}");
        }
        
        if (record.getCityId() != null) {
            sql.SET("city_id = #{record.cityId,jdbcType=INTEGER}");
        }
        
        if (record.getCityName() != null) {
            sql.SET("city_name = #{record.cityName,jdbcType=VARCHAR}");
        }
        
        if (record.getSignStatus() != null) {
            sql.SET("sign_status = #{record.signStatus,jdbcType=TINYINT}");
        }
        
        if (record.getDrivingLicence() != null) {
            sql.SET("driving_licence = #{record.drivingLicence,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto() != null) {
            sql.SET("car_photo = #{record.carPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getIdentityCard() != null) {
            sql.SET("identity_card = #{record.identityCard,jdbcType=VARCHAR}");
        }
        
        if (record.getMobileValid() != null) {
            sql.SET("mobile_valid = #{record.mobileValid,jdbcType=TINYINT}");
        }
        
        if (record.getMobileValidMode() != null) {
            sql.SET("mobile_valid_mode = #{record.mobileValidMode,jdbcType=TINYINT}");
        }
        
        if (record.getAvatar() != null) {
            sql.SET("avatar = #{record.avatar,jdbcType=VARCHAR}");
        }
        
        if (record.getGender() != null) {
            sql.SET("gender = #{record.gender,jdbcType=TINYINT}");
        }
        
        if (record.getBirthday() != null) {
            sql.SET("birthday = #{record.birthday,jdbcType=DATE}");
        }
        
        if (record.getAddress() != null) {
            sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        }
        
        if (record.getZipcode() != null) {
            sql.SET("zipcode = #{record.zipcode,jdbcType=VARCHAR}");
        }
        
        if (record.getLiveStart() != null) {
            sql.SET("live_start = #{record.liveStart,jdbcType=TINYINT}");
        }
        
        if (record.getLiveYear() != null) {
            sql.SET("live_year = #{record.liveYear,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.SET("email = #{record.email,jdbcType=VARCHAR}");
        }
        
        if (record.getWeixin() != null) {
            sql.SET("weixin = #{record.weixin,jdbcType=VARCHAR}");
        }
        
        if (record.getQq() != null) {
            sql.SET("qq = #{record.qq,jdbcType=VARCHAR}");
        }
        
        if (record.getFacebook() != null) {
            sql.SET("facebook = #{record.facebook,jdbcType=VARCHAR}");
        }
        
        if (record.getHometownId() != null) {
            sql.SET("hometown_id = #{record.hometownId,jdbcType=INTEGER}");
        }
        
        if (record.getHometownName() != null) {
            sql.SET("hometown_name = #{record.hometownName,jdbcType=VARCHAR}");
        }
        
        if (record.getIdentityCardNo() != null) {
            sql.SET("identity_card_no = #{record.identityCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getPassportNo() != null) {
            sql.SET("passport_no = #{record.passportNo,jdbcType=VARCHAR}");
        }
        
        if (record.getEducation() != null) {
            sql.SET("education = #{record.education,jdbcType=TINYINT}");
        }
        
        if (record.getDescription() != null) {
            sql.SET("description = #{record.description,jdbcType=VARCHAR}");
        }
        
        if (record.getOtherContact() != null) {
            sql.SET("other_contact = #{record.otherContact,jdbcType=VARCHAR}");
        }
        
        if (record.getContactName() != null) {
            sql.SET("contact_name = #{record.contactName,jdbcType=VARCHAR}");
        }
        
        if (record.getContactAreaCode() != null) {
            sql.SET("contact_area_code = #{record.contactAreaCode,jdbcType=VARCHAR}");
        }
        
        if (record.getContactMobile() != null) {
            sql.SET("contact_mobile = #{record.contactMobile,jdbcType=VARCHAR}");
        }
        
        if (record.getJobType() != null) {
            sql.SET("job_type = #{record.jobType,jdbcType=TINYINT}");
        }
        
        if (record.getLatestCommitTime() != null) {
            sql.SET("latest_commit_time = #{record.latestCommitTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLatestCheckTime() != null) {
            sql.SET("latest_check_time = #{record.latestCheckTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTrainTime() != null) {
            sql.SET("train_time = #{record.trainTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAgencyType() != null) {
            sql.SET("agency_type = #{record.agencyType,jdbcType=TINYINT}");
        }
        
        if (record.getAgencyId() != null) {
            sql.SET("agency_id = #{record.agencyId,jdbcType=INTEGER}");
        }
        
        if (record.getAgencyBossId() != null) {
            sql.SET("agency_boss_id = #{record.agencyBossId,jdbcType=VARCHAR}");
        }
        
        if (record.getRegisterSource() != null) {
            sql.SET("register_source = #{record.registerSource,jdbcType=TINYINT}");
        }
        
        if (record.getSignDate() != null) {
            sql.SET("sign_date = #{record.signDate,jdbcType=DATE}");
        }
        
        if (record.getComment() != null) {
            sql.SET("comment = #{record.comment,jdbcType=VARCHAR}");
        }
        
        if (record.getReferrer() != null) {
            sql.SET("referrer = #{record.referrer,jdbcType=VARCHAR}");
        }
        
        if (record.getReferrerDescription() != null) {
            sql.SET("referrer_description = #{record.referrerDescription,jdbcType=VARCHAR}");
        }
        
        if (record.getSendOrderFlag() != null) {
            sql.SET("send_order_flag = #{record.sendOrderFlag,jdbcType=TINYINT}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{record.status,jdbcType=TINYINT}");
        }
        
        if (record.getSigningBonus() != null) {
            sql.SET("signing_bonus = #{record.signingBonus,jdbcType=INTEGER}");
        }
        
        if (record.getSigningBonusComment() != null) {
            sql.SET("signing_bonus_comment = #{record.signingBonusComment,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideLevel() != null) {
            sql.SET("guide_level = #{record.guideLevel,jdbcType=TINYINT}");
        }
        
        if (record.getImToken() != null) {
            sql.SET("im_token = #{record.imToken,jdbcType=VARCHAR}");
        }
        
        if (record.getDriveLicence() != null) {
            sql.SET("drive_licence = #{record.driveLicence,jdbcType=VARCHAR}");
        }
        
        if (record.getOperatePermit() != null) {
            sql.SET("operate_permit = #{record.operatePermit,jdbcType=VARCHAR}");
        }
        
        if (record.getCarLicence() != null) {
            sql.SET("car_licence = #{record.carLicence,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto1() != null) {
            sql.SET("car_photo1 = #{record.carPhoto1,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto2() != null) {
            sql.SET("car_photo2 = #{record.carPhoto2,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto3() != null) {
            sql.SET("car_photo3 = #{record.carPhoto3,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto4() != null) {
            sql.SET("car_photo4 = #{record.carPhoto4,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto5() != null) {
            sql.SET("car_photo5 = #{record.carPhoto5,jdbcType=VARCHAR}");
        }
        
        if (record.getDriveStart() != null) {
            sql.SET("drive_start = #{record.driveStart,jdbcType=DATE}");
        }
        
        if (record.getBaseCheckReason() != null) {
            sql.SET("base_check_reason = #{record.baseCheckReason,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoCheckReason() != null) {
            sql.SET("photo_check_reason = #{record.photoCheckReason,jdbcType=VARCHAR}");
        }
        
        if (record.getPunishment() != null) {
            sql.SET("punishment = #{record.punishment,jdbcType=INTEGER}");
        }
        
        if (record.getIntegral() != null) {
            sql.SET("integral = #{record.integral,jdbcType=INTEGER}");
        }
        
        if (record.getIntegralCollectTime() != null) {
            sql.SET("integral_collect_time = #{record.integralCollectTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLoginNum() != null) {
            sql.SET("login_num = #{record.loginNum,jdbcType=INTEGER}");
        }
        
        if (record.getLatestLoginTime() != null) {
            sql.SET("latest_login_time = #{record.latestLoginTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`guide`");
        
        sql.SET("guide_id = #{record.guideId,jdbcType=VARCHAR}");
        sql.SET("guide_no = #{record.guideNo,jdbcType=VARCHAR}");
        sql.SET("guide_name = #{record.guideName,jdbcType=VARCHAR}");
        sql.SET("area_code = #{record.areaCode,jdbcType=VARCHAR}");
        sql.SET("mobile = #{record.mobile,jdbcType=VARCHAR}");
        sql.SET("fund_account_id = #{record.fundAccountId,jdbcType=VARCHAR}");
        sql.SET("continent_id = #{record.continentId,jdbcType=INTEGER}");
        sql.SET("continent_name = #{record.continentName,jdbcType=VARCHAR}");
        sql.SET("country_id = #{record.countryId,jdbcType=INTEGER}");
        sql.SET("country_name = #{record.countryName,jdbcType=VARCHAR}");
        sql.SET("city_id = #{record.cityId,jdbcType=INTEGER}");
        sql.SET("city_name = #{record.cityName,jdbcType=VARCHAR}");
        sql.SET("sign_status = #{record.signStatus,jdbcType=TINYINT}");
        sql.SET("driving_licence = #{record.drivingLicence,jdbcType=VARCHAR}");
        sql.SET("car_photo = #{record.carPhoto,jdbcType=VARCHAR}");
        sql.SET("identity_card = #{record.identityCard,jdbcType=VARCHAR}");
        sql.SET("mobile_valid = #{record.mobileValid,jdbcType=TINYINT}");
        sql.SET("mobile_valid_mode = #{record.mobileValidMode,jdbcType=TINYINT}");
        sql.SET("avatar = #{record.avatar,jdbcType=VARCHAR}");
        sql.SET("gender = #{record.gender,jdbcType=TINYINT}");
        sql.SET("birthday = #{record.birthday,jdbcType=DATE}");
        sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        sql.SET("zipcode = #{record.zipcode,jdbcType=VARCHAR}");
        sql.SET("live_start = #{record.liveStart,jdbcType=TINYINT}");
        sql.SET("live_year = #{record.liveYear,jdbcType=VARCHAR}");
        sql.SET("email = #{record.email,jdbcType=VARCHAR}");
        sql.SET("weixin = #{record.weixin,jdbcType=VARCHAR}");
        sql.SET("qq = #{record.qq,jdbcType=VARCHAR}");
        sql.SET("facebook = #{record.facebook,jdbcType=VARCHAR}");
        sql.SET("hometown_id = #{record.hometownId,jdbcType=INTEGER}");
        sql.SET("hometown_name = #{record.hometownName,jdbcType=VARCHAR}");
        sql.SET("identity_card_no = #{record.identityCardNo,jdbcType=VARCHAR}");
        sql.SET("passport_no = #{record.passportNo,jdbcType=VARCHAR}");
        sql.SET("education = #{record.education,jdbcType=TINYINT}");
        sql.SET("description = #{record.description,jdbcType=VARCHAR}");
        sql.SET("other_contact = #{record.otherContact,jdbcType=VARCHAR}");
        sql.SET("contact_name = #{record.contactName,jdbcType=VARCHAR}");
        sql.SET("contact_area_code = #{record.contactAreaCode,jdbcType=VARCHAR}");
        sql.SET("contact_mobile = #{record.contactMobile,jdbcType=VARCHAR}");
        sql.SET("job_type = #{record.jobType,jdbcType=TINYINT}");
        sql.SET("latest_commit_time = #{record.latestCommitTime,jdbcType=TIMESTAMP}");
        sql.SET("latest_check_time = #{record.latestCheckTime,jdbcType=TIMESTAMP}");
        sql.SET("train_time = #{record.trainTime,jdbcType=TIMESTAMP}");
        sql.SET("agency_type = #{record.agencyType,jdbcType=TINYINT}");
        sql.SET("agency_id = #{record.agencyId,jdbcType=INTEGER}");
        sql.SET("agency_boss_id = #{record.agencyBossId,jdbcType=VARCHAR}");
        sql.SET("register_source = #{record.registerSource,jdbcType=TINYINT}");
        sql.SET("sign_date = #{record.signDate,jdbcType=DATE}");
        sql.SET("comment = #{record.comment,jdbcType=VARCHAR}");
        sql.SET("referrer = #{record.referrer,jdbcType=VARCHAR}");
        sql.SET("referrer_description = #{record.referrerDescription,jdbcType=VARCHAR}");
        sql.SET("send_order_flag = #{record.sendOrderFlag,jdbcType=TINYINT}");
        sql.SET("status = #{record.status,jdbcType=TINYINT}");
        sql.SET("signing_bonus = #{record.signingBonus,jdbcType=INTEGER}");
        sql.SET("signing_bonus_comment = #{record.signingBonusComment,jdbcType=VARCHAR}");
        sql.SET("guide_level = #{record.guideLevel,jdbcType=TINYINT}");
        sql.SET("im_token = #{record.imToken,jdbcType=VARCHAR}");
        sql.SET("drive_licence = #{record.driveLicence,jdbcType=VARCHAR}");
        sql.SET("operate_permit = #{record.operatePermit,jdbcType=VARCHAR}");
        sql.SET("car_licence = #{record.carLicence,jdbcType=VARCHAR}");
        sql.SET("car_photo1 = #{record.carPhoto1,jdbcType=VARCHAR}");
        sql.SET("car_photo2 = #{record.carPhoto2,jdbcType=VARCHAR}");
        sql.SET("car_photo3 = #{record.carPhoto3,jdbcType=VARCHAR}");
        sql.SET("car_photo4 = #{record.carPhoto4,jdbcType=VARCHAR}");
        sql.SET("car_photo5 = #{record.carPhoto5,jdbcType=VARCHAR}");
        sql.SET("drive_start = #{record.driveStart,jdbcType=DATE}");
        sql.SET("base_check_reason = #{record.baseCheckReason,jdbcType=VARCHAR}");
        sql.SET("photo_check_reason = #{record.photoCheckReason,jdbcType=VARCHAR}");
        sql.SET("punishment = #{record.punishment,jdbcType=INTEGER}");
        sql.SET("integral = #{record.integral,jdbcType=INTEGER}");
        sql.SET("integral_collect_time = #{record.integralCollectTime,jdbcType=TIMESTAMP}");
        sql.SET("login_num = #{record.loginNum,jdbcType=INTEGER}");
        sql.SET("latest_login_time = #{record.latestLoginTime,jdbcType=TIMESTAMP}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        
        GuideBeanExample example = (GuideBeanExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(GuideBean record) {
        SQL sql = new SQL();
        sql.UPDATE("`guide`");
        
        if (record.getGuideNo() != null) {
            sql.SET("guide_no = #{guideNo,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideName() != null) {
            sql.SET("guide_name = #{guideName,jdbcType=VARCHAR}");
        }
        
        if (record.getAreaCode() != null) {
            sql.SET("area_code = #{areaCode,jdbcType=VARCHAR}");
        }
        
        if (record.getMobile() != null) {
            sql.SET("mobile = #{mobile,jdbcType=VARCHAR}");
        }
        
        if (record.getFundAccountId() != null) {
            sql.SET("fund_account_id = #{fundAccountId,jdbcType=VARCHAR}");
        }
        
        if (record.getContinentId() != null) {
            sql.SET("continent_id = #{continentId,jdbcType=INTEGER}");
        }
        
        if (record.getContinentName() != null) {
            sql.SET("continent_name = #{continentName,jdbcType=VARCHAR}");
        }
        
        if (record.getCountryId() != null) {
            sql.SET("country_id = #{countryId,jdbcType=INTEGER}");
        }
        
        if (record.getCountryName() != null) {
            sql.SET("country_name = #{countryName,jdbcType=VARCHAR}");
        }
        
        if (record.getCityId() != null) {
            sql.SET("city_id = #{cityId,jdbcType=INTEGER}");
        }
        
        if (record.getCityName() != null) {
            sql.SET("city_name = #{cityName,jdbcType=VARCHAR}");
        }
        
        if (record.getSignStatus() != null) {
            sql.SET("sign_status = #{signStatus,jdbcType=TINYINT}");
        }
        
        if (record.getDrivingLicence() != null) {
            sql.SET("driving_licence = #{drivingLicence,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto() != null) {
            sql.SET("car_photo = #{carPhoto,jdbcType=VARCHAR}");
        }
        
        if (record.getIdentityCard() != null) {
            sql.SET("identity_card = #{identityCard,jdbcType=VARCHAR}");
        }
        
        if (record.getMobileValid() != null) {
            sql.SET("mobile_valid = #{mobileValid,jdbcType=TINYINT}");
        }
        
        if (record.getMobileValidMode() != null) {
            sql.SET("mobile_valid_mode = #{mobileValidMode,jdbcType=TINYINT}");
        }
        
        if (record.getAvatar() != null) {
            sql.SET("avatar = #{avatar,jdbcType=VARCHAR}");
        }
        
        if (record.getGender() != null) {
            sql.SET("gender = #{gender,jdbcType=TINYINT}");
        }
        
        if (record.getBirthday() != null) {
            sql.SET("birthday = #{birthday,jdbcType=DATE}");
        }
        
        if (record.getAddress() != null) {
            sql.SET("address = #{address,jdbcType=VARCHAR}");
        }
        
        if (record.getZipcode() != null) {
            sql.SET("zipcode = #{zipcode,jdbcType=VARCHAR}");
        }
        
        if (record.getLiveStart() != null) {
            sql.SET("live_start = #{liveStart,jdbcType=TINYINT}");
        }
        
        if (record.getLiveYear() != null) {
            sql.SET("live_year = #{liveYear,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.SET("email = #{email,jdbcType=VARCHAR}");
        }
        
        if (record.getWeixin() != null) {
            sql.SET("weixin = #{weixin,jdbcType=VARCHAR}");
        }
        
        if (record.getQq() != null) {
            sql.SET("qq = #{qq,jdbcType=VARCHAR}");
        }
        
        if (record.getFacebook() != null) {
            sql.SET("facebook = #{facebook,jdbcType=VARCHAR}");
        }
        
        if (record.getHometownId() != null) {
            sql.SET("hometown_id = #{hometownId,jdbcType=INTEGER}");
        }
        
        if (record.getHometownName() != null) {
            sql.SET("hometown_name = #{hometownName,jdbcType=VARCHAR}");
        }
        
        if (record.getIdentityCardNo() != null) {
            sql.SET("identity_card_no = #{identityCardNo,jdbcType=VARCHAR}");
        }
        
        if (record.getPassportNo() != null) {
            sql.SET("passport_no = #{passportNo,jdbcType=VARCHAR}");
        }
        
        if (record.getEducation() != null) {
            sql.SET("education = #{education,jdbcType=TINYINT}");
        }
        
        if (record.getDescription() != null) {
            sql.SET("description = #{description,jdbcType=VARCHAR}");
        }
        
        if (record.getOtherContact() != null) {
            sql.SET("other_contact = #{otherContact,jdbcType=VARCHAR}");
        }
        
        if (record.getContactName() != null) {
            sql.SET("contact_name = #{contactName,jdbcType=VARCHAR}");
        }
        
        if (record.getContactAreaCode() != null) {
            sql.SET("contact_area_code = #{contactAreaCode,jdbcType=VARCHAR}");
        }
        
        if (record.getContactMobile() != null) {
            sql.SET("contact_mobile = #{contactMobile,jdbcType=VARCHAR}");
        }
        
        if (record.getJobType() != null) {
            sql.SET("job_type = #{jobType,jdbcType=TINYINT}");
        }
        
        if (record.getLatestCommitTime() != null) {
            sql.SET("latest_commit_time = #{latestCommitTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLatestCheckTime() != null) {
            sql.SET("latest_check_time = #{latestCheckTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTrainTime() != null) {
            sql.SET("train_time = #{trainTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getAgencyType() != null) {
            sql.SET("agency_type = #{agencyType,jdbcType=TINYINT}");
        }
        
        if (record.getAgencyId() != null) {
            sql.SET("agency_id = #{agencyId,jdbcType=INTEGER}");
        }
        
        if (record.getAgencyBossId() != null) {
            sql.SET("agency_boss_id = #{agencyBossId,jdbcType=VARCHAR}");
        }
        
        if (record.getRegisterSource() != null) {
            sql.SET("register_source = #{registerSource,jdbcType=TINYINT}");
        }
        
        if (record.getSignDate() != null) {
            sql.SET("sign_date = #{signDate,jdbcType=DATE}");
        }
        
        if (record.getComment() != null) {
            sql.SET("comment = #{comment,jdbcType=VARCHAR}");
        }
        
        if (record.getReferrer() != null) {
            sql.SET("referrer = #{referrer,jdbcType=VARCHAR}");
        }
        
        if (record.getReferrerDescription() != null) {
            sql.SET("referrer_description = #{referrerDescription,jdbcType=VARCHAR}");
        }
        
        if (record.getSendOrderFlag() != null) {
            sql.SET("send_order_flag = #{sendOrderFlag,jdbcType=TINYINT}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=TINYINT}");
        }
        
        if (record.getSigningBonus() != null) {
            sql.SET("signing_bonus = #{signingBonus,jdbcType=INTEGER}");
        }
        
        if (record.getSigningBonusComment() != null) {
            sql.SET("signing_bonus_comment = #{signingBonusComment,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideLevel() != null) {
            sql.SET("guide_level = #{guideLevel,jdbcType=TINYINT}");
        }
        
        if (record.getImToken() != null) {
            sql.SET("im_token = #{imToken,jdbcType=VARCHAR}");
        }
        
        if (record.getDriveLicence() != null) {
            sql.SET("drive_licence = #{driveLicence,jdbcType=VARCHAR}");
        }
        
        if (record.getOperatePermit() != null) {
            sql.SET("operate_permit = #{operatePermit,jdbcType=VARCHAR}");
        }
        
        if (record.getCarLicence() != null) {
            sql.SET("car_licence = #{carLicence,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto1() != null) {
            sql.SET("car_photo1 = #{carPhoto1,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto2() != null) {
            sql.SET("car_photo2 = #{carPhoto2,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto3() != null) {
            sql.SET("car_photo3 = #{carPhoto3,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto4() != null) {
            sql.SET("car_photo4 = #{carPhoto4,jdbcType=VARCHAR}");
        }
        
        if (record.getCarPhoto5() != null) {
            sql.SET("car_photo5 = #{carPhoto5,jdbcType=VARCHAR}");
        }
        
        if (record.getDriveStart() != null) {
            sql.SET("drive_start = #{driveStart,jdbcType=DATE}");
        }
        
        if (record.getBaseCheckReason() != null) {
            sql.SET("base_check_reason = #{baseCheckReason,jdbcType=VARCHAR}");
        }
        
        if (record.getPhotoCheckReason() != null) {
            sql.SET("photo_check_reason = #{photoCheckReason,jdbcType=VARCHAR}");
        }
        
        if (record.getPunishment() != null) {
            sql.SET("punishment = #{punishment,jdbcType=INTEGER}");
        }
        
        if (record.getIntegral() != null) {
            sql.SET("integral = #{integral,jdbcType=INTEGER}");
        }
        
        if (record.getIntegralCollectTime() != null) {
            sql.SET("integral_collect_time = #{integralCollectTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLoginNum() != null) {
            sql.SET("login_num = #{loginNum,jdbcType=INTEGER}");
        }
        
        if (record.getLatestLoginTime() != null) {
            sql.SET("latest_login_time = #{latestLoginTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("guide_id = #{guideId,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guide`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, GuideBeanExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}