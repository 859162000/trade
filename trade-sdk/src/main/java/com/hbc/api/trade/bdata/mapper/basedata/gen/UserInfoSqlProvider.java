package com.hbc.api.trade.bdata.mapper.basedata.gen;

import com.hbc.api.trade.bdata.mapper.basedata.gen.bean.UserInfo;
import com.hbc.api.trade.bdata.mapper.basedata.gen.bean.UserInfoExample.Criteria;
import com.hbc.api.trade.bdata.mapper.basedata.gen.bean.UserInfoExample.Criterion;
import com.hbc.api.trade.bdata.mapper.basedata.gen.bean.UserInfoExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class UserInfoSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    public String countByExample(UserInfoExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`user_info`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    public String deleteByExample(UserInfoExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`user_info`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    public String insertSelective(UserInfo record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`user_info`");
        
        if (record.getUserId() != null) {
            sql.VALUES("user_id", "#{userId,jdbcType=VARCHAR}");
        }
        
        if (record.getName() != null) {
            sql.VALUES("name", "#{name,jdbcType=VARCHAR}");
        }
        
        if (record.getNickName() != null) {
            sql.VALUES("nick_name", "#{nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.VALUES("email", "#{email,jdbcType=VARCHAR}");
        }
        
        if (record.getUnionId() != null) {
            sql.VALUES("union_id", "#{unionId,jdbcType=VARCHAR}");
        }
        
        if (record.getGender() != null) {
            sql.VALUES("gender", "#{gender,jdbcType=INTEGER}");
        }
        
        if (record.getSource() != null) {
            sql.VALUES("source", "#{source,jdbcType=INTEGER}");
        }
        
        if (record.getFromChannel() != null) {
            sql.VALUES("from_channel", "#{fromChannel,jdbcType=INTEGER}");
        }
        
        if (record.getAgentId() != null) {
            sql.VALUES("agent_id", "#{agentId,jdbcType=VARCHAR}");
        }
        
        if (record.getAgentName() != null) {
            sql.VALUES("agent_name", "#{agentName,jdbcType=VARCHAR}");
        }
        
        if (record.getAvatar() != null) {
            sql.VALUES("avatar", "#{avatar,jdbcType=VARCHAR}");
        }
        
        if (record.getReferrerId() != null) {
            sql.VALUES("referrer_id", "#{referrerId,jdbcType=VARCHAR}");
        }
        
        if (record.getAgeType() != null) {
            sql.VALUES("age_type", "#{ageType,jdbcType=INTEGER}");
        }
        
        if (record.getBirthday() != null) {
            sql.VALUES("birthday", "#{birthday,jdbcType=DATE}");
        }
        
        if (record.getZipcode() != null) {
            sql.VALUES("zipcode", "#{zipcode,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            sql.VALUES("address", "#{address,jdbcType=VARCHAR}");
        }
        
        if (record.getSignature() != null) {
            sql.VALUES("signature", "#{signature,jdbcType=VARCHAR}");
        }
        
        if (record.getIsPhone() != null) {
            sql.VALUES("is_phone", "#{isPhone,jdbcType=INTEGER}");
        }
        
        if (record.getIsEmail() != null) {
            sql.VALUES("is_email", "#{isEmail,jdbcType=INTEGER}");
        }
        
        if (record.getIpLast() != null) {
            sql.VALUES("ip_last", "#{ipLast,jdbcType=VARCHAR}");
        }
        
        if (record.getBrowserLast() != null) {
            sql.VALUES("browser_last", "#{browserLast,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceCityName() != null) {
            sql.VALUES("place_city_name", "#{placeCityName,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceCityId() != null) {
            sql.VALUES("place_city_id", "#{placeCityId,jdbcType=INTEGER}");
        }
        
        if (record.getProvinceName() != null) {
            sql.VALUES("province_name", "#{provinceName,jdbcType=VARCHAR}");
        }
        
        if (record.getProvinceId() != null) {
            sql.VALUES("province_id", "#{provinceId,jdbcType=INTEGER}");
        }
        
        if (record.getPlaceName() != null) {
            sql.VALUES("place_name", "#{placeName,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceId() != null) {
            sql.VALUES("place_id", "#{placeId,jdbcType=INTEGER}");
        }
        
        if (record.getPlaceCategoryName() != null) {
            sql.VALUES("place_category_name", "#{placeCategoryName,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceCategoryId() != null) {
            sql.VALUES("place_category_id", "#{placeCategoryId,jdbcType=INTEGER}");
        }
        
        if (record.getActivateSource() != null) {
            sql.VALUES("activate_source", "#{activateSource,jdbcType=INTEGER}");
        }
        
        if (record.getActivateTime() != null) {
            sql.VALUES("activate_time", "#{activateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTagVisible() != null) {
            sql.VALUES("tag_visible", "#{tagVisible,jdbcType=VARCHAR}");
        }
        
        if (record.getTagHidden() != null) {
            sql.VALUES("tag_hidden", "#{tagHidden,jdbcType=VARCHAR}");
        }
        
        if (record.getUserLevel() != null) {
            sql.VALUES("user_level", "#{userLevel,jdbcType=TINYINT}");
        }
        
        if (record.getDeviceLast() != null) {
            sql.VALUES("device_last", "#{deviceLast,jdbcType=VARCHAR}");
        }
        
        if (record.getAppVersion() != null) {
            sql.VALUES("app_version", "#{appVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdatedAt() != null) {
            sql.VALUES("updated_at", "#{updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreatedAt() != null) {
            sql.VALUES("created_at", "#{createdAt,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    public String selectByExample(UserInfoExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("user_id");
        } else {
            sql.SELECT("user_id");
        }
        sql.SELECT("name");
        sql.SELECT("nick_name");
        sql.SELECT("email");
        sql.SELECT("union_id");
        sql.SELECT("gender");
        sql.SELECT("source");
        sql.SELECT("from_channel");
        sql.SELECT("agent_id");
        sql.SELECT("agent_name");
        sql.SELECT("avatar");
        sql.SELECT("referrer_id");
        sql.SELECT("age_type");
        sql.SELECT("birthday");
        sql.SELECT("zipcode");
        sql.SELECT("address");
        sql.SELECT("signature");
        sql.SELECT("is_phone");
        sql.SELECT("is_email");
        sql.SELECT("ip_last");
        sql.SELECT("browser_last");
        sql.SELECT("place_city_name");
        sql.SELECT("place_city_id");
        sql.SELECT("province_name");
        sql.SELECT("province_id");
        sql.SELECT("place_name");
        sql.SELECT("place_id");
        sql.SELECT("place_category_name");
        sql.SELECT("place_category_id");
        sql.SELECT("activate_source");
        sql.SELECT("activate_time");
        sql.SELECT("tag_visible");
        sql.SELECT("tag_hidden");
        sql.SELECT("user_level");
        sql.SELECT("device_last");
        sql.SELECT("app_version");
        sql.SELECT("updated_at");
        sql.SELECT("created_at");
        sql.FROM("`user_info`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        UserInfo record = (UserInfo) parameter.get("record");
        UserInfoExample example = (UserInfoExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`user_info`");
        
        if (record.getUserId() != null) {
            sql.SET("user_id = #{record.userId,jdbcType=VARCHAR}");
        }
        
        if (record.getName() != null) {
            sql.SET("name = #{record.name,jdbcType=VARCHAR}");
        }
        
        if (record.getNickName() != null) {
            sql.SET("nick_name = #{record.nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.SET("email = #{record.email,jdbcType=VARCHAR}");
        }
        
        if (record.getUnionId() != null) {
            sql.SET("union_id = #{record.unionId,jdbcType=VARCHAR}");
        }
        
        if (record.getGender() != null) {
            sql.SET("gender = #{record.gender,jdbcType=INTEGER}");
        }
        
        if (record.getSource() != null) {
            sql.SET("source = #{record.source,jdbcType=INTEGER}");
        }
        
        if (record.getFromChannel() != null) {
            sql.SET("from_channel = #{record.fromChannel,jdbcType=INTEGER}");
        }
        
        if (record.getAgentId() != null) {
            sql.SET("agent_id = #{record.agentId,jdbcType=VARCHAR}");
        }
        
        if (record.getAgentName() != null) {
            sql.SET("agent_name = #{record.agentName,jdbcType=VARCHAR}");
        }
        
        if (record.getAvatar() != null) {
            sql.SET("avatar = #{record.avatar,jdbcType=VARCHAR}");
        }
        
        if (record.getReferrerId() != null) {
            sql.SET("referrer_id = #{record.referrerId,jdbcType=VARCHAR}");
        }
        
        if (record.getAgeType() != null) {
            sql.SET("age_type = #{record.ageType,jdbcType=INTEGER}");
        }
        
        if (record.getBirthday() != null) {
            sql.SET("birthday = #{record.birthday,jdbcType=DATE}");
        }
        
        if (record.getZipcode() != null) {
            sql.SET("zipcode = #{record.zipcode,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        }
        
        if (record.getSignature() != null) {
            sql.SET("signature = #{record.signature,jdbcType=VARCHAR}");
        }
        
        if (record.getIsPhone() != null) {
            sql.SET("is_phone = #{record.isPhone,jdbcType=INTEGER}");
        }
        
        if (record.getIsEmail() != null) {
            sql.SET("is_email = #{record.isEmail,jdbcType=INTEGER}");
        }
        
        if (record.getIpLast() != null) {
            sql.SET("ip_last = #{record.ipLast,jdbcType=VARCHAR}");
        }
        
        if (record.getBrowserLast() != null) {
            sql.SET("browser_last = #{record.browserLast,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceCityName() != null) {
            sql.SET("place_city_name = #{record.placeCityName,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceCityId() != null) {
            sql.SET("place_city_id = #{record.placeCityId,jdbcType=INTEGER}");
        }
        
        if (record.getProvinceName() != null) {
            sql.SET("province_name = #{record.provinceName,jdbcType=VARCHAR}");
        }
        
        if (record.getProvinceId() != null) {
            sql.SET("province_id = #{record.provinceId,jdbcType=INTEGER}");
        }
        
        if (record.getPlaceName() != null) {
            sql.SET("place_name = #{record.placeName,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceId() != null) {
            sql.SET("place_id = #{record.placeId,jdbcType=INTEGER}");
        }
        
        if (record.getPlaceCategoryName() != null) {
            sql.SET("place_category_name = #{record.placeCategoryName,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceCategoryId() != null) {
            sql.SET("place_category_id = #{record.placeCategoryId,jdbcType=INTEGER}");
        }
        
        if (record.getActivateSource() != null) {
            sql.SET("activate_source = #{record.activateSource,jdbcType=INTEGER}");
        }
        
        if (record.getActivateTime() != null) {
            sql.SET("activate_time = #{record.activateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTagVisible() != null) {
            sql.SET("tag_visible = #{record.tagVisible,jdbcType=VARCHAR}");
        }
        
        if (record.getTagHidden() != null) {
            sql.SET("tag_hidden = #{record.tagHidden,jdbcType=VARCHAR}");
        }
        
        if (record.getUserLevel() != null) {
            sql.SET("user_level = #{record.userLevel,jdbcType=TINYINT}");
        }
        
        if (record.getDeviceLast() != null) {
            sql.SET("device_last = #{record.deviceLast,jdbcType=VARCHAR}");
        }
        
        if (record.getAppVersion() != null) {
            sql.SET("app_version = #{record.appVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdatedAt() != null) {
            sql.SET("updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreatedAt() != null) {
            sql.SET("created_at = #{record.createdAt,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`user_info`");
        
        sql.SET("user_id = #{record.userId,jdbcType=VARCHAR}");
        sql.SET("name = #{record.name,jdbcType=VARCHAR}");
        sql.SET("nick_name = #{record.nickName,jdbcType=VARCHAR}");
        sql.SET("email = #{record.email,jdbcType=VARCHAR}");
        sql.SET("union_id = #{record.unionId,jdbcType=VARCHAR}");
        sql.SET("gender = #{record.gender,jdbcType=INTEGER}");
        sql.SET("source = #{record.source,jdbcType=INTEGER}");
        sql.SET("from_channel = #{record.fromChannel,jdbcType=INTEGER}");
        sql.SET("agent_id = #{record.agentId,jdbcType=VARCHAR}");
        sql.SET("agent_name = #{record.agentName,jdbcType=VARCHAR}");
        sql.SET("avatar = #{record.avatar,jdbcType=VARCHAR}");
        sql.SET("referrer_id = #{record.referrerId,jdbcType=VARCHAR}");
        sql.SET("age_type = #{record.ageType,jdbcType=INTEGER}");
        sql.SET("birthday = #{record.birthday,jdbcType=DATE}");
        sql.SET("zipcode = #{record.zipcode,jdbcType=VARCHAR}");
        sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        sql.SET("signature = #{record.signature,jdbcType=VARCHAR}");
        sql.SET("is_phone = #{record.isPhone,jdbcType=INTEGER}");
        sql.SET("is_email = #{record.isEmail,jdbcType=INTEGER}");
        sql.SET("ip_last = #{record.ipLast,jdbcType=VARCHAR}");
        sql.SET("browser_last = #{record.browserLast,jdbcType=VARCHAR}");
        sql.SET("place_city_name = #{record.placeCityName,jdbcType=VARCHAR}");
        sql.SET("place_city_id = #{record.placeCityId,jdbcType=INTEGER}");
        sql.SET("province_name = #{record.provinceName,jdbcType=VARCHAR}");
        sql.SET("province_id = #{record.provinceId,jdbcType=INTEGER}");
        sql.SET("place_name = #{record.placeName,jdbcType=VARCHAR}");
        sql.SET("place_id = #{record.placeId,jdbcType=INTEGER}");
        sql.SET("place_category_name = #{record.placeCategoryName,jdbcType=VARCHAR}");
        sql.SET("place_category_id = #{record.placeCategoryId,jdbcType=INTEGER}");
        sql.SET("activate_source = #{record.activateSource,jdbcType=INTEGER}");
        sql.SET("activate_time = #{record.activateTime,jdbcType=TIMESTAMP}");
        sql.SET("tag_visible = #{record.tagVisible,jdbcType=VARCHAR}");
        sql.SET("tag_hidden = #{record.tagHidden,jdbcType=VARCHAR}");
        sql.SET("user_level = #{record.userLevel,jdbcType=TINYINT}");
        sql.SET("device_last = #{record.deviceLast,jdbcType=VARCHAR}");
        sql.SET("app_version = #{record.appVersion,jdbcType=VARCHAR}");
        sql.SET("updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}");
        sql.SET("created_at = #{record.createdAt,jdbcType=TIMESTAMP}");
        
        UserInfoExample example = (UserInfoExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(UserInfo record) {
        SQL sql = new SQL();
        sql.UPDATE("`user_info`");
        
        if (record.getName() != null) {
            sql.SET("name = #{name,jdbcType=VARCHAR}");
        }
        
        if (record.getNickName() != null) {
            sql.SET("nick_name = #{nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getEmail() != null) {
            sql.SET("email = #{email,jdbcType=VARCHAR}");
        }
        
        if (record.getUnionId() != null) {
            sql.SET("union_id = #{unionId,jdbcType=VARCHAR}");
        }
        
        if (record.getGender() != null) {
            sql.SET("gender = #{gender,jdbcType=INTEGER}");
        }
        
        if (record.getSource() != null) {
            sql.SET("source = #{source,jdbcType=INTEGER}");
        }
        
        if (record.getFromChannel() != null) {
            sql.SET("from_channel = #{fromChannel,jdbcType=INTEGER}");
        }
        
        if (record.getAgentId() != null) {
            sql.SET("agent_id = #{agentId,jdbcType=VARCHAR}");
        }
        
        if (record.getAgentName() != null) {
            sql.SET("agent_name = #{agentName,jdbcType=VARCHAR}");
        }
        
        if (record.getAvatar() != null) {
            sql.SET("avatar = #{avatar,jdbcType=VARCHAR}");
        }
        
        if (record.getReferrerId() != null) {
            sql.SET("referrer_id = #{referrerId,jdbcType=VARCHAR}");
        }
        
        if (record.getAgeType() != null) {
            sql.SET("age_type = #{ageType,jdbcType=INTEGER}");
        }
        
        if (record.getBirthday() != null) {
            sql.SET("birthday = #{birthday,jdbcType=DATE}");
        }
        
        if (record.getZipcode() != null) {
            sql.SET("zipcode = #{zipcode,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            sql.SET("address = #{address,jdbcType=VARCHAR}");
        }
        
        if (record.getSignature() != null) {
            sql.SET("signature = #{signature,jdbcType=VARCHAR}");
        }
        
        if (record.getIsPhone() != null) {
            sql.SET("is_phone = #{isPhone,jdbcType=INTEGER}");
        }
        
        if (record.getIsEmail() != null) {
            sql.SET("is_email = #{isEmail,jdbcType=INTEGER}");
        }
        
        if (record.getIpLast() != null) {
            sql.SET("ip_last = #{ipLast,jdbcType=VARCHAR}");
        }
        
        if (record.getBrowserLast() != null) {
            sql.SET("browser_last = #{browserLast,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceCityName() != null) {
            sql.SET("place_city_name = #{placeCityName,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceCityId() != null) {
            sql.SET("place_city_id = #{placeCityId,jdbcType=INTEGER}");
        }
        
        if (record.getProvinceName() != null) {
            sql.SET("province_name = #{provinceName,jdbcType=VARCHAR}");
        }
        
        if (record.getProvinceId() != null) {
            sql.SET("province_id = #{provinceId,jdbcType=INTEGER}");
        }
        
        if (record.getPlaceName() != null) {
            sql.SET("place_name = #{placeName,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceId() != null) {
            sql.SET("place_id = #{placeId,jdbcType=INTEGER}");
        }
        
        if (record.getPlaceCategoryName() != null) {
            sql.SET("place_category_name = #{placeCategoryName,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceCategoryId() != null) {
            sql.SET("place_category_id = #{placeCategoryId,jdbcType=INTEGER}");
        }
        
        if (record.getActivateSource() != null) {
            sql.SET("activate_source = #{activateSource,jdbcType=INTEGER}");
        }
        
        if (record.getActivateTime() != null) {
            sql.SET("activate_time = #{activateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTagVisible() != null) {
            sql.SET("tag_visible = #{tagVisible,jdbcType=VARCHAR}");
        }
        
        if (record.getTagHidden() != null) {
            sql.SET("tag_hidden = #{tagHidden,jdbcType=VARCHAR}");
        }
        
        if (record.getUserLevel() != null) {
            sql.SET("user_level = #{userLevel,jdbcType=TINYINT}");
        }
        
        if (record.getDeviceLast() != null) {
            sql.SET("device_last = #{deviceLast,jdbcType=VARCHAR}");
        }
        
        if (record.getAppVersion() != null) {
            sql.SET("app_version = #{appVersion,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdatedAt() != null) {
            sql.SET("updated_at = #{updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreatedAt() != null) {
            sql.SET("created_at = #{createdAt,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("user_id = #{userId,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `user_info`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, UserInfoExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}