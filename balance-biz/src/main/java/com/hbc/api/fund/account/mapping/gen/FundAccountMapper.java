package com.hbc.api.fund.account.mapping.gen;

import com.hbc.api.fund.account.mapping.gen.bean.FundAccount;
import com.hbc.api.fund.account.mapping.gen.bean.FundAccountExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface FundAccountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FundAccountSqlProvider.class, method="countByExample")
    int countByExample(FundAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FundAccountSqlProvider.class, method="deleteByExample")
    int deleteByExample(FundAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `fund_account`",
        "where account_no = #{accountNo,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String accountNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `fund_account` (account_no, account_name, ",
        "account_type, amount, ",
        "total_amount, user_id, ",
        "frozen_amount, account_status, ",
        "update_time, create_time)",
        "values (#{accountNo,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, ",
        "#{accountType,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, ",
        "#{totalAmount,jdbcType=DOUBLE}, #{userId,jdbcType=VARCHAR}, ",
        "#{frozenAmount,jdbcType=DOUBLE}, #{accountStatus,jdbcType=INTEGER}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(FundAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FundAccountSqlProvider.class, method="insertSelective")
    int insertSelective(FundAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FundAccountSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="account_no", property="accountNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="account_name", property="accountName", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_type", property="accountType", jdbcType=JdbcType.INTEGER),
        @Result(column="amount", property="amount", jdbcType=JdbcType.DOUBLE),
        @Result(column="total_amount", property="totalAmount", jdbcType=JdbcType.DOUBLE),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="frozen_amount", property="frozenAmount", jdbcType=JdbcType.DOUBLE),
        @Result(column="account_status", property="accountStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FundAccount> selectByExample(FundAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "account_no, account_name, account_type, amount, total_amount, user_id, frozen_amount, ",
        "account_status, update_time, create_time",
        "from `fund_account`",
        "where account_no = #{accountNo,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="account_no", property="accountNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="account_name", property="accountName", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_type", property="accountType", jdbcType=JdbcType.INTEGER),
        @Result(column="amount", property="amount", jdbcType=JdbcType.DOUBLE),
        @Result(column="total_amount", property="totalAmount", jdbcType=JdbcType.DOUBLE),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="frozen_amount", property="frozenAmount", jdbcType=JdbcType.DOUBLE),
        @Result(column="account_status", property="accountStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    FundAccount selectByPrimaryKey(String accountNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FundAccountSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FundAccount record, @Param("example") FundAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FundAccountSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FundAccount record, @Param("example") FundAccountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FundAccountSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FundAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `fund_account`
     *
     * @mbggenerated
     */
    @Update({
        "update `fund_account`",
        "set account_name = #{accountName,jdbcType=VARCHAR},",
          "account_type = #{accountType,jdbcType=INTEGER},",
          "amount = #{amount,jdbcType=DOUBLE},",
          "total_amount = #{totalAmount,jdbcType=DOUBLE},",
          "user_id = #{userId,jdbcType=VARCHAR},",
          "frozen_amount = #{frozenAmount,jdbcType=DOUBLE},",
          "account_status = #{accountStatus,jdbcType=INTEGER},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where account_no = #{accountNo,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(FundAccount record);
}