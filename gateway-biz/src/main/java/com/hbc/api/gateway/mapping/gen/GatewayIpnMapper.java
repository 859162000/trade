package com.hbc.api.gateway.mapping.gen;

import com.hbc.api.gateway.mapping.gen.bean.GatewayIpn;
import com.hbc.api.gateway.mapping.gen.bean.GatewayIpnExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface GatewayIpnMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    @SelectProvider(type=GatewayIpnSqlProvider.class, method="countByExample")
    int countByExample(GatewayIpnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=GatewayIpnSqlProvider.class, method="deleteByExample")
    int deleteByExample(GatewayIpnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `gateway_ipn`",
        "where ipn_no = #{ipnNo,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String ipnNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `gateway_ipn` (ipn_no, gateway_id, ",
        "gateway_name, order_no, ",
        "trade_no, pay_no, ",
        "ipn_type, ipn_type_name, ",
        "ipn_status, ipn_batch_no, ",
        "send_kafka_flag, create_time, ",
        "update_time, ipn_content)",
        "values (#{ipnNo,jdbcType=VARCHAR}, #{gatewayId,jdbcType=INTEGER}, ",
        "#{gatewayName,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, ",
        "#{tradeNo,jdbcType=VARCHAR}, #{payNo,jdbcType=VARCHAR}, ",
        "#{ipnType,jdbcType=INTEGER}, #{ipnTypeName,jdbcType=VARCHAR}, ",
        "#{ipnStatus,jdbcType=INTEGER}, #{ipnBatchNo,jdbcType=VARCHAR}, ",
        "#{sendKafkaFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP}, #{ipnContent,jdbcType=LONGVARCHAR})"
    })
    int insert(GatewayIpn record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    @InsertProvider(type=GatewayIpnSqlProvider.class, method="insertSelective")
    int insertSelective(GatewayIpn record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    @SelectProvider(type=GatewayIpnSqlProvider.class, method="selectByExampleWithBLOBs")
    @Results({
        @Result(column="ipn_no", property="ipnNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="gateway_id", property="gatewayId", jdbcType=JdbcType.INTEGER),
        @Result(column="gateway_name", property="gatewayName", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="trade_no", property="tradeNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_no", property="payNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="ipn_type", property="ipnType", jdbcType=JdbcType.INTEGER),
        @Result(column="ipn_type_name", property="ipnTypeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ipn_status", property="ipnStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="ipn_batch_no", property="ipnBatchNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_kafka_flag", property="sendKafkaFlag", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ipn_content", property="ipnContent", jdbcType=JdbcType.LONGVARCHAR)
    })
    List<GatewayIpn> selectByExampleWithBLOBs(GatewayIpnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    @SelectProvider(type=GatewayIpnSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ipn_no", property="ipnNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="gateway_id", property="gatewayId", jdbcType=JdbcType.INTEGER),
        @Result(column="gateway_name", property="gatewayName", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="trade_no", property="tradeNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_no", property="payNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="ipn_type", property="ipnType", jdbcType=JdbcType.INTEGER),
        @Result(column="ipn_type_name", property="ipnTypeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ipn_status", property="ipnStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="ipn_batch_no", property="ipnBatchNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_kafka_flag", property="sendKafkaFlag", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<GatewayIpn> selectByExample(GatewayIpnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ipn_no, gateway_id, gateway_name, order_no, trade_no, pay_no, ipn_type, ipn_type_name, ",
        "ipn_status, ipn_batch_no, send_kafka_flag, create_time, update_time, ipn_content",
        "from `gateway_ipn`",
        "where ipn_no = #{ipnNo,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="ipn_no", property="ipnNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="gateway_id", property="gatewayId", jdbcType=JdbcType.INTEGER),
        @Result(column="gateway_name", property="gatewayName", jdbcType=JdbcType.VARCHAR),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="trade_no", property="tradeNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_no", property="payNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="ipn_type", property="ipnType", jdbcType=JdbcType.INTEGER),
        @Result(column="ipn_type_name", property="ipnTypeName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ipn_status", property="ipnStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="ipn_batch_no", property="ipnBatchNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="send_kafka_flag", property="sendKafkaFlag", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="ipn_content", property="ipnContent", jdbcType=JdbcType.LONGVARCHAR)
    })
    GatewayIpn selectByPrimaryKey(String ipnNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=GatewayIpnSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") GatewayIpn record, @Param("example") GatewayIpnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=GatewayIpnSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(GatewayIpn record);
}