package com.hbc.api.gateway.mapping.gen;

import com.hbc.api.gateway.mapping.gen.bean.GatewayIpn;
import com.hbc.api.gateway.mapping.gen.bean.GatewayIpnExample.Criteria;
import com.hbc.api.gateway.mapping.gen.bean.GatewayIpnExample.Criterion;
import com.hbc.api.gateway.mapping.gen.bean.GatewayIpnExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class GatewayIpnSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    public String countByExample(GatewayIpnExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`gateway_ipn`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    public String deleteByExample(GatewayIpnExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`gateway_ipn`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    public String insertSelective(GatewayIpn record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`gateway_ipn`");
        
        if (record.getIpnNo() != null) {
            sql.VALUES("ipn_no", "#{ipnNo,jdbcType=VARCHAR}");
        }
        
        if (record.getGatewayId() != null) {
            sql.VALUES("gateway_id", "#{gatewayId,jdbcType=INTEGER}");
        }
        
        if (record.getGatewayName() != null) {
            sql.VALUES("gateway_name", "#{gatewayName,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderNo() != null) {
            sql.VALUES("order_no", "#{orderNo,jdbcType=VARCHAR}");
        }
        
        if (record.getTradeNo() != null) {
            sql.VALUES("trade_no", "#{tradeNo,jdbcType=VARCHAR}");
        }
        
        if (record.getPayNo() != null) {
            sql.VALUES("pay_no", "#{payNo,jdbcType=VARCHAR}");
        }
        
        if (record.getIpnType() != null) {
            sql.VALUES("ipn_type", "#{ipnType,jdbcType=INTEGER}");
        }
        
        if (record.getIpnTypeName() != null) {
            sql.VALUES("ipn_type_name", "#{ipnTypeName,jdbcType=VARCHAR}");
        }
        
        if (record.getIpnStatus() != null) {
            sql.VALUES("ipn_status", "#{ipnStatus,jdbcType=INTEGER}");
        }
        
        if (record.getIpnBatchNo() != null) {
            sql.VALUES("ipn_batch_no", "#{ipnBatchNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSendKafkaFlag() != null) {
            sql.VALUES("send_kafka_flag", "#{sendKafkaFlag,jdbcType=INTEGER}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIpnContent() != null) {
            sql.VALUES("ipn_content", "#{ipnContent,jdbcType=LONGVARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    public String selectByExampleWithBLOBs(GatewayIpnExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("ipn_no");
        } else {
            sql.SELECT("ipn_no");
        }
        sql.SELECT("gateway_id");
        sql.SELECT("gateway_name");
        sql.SELECT("order_no");
        sql.SELECT("trade_no");
        sql.SELECT("pay_no");
        sql.SELECT("ipn_type");
        sql.SELECT("ipn_type_name");
        sql.SELECT("ipn_status");
        sql.SELECT("ipn_batch_no");
        sql.SELECT("send_kafka_flag");
        sql.SELECT("create_time");
        sql.SELECT("update_time");
        sql.SELECT("ipn_content");
        sql.FROM("`gateway_ipn`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    public String selectByExample(GatewayIpnExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("ipn_no");
        } else {
            sql.SELECT("ipn_no");
        }
        sql.SELECT("gateway_id");
        sql.SELECT("gateway_name");
        sql.SELECT("order_no");
        sql.SELECT("trade_no");
        sql.SELECT("pay_no");
        sql.SELECT("ipn_type");
        sql.SELECT("ipn_type_name");
        sql.SELECT("ipn_status");
        sql.SELECT("ipn_batch_no");
        sql.SELECT("send_kafka_flag");
        sql.SELECT("create_time");
        sql.SELECT("update_time");
        sql.FROM("`gateway_ipn`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        GatewayIpn record = (GatewayIpn) parameter.get("record");
        GatewayIpnExample example = (GatewayIpnExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`gateway_ipn`");
        
        if (record.getIpnNo() != null) {
            sql.SET("ipn_no = #{record.ipnNo,jdbcType=VARCHAR}");
        }
        
        if (record.getGatewayId() != null) {
            sql.SET("gateway_id = #{record.gatewayId,jdbcType=INTEGER}");
        }
        
        if (record.getGatewayName() != null) {
            sql.SET("gateway_name = #{record.gatewayName,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderNo() != null) {
            sql.SET("order_no = #{record.orderNo,jdbcType=VARCHAR}");
        }
        
        if (record.getTradeNo() != null) {
            sql.SET("trade_no = #{record.tradeNo,jdbcType=VARCHAR}");
        }
        
        if (record.getPayNo() != null) {
            sql.SET("pay_no = #{record.payNo,jdbcType=VARCHAR}");
        }
        
        if (record.getIpnType() != null) {
            sql.SET("ipn_type = #{record.ipnType,jdbcType=INTEGER}");
        }
        
        if (record.getIpnTypeName() != null) {
            sql.SET("ipn_type_name = #{record.ipnTypeName,jdbcType=VARCHAR}");
        }
        
        if (record.getIpnStatus() != null) {
            sql.SET("ipn_status = #{record.ipnStatus,jdbcType=INTEGER}");
        }
        
        if (record.getIpnBatchNo() != null) {
            sql.SET("ipn_batch_no = #{record.ipnBatchNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSendKafkaFlag() != null) {
            sql.SET("send_kafka_flag = #{record.sendKafkaFlag,jdbcType=INTEGER}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIpnContent() != null) {
            sql.SET("ipn_content = #{record.ipnContent,jdbcType=LONGVARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    public String updateByExampleWithBLOBs(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`gateway_ipn`");
        
        sql.SET("ipn_no = #{record.ipnNo,jdbcType=VARCHAR}");
        sql.SET("gateway_id = #{record.gatewayId,jdbcType=INTEGER}");
        sql.SET("gateway_name = #{record.gatewayName,jdbcType=VARCHAR}");
        sql.SET("order_no = #{record.orderNo,jdbcType=VARCHAR}");
        sql.SET("trade_no = #{record.tradeNo,jdbcType=VARCHAR}");
        sql.SET("pay_no = #{record.payNo,jdbcType=VARCHAR}");
        sql.SET("ipn_type = #{record.ipnType,jdbcType=INTEGER}");
        sql.SET("ipn_type_name = #{record.ipnTypeName,jdbcType=VARCHAR}");
        sql.SET("ipn_status = #{record.ipnStatus,jdbcType=INTEGER}");
        sql.SET("ipn_batch_no = #{record.ipnBatchNo,jdbcType=VARCHAR}");
        sql.SET("send_kafka_flag = #{record.sendKafkaFlag,jdbcType=INTEGER}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        sql.SET("ipn_content = #{record.ipnContent,jdbcType=LONGVARCHAR}");
        
        GatewayIpnExample example = (GatewayIpnExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`gateway_ipn`");
        
        sql.SET("ipn_no = #{record.ipnNo,jdbcType=VARCHAR}");
        sql.SET("gateway_id = #{record.gatewayId,jdbcType=INTEGER}");
        sql.SET("gateway_name = #{record.gatewayName,jdbcType=VARCHAR}");
        sql.SET("order_no = #{record.orderNo,jdbcType=VARCHAR}");
        sql.SET("trade_no = #{record.tradeNo,jdbcType=VARCHAR}");
        sql.SET("pay_no = #{record.payNo,jdbcType=VARCHAR}");
        sql.SET("ipn_type = #{record.ipnType,jdbcType=INTEGER}");
        sql.SET("ipn_type_name = #{record.ipnTypeName,jdbcType=VARCHAR}");
        sql.SET("ipn_status = #{record.ipnStatus,jdbcType=INTEGER}");
        sql.SET("ipn_batch_no = #{record.ipnBatchNo,jdbcType=VARCHAR}");
        sql.SET("send_kafka_flag = #{record.sendKafkaFlag,jdbcType=INTEGER}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        
        GatewayIpnExample example = (GatewayIpnExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(GatewayIpn record) {
        SQL sql = new SQL();
        sql.UPDATE("`gateway_ipn`");
        
        if (record.getGatewayId() != null) {
            sql.SET("gateway_id = #{gatewayId,jdbcType=INTEGER}");
        }
        
        if (record.getGatewayName() != null) {
            sql.SET("gateway_name = #{gatewayName,jdbcType=VARCHAR}");
        }
        
        if (record.getOrderNo() != null) {
            sql.SET("order_no = #{orderNo,jdbcType=VARCHAR}");
        }
        
        if (record.getTradeNo() != null) {
            sql.SET("trade_no = #{tradeNo,jdbcType=VARCHAR}");
        }
        
        if (record.getPayNo() != null) {
            sql.SET("pay_no = #{payNo,jdbcType=VARCHAR}");
        }
        
        if (record.getIpnType() != null) {
            sql.SET("ipn_type = #{ipnType,jdbcType=INTEGER}");
        }
        
        if (record.getIpnTypeName() != null) {
            sql.SET("ipn_type_name = #{ipnTypeName,jdbcType=VARCHAR}");
        }
        
        if (record.getIpnStatus() != null) {
            sql.SET("ipn_status = #{ipnStatus,jdbcType=INTEGER}");
        }
        
        if (record.getIpnBatchNo() != null) {
            sql.SET("ipn_batch_no = #{ipnBatchNo,jdbcType=VARCHAR}");
        }
        
        if (record.getSendKafkaFlag() != null) {
            sql.SET("send_kafka_flag = #{sendKafkaFlag,jdbcType=INTEGER}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIpnContent() != null) {
            sql.SET("ipn_content = #{ipnContent,jdbcType=LONGVARCHAR}");
        }
        
        sql.WHERE("ipn_no = #{ipnNo,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `gateway_ipn`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, GatewayIpnExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}