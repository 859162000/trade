package com.hbc.data.trade.transfer.mapping.pay.gen.bean;

import com.hbc.data.trade.transfer.util.Page;
import java.util.ArrayList;
import java.util.List;

public class PayQueueCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public PayQueueCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andQueueNameIsNull() {
            addCriterion("queue_name is null");
            return (Criteria) this;
        }

        public Criteria andQueueNameIsNotNull() {
            addCriterion("queue_name is not null");
            return (Criteria) this;
        }

        public Criteria andQueueNameEqualTo(String value) {
            addCriterion("queue_name =", value, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameNotEqualTo(String value) {
            addCriterion("queue_name <>", value, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameGreaterThan(String value) {
            addCriterion("queue_name >", value, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameGreaterThanOrEqualTo(String value) {
            addCriterion("queue_name >=", value, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameLessThan(String value) {
            addCriterion("queue_name <", value, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameLessThanOrEqualTo(String value) {
            addCriterion("queue_name <=", value, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameLike(String value) {
            addCriterion("queue_name like", value, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameNotLike(String value) {
            addCriterion("queue_name not like", value, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameIn(List<String> values) {
            addCriterion("queue_name in", values, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameNotIn(List<String> values) {
            addCriterion("queue_name not in", values, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameBetween(String value1, String value2) {
            addCriterion("queue_name between", value1, value2, "queueName");
            return (Criteria) this;
        }

        public Criteria andQueueNameNotBetween(String value1, String value2) {
            addCriterion("queue_name not between", value1, value2, "queueName");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andAttemptsIsNull() {
            addCriterion("attempts is null");
            return (Criteria) this;
        }

        public Criteria andAttemptsIsNotNull() {
            addCriterion("attempts is not null");
            return (Criteria) this;
        }

        public Criteria andAttemptsEqualTo(Integer value) {
            addCriterion("attempts =", value, "attempts");
            return (Criteria) this;
        }

        public Criteria andAttemptsNotEqualTo(Integer value) {
            addCriterion("attempts <>", value, "attempts");
            return (Criteria) this;
        }

        public Criteria andAttemptsGreaterThan(Integer value) {
            addCriterion("attempts >", value, "attempts");
            return (Criteria) this;
        }

        public Criteria andAttemptsGreaterThanOrEqualTo(Integer value) {
            addCriterion("attempts >=", value, "attempts");
            return (Criteria) this;
        }

        public Criteria andAttemptsLessThan(Integer value) {
            addCriterion("attempts <", value, "attempts");
            return (Criteria) this;
        }

        public Criteria andAttemptsLessThanOrEqualTo(Integer value) {
            addCriterion("attempts <=", value, "attempts");
            return (Criteria) this;
        }

        public Criteria andAttemptsIn(List<Integer> values) {
            addCriterion("attempts in", values, "attempts");
            return (Criteria) this;
        }

        public Criteria andAttemptsNotIn(List<Integer> values) {
            addCriterion("attempts not in", values, "attempts");
            return (Criteria) this;
        }

        public Criteria andAttemptsBetween(Integer value1, Integer value2) {
            addCriterion("attempts between", value1, value2, "attempts");
            return (Criteria) this;
        }

        public Criteria andAttemptsNotBetween(Integer value1, Integer value2) {
            addCriterion("attempts not between", value1, value2, "attempts");
            return (Criteria) this;
        }

        public Criteria andFireonIsNull() {
            addCriterion("fireon is null");
            return (Criteria) this;
        }

        public Criteria andFireonIsNotNull() {
            addCriterion("fireon is not null");
            return (Criteria) this;
        }

        public Criteria andFireonEqualTo(Long value) {
            addCriterion("fireon =", value, "fireon");
            return (Criteria) this;
        }

        public Criteria andFireonNotEqualTo(Long value) {
            addCriterion("fireon <>", value, "fireon");
            return (Criteria) this;
        }

        public Criteria andFireonGreaterThan(Long value) {
            addCriterion("fireon >", value, "fireon");
            return (Criteria) this;
        }

        public Criteria andFireonGreaterThanOrEqualTo(Long value) {
            addCriterion("fireon >=", value, "fireon");
            return (Criteria) this;
        }

        public Criteria andFireonLessThan(Long value) {
            addCriterion("fireon <", value, "fireon");
            return (Criteria) this;
        }

        public Criteria andFireonLessThanOrEqualTo(Long value) {
            addCriterion("fireon <=", value, "fireon");
            return (Criteria) this;
        }

        public Criteria andFireonIn(List<Long> values) {
            addCriterion("fireon in", values, "fireon");
            return (Criteria) this;
        }

        public Criteria andFireonNotIn(List<Long> values) {
            addCriterion("fireon not in", values, "fireon");
            return (Criteria) this;
        }

        public Criteria andFireonBetween(Long value1, Long value2) {
            addCriterion("fireon between", value1, value2, "fireon");
            return (Criteria) this;
        }

        public Criteria andFireonNotBetween(Long value1, Long value2) {
            addCriterion("fireon not between", value1, value2, "fireon");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `pay_queue`
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `pay_queue`
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}