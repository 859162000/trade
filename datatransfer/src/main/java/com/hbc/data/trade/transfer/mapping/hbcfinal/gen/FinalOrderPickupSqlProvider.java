package com.hbc.data.trade.transfer.mapping.hbcfinal.gen;

import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderPickup;
import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderPickupCriteria.Criteria;
import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderPickupCriteria.Criterion;
import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderPickupCriteria;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class FinalOrderPickupSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    public String countByExample(FinalOrderPickupCriteria example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`orderpickup`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    public String deleteByExample(FinalOrderPickupCriteria example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`orderpickup`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    public String insertSelective(FinalOrderPickup record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`orderpickup`");
        
        if (record.getOrderid() != null) {
            sql.VALUES("orderId", "#{orderid,jdbcType=VARCHAR}");
        }
        
        if (record.getOrdersn() != null) {
            sql.VALUES("orderSN", "#{ordersn,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceid() != null) {
            sql.VALUES("placeId", "#{placeid,jdbcType=INTEGER}");
        }
        
        if (record.getPlacecityid() != null) {
            sql.VALUES("placeCityId", "#{placecityid,jdbcType=INTEGER}");
        }
        
        if (record.getCityname() != null) {
            sql.VALUES("cityName", "#{cityname,jdbcType=VARCHAR}");
        }
        
        if (record.getFlightno() != null) {
            sql.VALUES("flightNo", "#{flightno,jdbcType=VARCHAR}");
        }
        
        if (record.getFlightdate() != null) {
            sql.VALUES("flightDate", "#{flightdate,jdbcType=DATE}");
        }
        
        if (record.getFlightdeptimeplandate() != null) {
            sql.VALUES("flightDeptimePlanDate", "#{flightdeptimeplandate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getServicedate() != null) {
            sql.VALUES("serviceDate", "#{servicedate,jdbcType=DATE}");
        }
        
        if (record.getServicetime() != null) {
            sql.VALUES("serviceTime", "#{servicetime,jdbcType=TIME}");
        }
        
        if (record.getAirport() != null) {
            sql.VALUES("airport", "#{airport,jdbcType=VARCHAR}");
        }
        
        if (record.getTerminal() != null) {
            sql.VALUES("terminal", "#{terminal,jdbcType=VARCHAR}");
        }
        
        if (record.getDeparture() != null) {
            sql.VALUES("departure", "#{departure,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptlocation() != null) {
            sql.VALUES("deptLocation", "#{deptlocation,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptenaddress() != null) {
            sql.VALUES("deptEnAddress", "#{deptenaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getDestination() != null) {
            sql.VALUES("destination", "#{destination,jdbcType=VARCHAR}");
        }
        
        if (record.getDestlocation() != null) {
            sql.VALUES("destLocation", "#{destlocation,jdbcType=VARCHAR}");
        }
        
        if (record.getDetailaddress() != null) {
            sql.VALUES("detailAddress", "#{detailaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getDestmobile() != null) {
            sql.VALUES("destMobile", "#{destmobile,jdbcType=VARCHAR}");
        }
        
        if (record.getDestenaddress() != null) {
            sql.VALUES("destEnAddress", "#{destenaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getIsarrivalvisa() != null) {
            sql.VALUES("isArrivalVisa", "#{isarrivalvisa,jdbcType=INTEGER}");
        }
        
        if (record.getDuration() != null) {
            sql.VALUES("duration", "#{duration,jdbcType=INTEGER}");
        }
        
        if (record.getAdultnum() != null) {
            sql.VALUES("adultNum", "#{adultnum,jdbcType=TINYINT}");
        }
        
        if (record.getChildnum() != null) {
            sql.VALUES("childNum", "#{childnum,jdbcType=TINYINT}");
        }
        
        if (record.getChildseat() != null) {
            sql.VALUES("childSeat", "#{childseat,jdbcType=VARCHAR}");
        }
        
        if (record.getBrandsign() != null) {
            sql.VALUES("brandSign", "#{brandsign,jdbcType=VARCHAR}");
        }
        
        if (record.getSeatcategory() != null) {
            sql.VALUES("seatCategory", "#{seatcategory,jdbcType=TINYINT}");
        }
        
        if (record.getType() != null) {
            sql.VALUES("type", "#{type,jdbcType=INTEGER}");
        }
        
        if (record.getDistance() != null) {
            sql.VALUES("distance", "#{distance,jdbcType=DECIMAL}");
        }
        
        if (record.getPrice() != null) {
            sql.VALUES("price", "#{price,jdbcType=INTEGER}");
        }
        
        if (record.getClientprice() != null) {
            sql.VALUES("clientPrice", "#{clientprice,jdbcType=INTEGER}");
        }
        
        if (record.getGuideprice() != null) {
            sql.VALUES("guidePrice", "#{guideprice,jdbcType=INTEGER}");
        }
        
        if (record.getUsername() != null) {
            sql.VALUES("username", "#{username,jdbcType=VARCHAR}");
        }
        
        if (record.getAreacode() != null) {
            sql.VALUES("areaCode", "#{areacode,jdbcType=VARCHAR}");
        }
        
        if (record.getUsermobile() != null) {
            sql.VALUES("usermobile", "#{usermobile,jdbcType=VARCHAR}");
        }
        
        if (record.getUsermobile1() != null) {
            sql.VALUES("usermobile1", "#{usermobile1,jdbcType=VARCHAR}");
        }
        
        if (record.getUsermobile2() != null) {
            sql.VALUES("usermobile2", "#{usermobile2,jdbcType=VARCHAR}");
        }
        
        if (record.getUseremail() != null) {
            sql.VALUES("useremail", "#{useremail,jdbcType=VARCHAR}");
        }
        
        if (record.getUsercomment() != null) {
            sql.VALUES("usercomment", "#{usercomment,jdbcType=VARCHAR}");
        }
        
        if (record.getUsercontact() != null) {
            sql.VALUES("usercontact", "#{usercontact,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideid() != null) {
            sql.VALUES("guideId", "#{guideid,jdbcType=INTEGER}");
        }
        
        if (record.getClienttype() != null) {
            sql.VALUES("clientType", "#{clienttype,jdbcType=TINYINT}");
        }
        
        if (record.getClientid() != null) {
            sql.VALUES("clientId", "#{clientid,jdbcType=VARCHAR}");
        }
        
        if (record.getUserpassportid() != null) {
            sql.VALUES("userpassportId", "#{userpassportid,jdbcType=VARCHAR}");
        }
        
        if (record.getAdminid() != null) {
            sql.VALUES("adminId", "#{adminid,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=INTEGER}");
        }
        
        if (record.getRegisterflightid() != null) {
            sql.VALUES("registerFlightId", "#{registerflightid,jdbcType=VARCHAR}");
        }
        
        if (record.getGuidecommentstatus() != null) {
            sql.VALUES("guideCommentStatus", "#{guidecommentstatus,jdbcType=INTEGER}");
        }
        
        if (record.getUsercommentstatus() != null) {
            sql.VALUES("userCommentStatus", "#{usercommentstatus,jdbcType=INTEGER}");
        }
        
        if (record.getDealordertime() != null) {
            sql.VALUES("dealOrderTime", "#{dealordertime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedAt() != null) {
            sql.VALUES("updated_at", "#{updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDeletedAt() != null) {
            sql.VALUES("deleted_at", "#{deletedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreatedAt() != null) {
            sql.VALUES("created_at", "#{createdAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDep() != null) {
            sql.VALUES("dep", "#{dep,jdbcType=VARCHAR}");
        }
        
        if (record.getArr() != null) {
            sql.VALUES("arr", "#{arr,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    public String selectByExample(FinalOrderPickupCriteria example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("orderId");
        } else {
            sql.SELECT("orderId");
        }
        sql.SELECT("orderSN");
        sql.SELECT("placeId");
        sql.SELECT("placeCityId");
        sql.SELECT("cityName");
        sql.SELECT("flightNo");
        sql.SELECT("flightDate");
        sql.SELECT("flightDeptimePlanDate");
        sql.SELECT("serviceDate");
        sql.SELECT("serviceTime");
        sql.SELECT("airport");
        sql.SELECT("terminal");
        sql.SELECT("departure");
        sql.SELECT("deptLocation");
        sql.SELECT("deptEnAddress");
        sql.SELECT("destination");
        sql.SELECT("destLocation");
        sql.SELECT("detailAddress");
        sql.SELECT("destMobile");
        sql.SELECT("destEnAddress");
        sql.SELECT("isArrivalVisa");
        sql.SELECT("duration");
        sql.SELECT("adultNum");
        sql.SELECT("childNum");
        sql.SELECT("childSeat");
        sql.SELECT("brandSign");
        sql.SELECT("seatCategory");
        sql.SELECT("type");
        sql.SELECT("distance");
        sql.SELECT("price");
        sql.SELECT("clientPrice");
        sql.SELECT("guidePrice");
        sql.SELECT("username");
        sql.SELECT("areaCode");
        sql.SELECT("usermobile");
        sql.SELECT("usermobile1");
        sql.SELECT("usermobile2");
        sql.SELECT("useremail");
        sql.SELECT("usercomment");
        sql.SELECT("usercontact");
        sql.SELECT("guideId");
        sql.SELECT("clientType");
        sql.SELECT("clientId");
        sql.SELECT("userpassportId");
        sql.SELECT("adminId");
        sql.SELECT("status");
        sql.SELECT("registerFlightId");
        sql.SELECT("guideCommentStatus");
        sql.SELECT("userCommentStatus");
        sql.SELECT("dealOrderTime");
        sql.SELECT("updated_at");
        sql.SELECT("deleted_at");
        sql.SELECT("created_at");
        sql.SELECT("dep");
        sql.SELECT("arr");
        sql.FROM("`orderpickup`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        FinalOrderPickup record = (FinalOrderPickup) parameter.get("record");
        FinalOrderPickupCriteria example = (FinalOrderPickupCriteria) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`orderpickup`");
        
        if (record.getOrderid() != null) {
            sql.SET("orderId = #{record.orderid,jdbcType=VARCHAR}");
        }
        
        if (record.getOrdersn() != null) {
            sql.SET("orderSN = #{record.ordersn,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceid() != null) {
            sql.SET("placeId = #{record.placeid,jdbcType=INTEGER}");
        }
        
        if (record.getPlacecityid() != null) {
            sql.SET("placeCityId = #{record.placecityid,jdbcType=INTEGER}");
        }
        
        if (record.getCityname() != null) {
            sql.SET("cityName = #{record.cityname,jdbcType=VARCHAR}");
        }
        
        if (record.getFlightno() != null) {
            sql.SET("flightNo = #{record.flightno,jdbcType=VARCHAR}");
        }
        
        if (record.getFlightdate() != null) {
            sql.SET("flightDate = #{record.flightdate,jdbcType=DATE}");
        }
        
        if (record.getFlightdeptimeplandate() != null) {
            sql.SET("flightDeptimePlanDate = #{record.flightdeptimeplandate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getServicedate() != null) {
            sql.SET("serviceDate = #{record.servicedate,jdbcType=DATE}");
        }
        
        if (record.getServicetime() != null) {
            sql.SET("serviceTime = #{record.servicetime,jdbcType=TIME}");
        }
        
        if (record.getAirport() != null) {
            sql.SET("airport = #{record.airport,jdbcType=VARCHAR}");
        }
        
        if (record.getTerminal() != null) {
            sql.SET("terminal = #{record.terminal,jdbcType=VARCHAR}");
        }
        
        if (record.getDeparture() != null) {
            sql.SET("departure = #{record.departure,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptlocation() != null) {
            sql.SET("deptLocation = #{record.deptlocation,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptenaddress() != null) {
            sql.SET("deptEnAddress = #{record.deptenaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getDestination() != null) {
            sql.SET("destination = #{record.destination,jdbcType=VARCHAR}");
        }
        
        if (record.getDestlocation() != null) {
            sql.SET("destLocation = #{record.destlocation,jdbcType=VARCHAR}");
        }
        
        if (record.getDetailaddress() != null) {
            sql.SET("detailAddress = #{record.detailaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getDestmobile() != null) {
            sql.SET("destMobile = #{record.destmobile,jdbcType=VARCHAR}");
        }
        
        if (record.getDestenaddress() != null) {
            sql.SET("destEnAddress = #{record.destenaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getIsarrivalvisa() != null) {
            sql.SET("isArrivalVisa = #{record.isarrivalvisa,jdbcType=INTEGER}");
        }
        
        if (record.getDuration() != null) {
            sql.SET("duration = #{record.duration,jdbcType=INTEGER}");
        }
        
        if (record.getAdultnum() != null) {
            sql.SET("adultNum = #{record.adultnum,jdbcType=TINYINT}");
        }
        
        if (record.getChildnum() != null) {
            sql.SET("childNum = #{record.childnum,jdbcType=TINYINT}");
        }
        
        if (record.getChildseat() != null) {
            sql.SET("childSeat = #{record.childseat,jdbcType=VARCHAR}");
        }
        
        if (record.getBrandsign() != null) {
            sql.SET("brandSign = #{record.brandsign,jdbcType=VARCHAR}");
        }
        
        if (record.getSeatcategory() != null) {
            sql.SET("seatCategory = #{record.seatcategory,jdbcType=TINYINT}");
        }
        
        if (record.getType() != null) {
            sql.SET("type = #{record.type,jdbcType=INTEGER}");
        }
        
        if (record.getDistance() != null) {
            sql.SET("distance = #{record.distance,jdbcType=DECIMAL}");
        }
        
        if (record.getPrice() != null) {
            sql.SET("price = #{record.price,jdbcType=INTEGER}");
        }
        
        if (record.getClientprice() != null) {
            sql.SET("clientPrice = #{record.clientprice,jdbcType=INTEGER}");
        }
        
        if (record.getGuideprice() != null) {
            sql.SET("guidePrice = #{record.guideprice,jdbcType=INTEGER}");
        }
        
        if (record.getUsername() != null) {
            sql.SET("username = #{record.username,jdbcType=VARCHAR}");
        }
        
        if (record.getAreacode() != null) {
            sql.SET("areaCode = #{record.areacode,jdbcType=VARCHAR}");
        }
        
        if (record.getUsermobile() != null) {
            sql.SET("usermobile = #{record.usermobile,jdbcType=VARCHAR}");
        }
        
        if (record.getUsermobile1() != null) {
            sql.SET("usermobile1 = #{record.usermobile1,jdbcType=VARCHAR}");
        }
        
        if (record.getUsermobile2() != null) {
            sql.SET("usermobile2 = #{record.usermobile2,jdbcType=VARCHAR}");
        }
        
        if (record.getUseremail() != null) {
            sql.SET("useremail = #{record.useremail,jdbcType=VARCHAR}");
        }
        
        if (record.getUsercomment() != null) {
            sql.SET("usercomment = #{record.usercomment,jdbcType=VARCHAR}");
        }
        
        if (record.getUsercontact() != null) {
            sql.SET("usercontact = #{record.usercontact,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideid() != null) {
            sql.SET("guideId = #{record.guideid,jdbcType=INTEGER}");
        }
        
        if (record.getClienttype() != null) {
            sql.SET("clientType = #{record.clienttype,jdbcType=TINYINT}");
        }
        
        if (record.getClientid() != null) {
            sql.SET("clientId = #{record.clientid,jdbcType=VARCHAR}");
        }
        
        if (record.getUserpassportid() != null) {
            sql.SET("userpassportId = #{record.userpassportid,jdbcType=VARCHAR}");
        }
        
        if (record.getAdminid() != null) {
            sql.SET("adminId = #{record.adminid,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{record.status,jdbcType=INTEGER}");
        }
        
        if (record.getRegisterflightid() != null) {
            sql.SET("registerFlightId = #{record.registerflightid,jdbcType=VARCHAR}");
        }
        
        if (record.getGuidecommentstatus() != null) {
            sql.SET("guideCommentStatus = #{record.guidecommentstatus,jdbcType=INTEGER}");
        }
        
        if (record.getUsercommentstatus() != null) {
            sql.SET("userCommentStatus = #{record.usercommentstatus,jdbcType=INTEGER}");
        }
        
        if (record.getDealordertime() != null) {
            sql.SET("dealOrderTime = #{record.dealordertime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedAt() != null) {
            sql.SET("updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDeletedAt() != null) {
            sql.SET("deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreatedAt() != null) {
            sql.SET("created_at = #{record.createdAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDep() != null) {
            sql.SET("dep = #{record.dep,jdbcType=VARCHAR}");
        }
        
        if (record.getArr() != null) {
            sql.SET("arr = #{record.arr,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`orderpickup`");
        
        sql.SET("orderId = #{record.orderid,jdbcType=VARCHAR}");
        sql.SET("orderSN = #{record.ordersn,jdbcType=VARCHAR}");
        sql.SET("placeId = #{record.placeid,jdbcType=INTEGER}");
        sql.SET("placeCityId = #{record.placecityid,jdbcType=INTEGER}");
        sql.SET("cityName = #{record.cityname,jdbcType=VARCHAR}");
        sql.SET("flightNo = #{record.flightno,jdbcType=VARCHAR}");
        sql.SET("flightDate = #{record.flightdate,jdbcType=DATE}");
        sql.SET("flightDeptimePlanDate = #{record.flightdeptimeplandate,jdbcType=TIMESTAMP}");
        sql.SET("serviceDate = #{record.servicedate,jdbcType=DATE}");
        sql.SET("serviceTime = #{record.servicetime,jdbcType=TIME}");
        sql.SET("airport = #{record.airport,jdbcType=VARCHAR}");
        sql.SET("terminal = #{record.terminal,jdbcType=VARCHAR}");
        sql.SET("departure = #{record.departure,jdbcType=VARCHAR}");
        sql.SET("deptLocation = #{record.deptlocation,jdbcType=VARCHAR}");
        sql.SET("deptEnAddress = #{record.deptenaddress,jdbcType=VARCHAR}");
        sql.SET("destination = #{record.destination,jdbcType=VARCHAR}");
        sql.SET("destLocation = #{record.destlocation,jdbcType=VARCHAR}");
        sql.SET("detailAddress = #{record.detailaddress,jdbcType=VARCHAR}");
        sql.SET("destMobile = #{record.destmobile,jdbcType=VARCHAR}");
        sql.SET("destEnAddress = #{record.destenaddress,jdbcType=VARCHAR}");
        sql.SET("isArrivalVisa = #{record.isarrivalvisa,jdbcType=INTEGER}");
        sql.SET("duration = #{record.duration,jdbcType=INTEGER}");
        sql.SET("adultNum = #{record.adultnum,jdbcType=TINYINT}");
        sql.SET("childNum = #{record.childnum,jdbcType=TINYINT}");
        sql.SET("childSeat = #{record.childseat,jdbcType=VARCHAR}");
        sql.SET("brandSign = #{record.brandsign,jdbcType=VARCHAR}");
        sql.SET("seatCategory = #{record.seatcategory,jdbcType=TINYINT}");
        sql.SET("type = #{record.type,jdbcType=INTEGER}");
        sql.SET("distance = #{record.distance,jdbcType=DECIMAL}");
        sql.SET("price = #{record.price,jdbcType=INTEGER}");
        sql.SET("clientPrice = #{record.clientprice,jdbcType=INTEGER}");
        sql.SET("guidePrice = #{record.guideprice,jdbcType=INTEGER}");
        sql.SET("username = #{record.username,jdbcType=VARCHAR}");
        sql.SET("areaCode = #{record.areacode,jdbcType=VARCHAR}");
        sql.SET("usermobile = #{record.usermobile,jdbcType=VARCHAR}");
        sql.SET("usermobile1 = #{record.usermobile1,jdbcType=VARCHAR}");
        sql.SET("usermobile2 = #{record.usermobile2,jdbcType=VARCHAR}");
        sql.SET("useremail = #{record.useremail,jdbcType=VARCHAR}");
        sql.SET("usercomment = #{record.usercomment,jdbcType=VARCHAR}");
        sql.SET("usercontact = #{record.usercontact,jdbcType=VARCHAR}");
        sql.SET("guideId = #{record.guideid,jdbcType=INTEGER}");
        sql.SET("clientType = #{record.clienttype,jdbcType=TINYINT}");
        sql.SET("clientId = #{record.clientid,jdbcType=VARCHAR}");
        sql.SET("userpassportId = #{record.userpassportid,jdbcType=VARCHAR}");
        sql.SET("adminId = #{record.adminid,jdbcType=INTEGER}");
        sql.SET("status = #{record.status,jdbcType=INTEGER}");
        sql.SET("registerFlightId = #{record.registerflightid,jdbcType=VARCHAR}");
        sql.SET("guideCommentStatus = #{record.guidecommentstatus,jdbcType=INTEGER}");
        sql.SET("userCommentStatus = #{record.usercommentstatus,jdbcType=INTEGER}");
        sql.SET("dealOrderTime = #{record.dealordertime,jdbcType=TIMESTAMP}");
        sql.SET("updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}");
        sql.SET("deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}");
        sql.SET("created_at = #{record.createdAt,jdbcType=TIMESTAMP}");
        sql.SET("dep = #{record.dep,jdbcType=VARCHAR}");
        sql.SET("arr = #{record.arr,jdbcType=VARCHAR}");
        
        FinalOrderPickupCriteria example = (FinalOrderPickupCriteria) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(FinalOrderPickup record) {
        SQL sql = new SQL();
        sql.UPDATE("`orderpickup`");
        
        if (record.getOrdersn() != null) {
            sql.SET("orderSN = #{ordersn,jdbcType=VARCHAR}");
        }
        
        if (record.getPlaceid() != null) {
            sql.SET("placeId = #{placeid,jdbcType=INTEGER}");
        }
        
        if (record.getPlacecityid() != null) {
            sql.SET("placeCityId = #{placecityid,jdbcType=INTEGER}");
        }
        
        if (record.getCityname() != null) {
            sql.SET("cityName = #{cityname,jdbcType=VARCHAR}");
        }
        
        if (record.getFlightno() != null) {
            sql.SET("flightNo = #{flightno,jdbcType=VARCHAR}");
        }
        
        if (record.getFlightdate() != null) {
            sql.SET("flightDate = #{flightdate,jdbcType=DATE}");
        }
        
        if (record.getFlightdeptimeplandate() != null) {
            sql.SET("flightDeptimePlanDate = #{flightdeptimeplandate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getServicedate() != null) {
            sql.SET("serviceDate = #{servicedate,jdbcType=DATE}");
        }
        
        if (record.getServicetime() != null) {
            sql.SET("serviceTime = #{servicetime,jdbcType=TIME}");
        }
        
        if (record.getAirport() != null) {
            sql.SET("airport = #{airport,jdbcType=VARCHAR}");
        }
        
        if (record.getTerminal() != null) {
            sql.SET("terminal = #{terminal,jdbcType=VARCHAR}");
        }
        
        if (record.getDeparture() != null) {
            sql.SET("departure = #{departure,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptlocation() != null) {
            sql.SET("deptLocation = #{deptlocation,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptenaddress() != null) {
            sql.SET("deptEnAddress = #{deptenaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getDestination() != null) {
            sql.SET("destination = #{destination,jdbcType=VARCHAR}");
        }
        
        if (record.getDestlocation() != null) {
            sql.SET("destLocation = #{destlocation,jdbcType=VARCHAR}");
        }
        
        if (record.getDetailaddress() != null) {
            sql.SET("detailAddress = #{detailaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getDestmobile() != null) {
            sql.SET("destMobile = #{destmobile,jdbcType=VARCHAR}");
        }
        
        if (record.getDestenaddress() != null) {
            sql.SET("destEnAddress = #{destenaddress,jdbcType=VARCHAR}");
        }
        
        if (record.getIsarrivalvisa() != null) {
            sql.SET("isArrivalVisa = #{isarrivalvisa,jdbcType=INTEGER}");
        }
        
        if (record.getDuration() != null) {
            sql.SET("duration = #{duration,jdbcType=INTEGER}");
        }
        
        if (record.getAdultnum() != null) {
            sql.SET("adultNum = #{adultnum,jdbcType=TINYINT}");
        }
        
        if (record.getChildnum() != null) {
            sql.SET("childNum = #{childnum,jdbcType=TINYINT}");
        }
        
        if (record.getChildseat() != null) {
            sql.SET("childSeat = #{childseat,jdbcType=VARCHAR}");
        }
        
        if (record.getBrandsign() != null) {
            sql.SET("brandSign = #{brandsign,jdbcType=VARCHAR}");
        }
        
        if (record.getSeatcategory() != null) {
            sql.SET("seatCategory = #{seatcategory,jdbcType=TINYINT}");
        }
        
        if (record.getType() != null) {
            sql.SET("type = #{type,jdbcType=INTEGER}");
        }
        
        if (record.getDistance() != null) {
            sql.SET("distance = #{distance,jdbcType=DECIMAL}");
        }
        
        if (record.getPrice() != null) {
            sql.SET("price = #{price,jdbcType=INTEGER}");
        }
        
        if (record.getClientprice() != null) {
            sql.SET("clientPrice = #{clientprice,jdbcType=INTEGER}");
        }
        
        if (record.getGuideprice() != null) {
            sql.SET("guidePrice = #{guideprice,jdbcType=INTEGER}");
        }
        
        if (record.getUsername() != null) {
            sql.SET("username = #{username,jdbcType=VARCHAR}");
        }
        
        if (record.getAreacode() != null) {
            sql.SET("areaCode = #{areacode,jdbcType=VARCHAR}");
        }
        
        if (record.getUsermobile() != null) {
            sql.SET("usermobile = #{usermobile,jdbcType=VARCHAR}");
        }
        
        if (record.getUsermobile1() != null) {
            sql.SET("usermobile1 = #{usermobile1,jdbcType=VARCHAR}");
        }
        
        if (record.getUsermobile2() != null) {
            sql.SET("usermobile2 = #{usermobile2,jdbcType=VARCHAR}");
        }
        
        if (record.getUseremail() != null) {
            sql.SET("useremail = #{useremail,jdbcType=VARCHAR}");
        }
        
        if (record.getUsercomment() != null) {
            sql.SET("usercomment = #{usercomment,jdbcType=VARCHAR}");
        }
        
        if (record.getUsercontact() != null) {
            sql.SET("usercontact = #{usercontact,jdbcType=VARCHAR}");
        }
        
        if (record.getGuideid() != null) {
            sql.SET("guideId = #{guideid,jdbcType=INTEGER}");
        }
        
        if (record.getClienttype() != null) {
            sql.SET("clientType = #{clienttype,jdbcType=TINYINT}");
        }
        
        if (record.getClientid() != null) {
            sql.SET("clientId = #{clientid,jdbcType=VARCHAR}");
        }
        
        if (record.getUserpassportid() != null) {
            sql.SET("userpassportId = #{userpassportid,jdbcType=VARCHAR}");
        }
        
        if (record.getAdminid() != null) {
            sql.SET("adminId = #{adminid,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=INTEGER}");
        }
        
        if (record.getRegisterflightid() != null) {
            sql.SET("registerFlightId = #{registerflightid,jdbcType=VARCHAR}");
        }
        
        if (record.getGuidecommentstatus() != null) {
            sql.SET("guideCommentStatus = #{guidecommentstatus,jdbcType=INTEGER}");
        }
        
        if (record.getUsercommentstatus() != null) {
            sql.SET("userCommentStatus = #{usercommentstatus,jdbcType=INTEGER}");
        }
        
        if (record.getDealordertime() != null) {
            sql.SET("dealOrderTime = #{dealordertime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedAt() != null) {
            sql.SET("updated_at = #{updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDeletedAt() != null) {
            sql.SET("deleted_at = #{deletedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreatedAt() != null) {
            sql.SET("created_at = #{createdAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDep() != null) {
            sql.SET("dep = #{dep,jdbcType=VARCHAR}");
        }
        
        if (record.getArr() != null) {
            sql.SET("arr = #{arr,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("orderId = #{orderid,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, FinalOrderPickupCriteria example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}