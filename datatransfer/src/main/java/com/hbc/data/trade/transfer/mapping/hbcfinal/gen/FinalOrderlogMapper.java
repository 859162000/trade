package com.hbc.data.trade.transfer.mapping.hbcfinal.gen;

import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderlog;
import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderlogCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalOrderlogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderlogSqlProvider.class, method="countByExample")
    int countByExample(FinalOrderlogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalOrderlogSqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalOrderlogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `orderlog`",
        "where orderLogId = #{orderlogid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String orderlogid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `orderlog` (orderLogId, orderId, ",
        "guideId, guideName, ",
        "type, sysType, content, ",
        "comment, value, ",
        "opUserId, opUserName, ",
        "updated_at, created_at)",
        "values (#{orderlogid,jdbcType=VARCHAR}, #{orderid,jdbcType=VARCHAR}, ",
        "#{guideid,jdbcType=INTEGER}, #{guidename,jdbcType=VARCHAR}, ",
        "#{type,jdbcType=INTEGER}, #{systype,jdbcType=TINYINT}, #{content,jdbcType=VARCHAR}, ",
        "#{comment,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, ",
        "#{opuserid,jdbcType=VARCHAR}, #{opusername,jdbcType=VARCHAR}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(FinalOrderlog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalOrderlogSqlProvider.class, method="insertSelective")
    int insertSelective(FinalOrderlog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderlogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderLogId", property="orderlogid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="guideName", property="guidename", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="sysType", property="systype", jdbcType=JdbcType.TINYINT),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="value", property="value", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserId", property="opuserid", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserName", property="opusername", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalOrderlog> selectByExampleWithRowbounds(FinalOrderlogCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderlogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderLogId", property="orderlogid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="guideName", property="guidename", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="sysType", property="systype", jdbcType=JdbcType.TINYINT),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="value", property="value", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserId", property="opuserid", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserName", property="opusername", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalOrderlog> selectByExample(FinalOrderlogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "orderLogId, orderId, guideId, guideName, type, sysType, content, comment, value, ",
        "opUserId, opUserName, updated_at, created_at",
        "from `orderlog`",
        "where orderLogId = #{orderlogid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="orderLogId", property="orderlogid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="guideName", property="guidename", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="sysType", property="systype", jdbcType=JdbcType.TINYINT),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="value", property="value", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserId", property="opuserid", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserName", property="opusername", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    FinalOrderlog selectByPrimaryKey(String orderlogid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderlogSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalOrderlog record, @Param("example") FinalOrderlogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderlogSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalOrderlog record, @Param("example") FinalOrderlogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderlogSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalOrderlog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderlog`
     *
     * @mbggenerated
     */
    @Update({
        "update `orderlog`",
        "set orderId = #{orderid,jdbcType=VARCHAR},",
          "guideId = #{guideid,jdbcType=INTEGER},",
          "guideName = #{guidename,jdbcType=VARCHAR},",
          "type = #{type,jdbcType=INTEGER},",
          "sysType = #{systype,jdbcType=TINYINT},",
          "content = #{content,jdbcType=VARCHAR},",
          "comment = #{comment,jdbcType=VARCHAR},",
          "value = #{value,jdbcType=VARCHAR},",
          "opUserId = #{opuserid,jdbcType=VARCHAR},",
          "opUserName = #{opusername,jdbcType=VARCHAR},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where orderLogId = #{orderlogid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(FinalOrderlog record);
}