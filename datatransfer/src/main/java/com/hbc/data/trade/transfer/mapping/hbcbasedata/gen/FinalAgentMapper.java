package com.hbc.data.trade.transfer.mapping.hbcbasedata.gen;

import com.hbc.data.trade.transfer.mapping.hbcbasedata.gen.bean.FinalAgent;
import com.hbc.data.trade.transfer.mapping.hbcbasedata.gen.bean.FinalAgentCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalAgentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalAgentSqlProvider.class, method="countByExample")
    int countByExample(FinalAgentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalAgentSqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalAgentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `agent`",
        "where agentId = #{agentid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer agentid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `agent` (agentId, agentName, ",
        "agentAdminId, agentKey, ",
        "token, epwd, province, ",
        "city, county, industry, ",
        "bizType, address, ",
        "tel, contactName, ",
        "contactMobile, comment, ",
        "status, updated_at, ",
        "created_at)",
        "values (#{agentid,jdbcType=INTEGER}, #{agentname,jdbcType=VARCHAR}, ",
        "#{agentadminid,jdbcType=CHAR}, #{agentkey,jdbcType=VARCHAR}, ",
        "#{token,jdbcType=VARCHAR}, #{epwd,jdbcType=VARCHAR}, #{province,jdbcType=INTEGER}, ",
        "#{city,jdbcType=INTEGER}, #{county,jdbcType=INTEGER}, #{industry,jdbcType=TINYINT}, ",
        "#{biztype,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, ",
        "#{tel,jdbcType=VARCHAR}, #{contactname,jdbcType=VARCHAR}, ",
        "#{contactmobile,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP}, ",
        "#{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(FinalAgent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalAgentSqlProvider.class, method="insertSelective")
    int insertSelective(FinalAgent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalAgentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="agentId", property="agentid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="agentName", property="agentname", jdbcType=JdbcType.VARCHAR),
        @Result(column="agentAdminId", property="agentadminid", jdbcType=JdbcType.CHAR),
        @Result(column="agentKey", property="agentkey", jdbcType=JdbcType.VARCHAR),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR),
        @Result(column="epwd", property="epwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.INTEGER),
        @Result(column="city", property="city", jdbcType=JdbcType.INTEGER),
        @Result(column="county", property="county", jdbcType=JdbcType.INTEGER),
        @Result(column="industry", property="industry", jdbcType=JdbcType.TINYINT),
        @Result(column="bizType", property="biztype", jdbcType=JdbcType.INTEGER),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="tel", property="tel", jdbcType=JdbcType.VARCHAR),
        @Result(column="contactName", property="contactname", jdbcType=JdbcType.VARCHAR),
        @Result(column="contactMobile", property="contactmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalAgent> selectByExampleWithRowbounds(FinalAgentCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalAgentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="agentId", property="agentid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="agentName", property="agentname", jdbcType=JdbcType.VARCHAR),
        @Result(column="agentAdminId", property="agentadminid", jdbcType=JdbcType.CHAR),
        @Result(column="agentKey", property="agentkey", jdbcType=JdbcType.VARCHAR),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR),
        @Result(column="epwd", property="epwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.INTEGER),
        @Result(column="city", property="city", jdbcType=JdbcType.INTEGER),
        @Result(column="county", property="county", jdbcType=JdbcType.INTEGER),
        @Result(column="industry", property="industry", jdbcType=JdbcType.TINYINT),
        @Result(column="bizType", property="biztype", jdbcType=JdbcType.INTEGER),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="tel", property="tel", jdbcType=JdbcType.VARCHAR),
        @Result(column="contactName", property="contactname", jdbcType=JdbcType.VARCHAR),
        @Result(column="contactMobile", property="contactmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalAgent> selectByExample(FinalAgentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "agentId, agentName, agentAdminId, agentKey, token, epwd, province, city, county, ",
        "industry, bizType, address, tel, contactName, contactMobile, comment, status, ",
        "updated_at, created_at",
        "from `agent`",
        "where agentId = #{agentid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="agentId", property="agentid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="agentName", property="agentname", jdbcType=JdbcType.VARCHAR),
        @Result(column="agentAdminId", property="agentadminid", jdbcType=JdbcType.CHAR),
        @Result(column="agentKey", property="agentkey", jdbcType=JdbcType.VARCHAR),
        @Result(column="token", property="token", jdbcType=JdbcType.VARCHAR),
        @Result(column="epwd", property="epwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.INTEGER),
        @Result(column="city", property="city", jdbcType=JdbcType.INTEGER),
        @Result(column="county", property="county", jdbcType=JdbcType.INTEGER),
        @Result(column="industry", property="industry", jdbcType=JdbcType.TINYINT),
        @Result(column="bizType", property="biztype", jdbcType=JdbcType.INTEGER),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="tel", property="tel", jdbcType=JdbcType.VARCHAR),
        @Result(column="contactName", property="contactname", jdbcType=JdbcType.VARCHAR),
        @Result(column="contactMobile", property="contactmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="comment", property="comment", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    FinalAgent selectByPrimaryKey(Integer agentid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalAgentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalAgent record, @Param("example") FinalAgentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalAgentSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalAgent record, @Param("example") FinalAgentCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalAgentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalAgent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agent`
     *
     * @mbggenerated
     */
    @Update({
        "update `agent`",
        "set agentName = #{agentname,jdbcType=VARCHAR},",
          "agentAdminId = #{agentadminid,jdbcType=CHAR},",
          "agentKey = #{agentkey,jdbcType=VARCHAR},",
          "token = #{token,jdbcType=VARCHAR},",
          "epwd = #{epwd,jdbcType=VARCHAR},",
          "province = #{province,jdbcType=INTEGER},",
          "city = #{city,jdbcType=INTEGER},",
          "county = #{county,jdbcType=INTEGER},",
          "industry = #{industry,jdbcType=TINYINT},",
          "bizType = #{biztype,jdbcType=INTEGER},",
          "address = #{address,jdbcType=VARCHAR},",
          "tel = #{tel,jdbcType=VARCHAR},",
          "contactName = #{contactname,jdbcType=VARCHAR},",
          "contactMobile = #{contactmobile,jdbcType=VARCHAR},",
          "comment = #{comment,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=INTEGER},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where agentId = #{agentid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(FinalAgent record);
}