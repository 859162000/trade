package com.hbc.data.trade.transfer.mapping.hbcfinal.gen;

import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderOptimization;
import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderOptimizationCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalOrderOptimizationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderOptimizationSqlProvider.class, method="countByExample")
    int countByExample(FinalOrderOptimizationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalOrderOptimizationSqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalOrderOptimizationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `orderoptimization`",
        "where orderOptimizationId = #{orderoptimizationid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String orderoptimizationid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `orderoptimization` (orderOptimizationId, optimizationOrderId, ",
        "clientPrice, price, ",
        "guidePrice, matchOrderId, ",
        "matchOrderType, matchGuideId, ",
        "matchOrderServiceDate, isMatch, ",
        "address, updated_at, ",
        "created_at)",
        "values (#{orderoptimizationid,jdbcType=VARCHAR}, #{optimizationorderid,jdbcType=VARCHAR}, ",
        "#{clientprice,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, ",
        "#{guideprice,jdbcType=INTEGER}, #{matchorderid,jdbcType=VARCHAR}, ",
        "#{matchordertype,jdbcType=INTEGER}, #{matchguideid,jdbcType=INTEGER}, ",
        "#{matchorderservicedate,jdbcType=VARCHAR}, #{ismatch,jdbcType=INTEGER}, ",
        "#{address,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}, ",
        "#{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(FinalOrderOptimization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalOrderOptimizationSqlProvider.class, method="insertSelective")
    int insertSelective(FinalOrderOptimization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderOptimizationSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderOptimizationId", property="orderoptimizationid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="optimizationOrderId", property="optimizationorderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="matchOrderId", property="matchorderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="matchOrderType", property="matchordertype", jdbcType=JdbcType.INTEGER),
        @Result(column="matchGuideId", property="matchguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="matchOrderServiceDate", property="matchorderservicedate", jdbcType=JdbcType.VARCHAR),
        @Result(column="isMatch", property="ismatch", jdbcType=JdbcType.INTEGER),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalOrderOptimization> selectByExampleWithRowbounds(FinalOrderOptimizationCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderOptimizationSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderOptimizationId", property="orderoptimizationid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="optimizationOrderId", property="optimizationorderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="matchOrderId", property="matchorderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="matchOrderType", property="matchordertype", jdbcType=JdbcType.INTEGER),
        @Result(column="matchGuideId", property="matchguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="matchOrderServiceDate", property="matchorderservicedate", jdbcType=JdbcType.VARCHAR),
        @Result(column="isMatch", property="ismatch", jdbcType=JdbcType.INTEGER),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalOrderOptimization> selectByExample(FinalOrderOptimizationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "orderOptimizationId, optimizationOrderId, clientPrice, price, guidePrice, matchOrderId, ",
        "matchOrderType, matchGuideId, matchOrderServiceDate, isMatch, address, updated_at, ",
        "created_at",
        "from `orderoptimization`",
        "where orderOptimizationId = #{orderoptimizationid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="orderOptimizationId", property="orderoptimizationid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="optimizationOrderId", property="optimizationorderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="matchOrderId", property="matchorderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="matchOrderType", property="matchordertype", jdbcType=JdbcType.INTEGER),
        @Result(column="matchGuideId", property="matchguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="matchOrderServiceDate", property="matchorderservicedate", jdbcType=JdbcType.VARCHAR),
        @Result(column="isMatch", property="ismatch", jdbcType=JdbcType.INTEGER),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    FinalOrderOptimization selectByPrimaryKey(String orderoptimizationid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderOptimizationSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalOrderOptimization record, @Param("example") FinalOrderOptimizationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderOptimizationSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalOrderOptimization record, @Param("example") FinalOrderOptimizationCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderOptimizationSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalOrderOptimization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderoptimization`
     *
     * @mbggenerated
     */
    @Update({
        "update `orderoptimization`",
        "set optimizationOrderId = #{optimizationorderid,jdbcType=VARCHAR},",
          "clientPrice = #{clientprice,jdbcType=INTEGER},",
          "price = #{price,jdbcType=INTEGER},",
          "guidePrice = #{guideprice,jdbcType=INTEGER},",
          "matchOrderId = #{matchorderid,jdbcType=VARCHAR},",
          "matchOrderType = #{matchordertype,jdbcType=INTEGER},",
          "matchGuideId = #{matchguideid,jdbcType=INTEGER},",
          "matchOrderServiceDate = #{matchorderservicedate,jdbcType=VARCHAR},",
          "isMatch = #{ismatch,jdbcType=INTEGER},",
          "address = #{address,jdbcType=VARCHAR},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where orderOptimizationId = #{orderoptimizationid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(FinalOrderOptimization record);
}