package com.hbc.data.trade.transfer.mapping.hbcfund.gen;

import com.hbc.data.trade.transfer.mapping.hbcfund.gen.bean.FinalAgencyAccount;
import com.hbc.data.trade.transfer.mapping.hbcfund.gen.bean.FinalAgencyAccountCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalAgencyAccountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalAgencyAccountSqlProvider.class, method="countByExample")
    int countByExample(FinalAgencyAccountCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalAgencyAccountSqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalAgencyAccountCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `agencyaccount`",
        "where agencyId = #{agencyid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer agencyid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `agencyaccount` (agencyId, total, ",
        "activePrice, depositPrice, ",
        "currentPrice, timer, ",
        "updated_at, created_at)",
        "values (#{agencyid,jdbcType=INTEGER}, #{total,jdbcType=INTEGER}, ",
        "#{activeprice,jdbcType=INTEGER}, #{depositprice,jdbcType=INTEGER}, ",
        "#{currentprice,jdbcType=INTEGER}, #{timer,jdbcType=TIMESTAMP}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(FinalAgencyAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalAgencyAccountSqlProvider.class, method="insertSelective")
    int insertSelective(FinalAgencyAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalAgencyAccountSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="agencyId", property="agencyid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="total", property="total", jdbcType=JdbcType.INTEGER),
        @Result(column="activePrice", property="activeprice", jdbcType=JdbcType.INTEGER),
        @Result(column="depositPrice", property="depositprice", jdbcType=JdbcType.INTEGER),
        @Result(column="currentPrice", property="currentprice", jdbcType=JdbcType.INTEGER),
        @Result(column="timer", property="timer", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalAgencyAccount> selectByExampleWithRowbounds(FinalAgencyAccountCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalAgencyAccountSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="agencyId", property="agencyid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="total", property="total", jdbcType=JdbcType.INTEGER),
        @Result(column="activePrice", property="activeprice", jdbcType=JdbcType.INTEGER),
        @Result(column="depositPrice", property="depositprice", jdbcType=JdbcType.INTEGER),
        @Result(column="currentPrice", property="currentprice", jdbcType=JdbcType.INTEGER),
        @Result(column="timer", property="timer", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalAgencyAccount> selectByExample(FinalAgencyAccountCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "agencyId, total, activePrice, depositPrice, currentPrice, timer, updated_at, ",
        "created_at",
        "from `agencyaccount`",
        "where agencyId = #{agencyid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="agencyId", property="agencyid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="total", property="total", jdbcType=JdbcType.INTEGER),
        @Result(column="activePrice", property="activeprice", jdbcType=JdbcType.INTEGER),
        @Result(column="depositPrice", property="depositprice", jdbcType=JdbcType.INTEGER),
        @Result(column="currentPrice", property="currentprice", jdbcType=JdbcType.INTEGER),
        @Result(column="timer", property="timer", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    FinalAgencyAccount selectByPrimaryKey(Integer agencyid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalAgencyAccountSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalAgencyAccount record, @Param("example") FinalAgencyAccountCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalAgencyAccountSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalAgencyAccount record, @Param("example") FinalAgencyAccountCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalAgencyAccountSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalAgencyAccount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccount`
     *
     * @mbggenerated
     */
    @Update({
        "update `agencyaccount`",
        "set total = #{total,jdbcType=INTEGER},",
          "activePrice = #{activeprice,jdbcType=INTEGER},",
          "depositPrice = #{depositprice,jdbcType=INTEGER},",
          "currentPrice = #{currentprice,jdbcType=INTEGER},",
          "timer = #{timer,jdbcType=TIMESTAMP},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where agencyId = #{agencyid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(FinalAgencyAccount record);
}