package com.hbc.data.trade.transfer.mapping.hbcfinal.gen;

import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderDaily;
import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderDailyCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalOrderDailyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderDailySqlProvider.class, method="countByExample")
    int countByExample(FinalOrderDailyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalOrderDailySqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalOrderDailyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `orderdaily`",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String orderid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `orderdaily` (orderId, orderSN, ",
        "placeId, placeCityId, ",
        "cityName, terminalCityId, ",
        "terminalCityName, passByCityId, ",
        "serviceStartDate, serviceStartTime, ",
        "serviceEndDate, serviceAllDate, ",
        "serviceAllDateDisplay, localDay, ",
        "localFee, nonlocalFee, ",
        "nonlocalDay, emptyFee, ",
        "emptyday, departure, ",
        "deptMobile, deptLocation, ",
        "destination, detailAddress, ",
        "adultNum, childNum, ",
        "childSeat, seatCategory, ",
        "type, price, clientPrice, ",
        "guidePrice, journeycomment, ",
        "username, areaCode, ",
        "usermobile, usermobile1, ",
        "usermobile2, useremail, ",
        "usercomment, usercontact, ",
        "serviceType, guideId, ",
        "userGuideId, clientType, ",
        "clientId, userpassportId, ",
        "adminId, status, ",
        "guideCommentStatus, userCommentStatus, ",
        "dealOrderTime, updated_at, ",
        "deleted_at, created_at)",
        "values (#{orderid,jdbcType=VARCHAR}, #{ordersn,jdbcType=VARCHAR}, ",
        "#{placeid,jdbcType=INTEGER}, #{placecityid,jdbcType=INTEGER}, ",
        "#{cityname,jdbcType=VARCHAR}, #{terminalcityid,jdbcType=INTEGER}, ",
        "#{terminalcityname,jdbcType=VARCHAR}, #{passbycityid,jdbcType=VARCHAR}, ",
        "#{servicestartdate,jdbcType=DATE}, #{servicestarttime,jdbcType=TIME}, ",
        "#{serviceenddate,jdbcType=DATE}, #{servicealldate,jdbcType=VARCHAR}, ",
        "#{servicealldatedisplay,jdbcType=VARCHAR}, #{localday,jdbcType=INTEGER}, ",
        "#{localfee,jdbcType=INTEGER}, #{nonlocalfee,jdbcType=INTEGER}, ",
        "#{nonlocalday,jdbcType=INTEGER}, #{emptyfee,jdbcType=INTEGER}, ",
        "#{emptyday,jdbcType=DECIMAL}, #{departure,jdbcType=VARCHAR}, ",
        "#{deptmobile,jdbcType=VARCHAR}, #{deptlocation,jdbcType=VARCHAR}, ",
        "#{destination,jdbcType=VARCHAR}, #{detailaddress,jdbcType=VARCHAR}, ",
        "#{adultnum,jdbcType=TINYINT}, #{childnum,jdbcType=TINYINT}, ",
        "#{childseat,jdbcType=VARCHAR}, #{seatcategory,jdbcType=TINYINT}, ",
        "#{type,jdbcType=TINYINT}, #{price,jdbcType=INTEGER}, #{clientprice,jdbcType=INTEGER}, ",
        "#{guideprice,jdbcType=INTEGER}, #{journeycomment,jdbcType=VARCHAR}, ",
        "#{username,jdbcType=VARCHAR}, #{areacode,jdbcType=VARCHAR}, ",
        "#{usermobile,jdbcType=VARCHAR}, #{usermobile1,jdbcType=VARCHAR}, ",
        "#{usermobile2,jdbcType=VARCHAR}, #{useremail,jdbcType=VARCHAR}, ",
        "#{usercomment,jdbcType=VARCHAR}, #{usercontact,jdbcType=VARCHAR}, ",
        "#{servicetype,jdbcType=INTEGER}, #{guideid,jdbcType=INTEGER}, ",
        "#{userguideid,jdbcType=INTEGER}, #{clienttype,jdbcType=TINYINT}, ",
        "#{clientid,jdbcType=VARCHAR}, #{userpassportid,jdbcType=VARCHAR}, ",
        "#{adminid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, ",
        "#{guidecommentstatus,jdbcType=INTEGER}, #{usercommentstatus,jdbcType=INTEGER}, ",
        "#{dealordertime,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, ",
        "#{deletedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(FinalOrderDaily record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalOrderDailySqlProvider.class, method="insertSelective")
    int insertSelective(FinalOrderDaily record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderDailySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderSN", property="ordersn", jdbcType=JdbcType.VARCHAR),
        @Result(column="placeId", property="placeid", jdbcType=JdbcType.INTEGER),
        @Result(column="placeCityId", property="placecityid", jdbcType=JdbcType.INTEGER),
        @Result(column="cityName", property="cityname", jdbcType=JdbcType.VARCHAR),
        @Result(column="terminalCityId", property="terminalcityid", jdbcType=JdbcType.INTEGER),
        @Result(column="terminalCityName", property="terminalcityname", jdbcType=JdbcType.VARCHAR),
        @Result(column="passByCityId", property="passbycityid", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceStartDate", property="servicestartdate", jdbcType=JdbcType.DATE),
        @Result(column="serviceStartTime", property="servicestarttime", jdbcType=JdbcType.TIME),
        @Result(column="serviceEndDate", property="serviceenddate", jdbcType=JdbcType.DATE),
        @Result(column="serviceAllDate", property="servicealldate", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceAllDateDisplay", property="servicealldatedisplay", jdbcType=JdbcType.VARCHAR),
        @Result(column="localDay", property="localday", jdbcType=JdbcType.INTEGER),
        @Result(column="localFee", property="localfee", jdbcType=JdbcType.INTEGER),
        @Result(column="nonlocalFee", property="nonlocalfee", jdbcType=JdbcType.INTEGER),
        @Result(column="nonlocalDay", property="nonlocalday", jdbcType=JdbcType.INTEGER),
        @Result(column="emptyFee", property="emptyfee", jdbcType=JdbcType.INTEGER),
        @Result(column="emptyday", property="emptyday", jdbcType=JdbcType.DECIMAL),
        @Result(column="departure", property="departure", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptMobile", property="deptmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptLocation", property="deptlocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination", property="destination", jdbcType=JdbcType.VARCHAR),
        @Result(column="detailAddress", property="detailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="adultNum", property="adultnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childNum", property="childnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childSeat", property="childseat", jdbcType=JdbcType.VARCHAR),
        @Result(column="seatCategory", property="seatcategory", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.TINYINT),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="journeycomment", property="journeycomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="areaCode", property="areacode", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile", property="usermobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile1", property="usermobile1", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile2", property="usermobile2", jdbcType=JdbcType.VARCHAR),
        @Result(column="useremail", property="useremail", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercomment", property="usercomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercontact", property="usercontact", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceType", property="servicetype", jdbcType=JdbcType.INTEGER),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="userGuideId", property="userguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.TINYINT),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userpassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="adminId", property="adminid", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="guideCommentStatus", property="guidecommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="userCommentStatus", property="usercommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="dealOrderTime", property="dealordertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalOrderDaily> selectByExampleWithRowbounds(FinalOrderDailyCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderDailySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderSN", property="ordersn", jdbcType=JdbcType.VARCHAR),
        @Result(column="placeId", property="placeid", jdbcType=JdbcType.INTEGER),
        @Result(column="placeCityId", property="placecityid", jdbcType=JdbcType.INTEGER),
        @Result(column="cityName", property="cityname", jdbcType=JdbcType.VARCHAR),
        @Result(column="terminalCityId", property="terminalcityid", jdbcType=JdbcType.INTEGER),
        @Result(column="terminalCityName", property="terminalcityname", jdbcType=JdbcType.VARCHAR),
        @Result(column="passByCityId", property="passbycityid", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceStartDate", property="servicestartdate", jdbcType=JdbcType.DATE),
        @Result(column="serviceStartTime", property="servicestarttime", jdbcType=JdbcType.TIME),
        @Result(column="serviceEndDate", property="serviceenddate", jdbcType=JdbcType.DATE),
        @Result(column="serviceAllDate", property="servicealldate", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceAllDateDisplay", property="servicealldatedisplay", jdbcType=JdbcType.VARCHAR),
        @Result(column="localDay", property="localday", jdbcType=JdbcType.INTEGER),
        @Result(column="localFee", property="localfee", jdbcType=JdbcType.INTEGER),
        @Result(column="nonlocalFee", property="nonlocalfee", jdbcType=JdbcType.INTEGER),
        @Result(column="nonlocalDay", property="nonlocalday", jdbcType=JdbcType.INTEGER),
        @Result(column="emptyFee", property="emptyfee", jdbcType=JdbcType.INTEGER),
        @Result(column="emptyday", property="emptyday", jdbcType=JdbcType.DECIMAL),
        @Result(column="departure", property="departure", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptMobile", property="deptmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptLocation", property="deptlocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination", property="destination", jdbcType=JdbcType.VARCHAR),
        @Result(column="detailAddress", property="detailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="adultNum", property="adultnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childNum", property="childnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childSeat", property="childseat", jdbcType=JdbcType.VARCHAR),
        @Result(column="seatCategory", property="seatcategory", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.TINYINT),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="journeycomment", property="journeycomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="areaCode", property="areacode", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile", property="usermobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile1", property="usermobile1", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile2", property="usermobile2", jdbcType=JdbcType.VARCHAR),
        @Result(column="useremail", property="useremail", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercomment", property="usercomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercontact", property="usercontact", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceType", property="servicetype", jdbcType=JdbcType.INTEGER),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="userGuideId", property="userguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.TINYINT),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userpassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="adminId", property="adminid", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="guideCommentStatus", property="guidecommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="userCommentStatus", property="usercommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="dealOrderTime", property="dealordertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalOrderDaily> selectByExample(FinalOrderDailyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "orderId, orderSN, placeId, placeCityId, cityName, terminalCityId, terminalCityName, ",
        "passByCityId, serviceStartDate, serviceStartTime, serviceEndDate, serviceAllDate, ",
        "serviceAllDateDisplay, localDay, localFee, nonlocalFee, nonlocalDay, emptyFee, ",
        "emptyday, departure, deptMobile, deptLocation, destination, detailAddress, adultNum, ",
        "childNum, childSeat, seatCategory, type, price, clientPrice, guidePrice, journeycomment, ",
        "username, areaCode, usermobile, usermobile1, usermobile2, useremail, usercomment, ",
        "usercontact, serviceType, guideId, userGuideId, clientType, clientId, userpassportId, ",
        "adminId, status, guideCommentStatus, userCommentStatus, dealOrderTime, updated_at, ",
        "deleted_at, created_at",
        "from `orderdaily`",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderSN", property="ordersn", jdbcType=JdbcType.VARCHAR),
        @Result(column="placeId", property="placeid", jdbcType=JdbcType.INTEGER),
        @Result(column="placeCityId", property="placecityid", jdbcType=JdbcType.INTEGER),
        @Result(column="cityName", property="cityname", jdbcType=JdbcType.VARCHAR),
        @Result(column="terminalCityId", property="terminalcityid", jdbcType=JdbcType.INTEGER),
        @Result(column="terminalCityName", property="terminalcityname", jdbcType=JdbcType.VARCHAR),
        @Result(column="passByCityId", property="passbycityid", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceStartDate", property="servicestartdate", jdbcType=JdbcType.DATE),
        @Result(column="serviceStartTime", property="servicestarttime", jdbcType=JdbcType.TIME),
        @Result(column="serviceEndDate", property="serviceenddate", jdbcType=JdbcType.DATE),
        @Result(column="serviceAllDate", property="servicealldate", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceAllDateDisplay", property="servicealldatedisplay", jdbcType=JdbcType.VARCHAR),
        @Result(column="localDay", property="localday", jdbcType=JdbcType.INTEGER),
        @Result(column="localFee", property="localfee", jdbcType=JdbcType.INTEGER),
        @Result(column="nonlocalFee", property="nonlocalfee", jdbcType=JdbcType.INTEGER),
        @Result(column="nonlocalDay", property="nonlocalday", jdbcType=JdbcType.INTEGER),
        @Result(column="emptyFee", property="emptyfee", jdbcType=JdbcType.INTEGER),
        @Result(column="emptyday", property="emptyday", jdbcType=JdbcType.DECIMAL),
        @Result(column="departure", property="departure", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptMobile", property="deptmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptLocation", property="deptlocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination", property="destination", jdbcType=JdbcType.VARCHAR),
        @Result(column="detailAddress", property="detailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="adultNum", property="adultnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childNum", property="childnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childSeat", property="childseat", jdbcType=JdbcType.VARCHAR),
        @Result(column="seatCategory", property="seatcategory", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.TINYINT),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="journeycomment", property="journeycomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="areaCode", property="areacode", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile", property="usermobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile1", property="usermobile1", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile2", property="usermobile2", jdbcType=JdbcType.VARCHAR),
        @Result(column="useremail", property="useremail", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercomment", property="usercomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercontact", property="usercontact", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceType", property="servicetype", jdbcType=JdbcType.INTEGER),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="userGuideId", property="userguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.TINYINT),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userpassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="adminId", property="adminid", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="guideCommentStatus", property="guidecommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="userCommentStatus", property="usercommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="dealOrderTime", property="dealordertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    FinalOrderDaily selectByPrimaryKey(String orderid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderDailySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalOrderDaily record, @Param("example") FinalOrderDailyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderDailySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalOrderDaily record, @Param("example") FinalOrderDailyCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderDailySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalOrderDaily record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderdaily`
     *
     * @mbggenerated
     */
    @Update({
        "update `orderdaily`",
        "set orderSN = #{ordersn,jdbcType=VARCHAR},",
          "placeId = #{placeid,jdbcType=INTEGER},",
          "placeCityId = #{placecityid,jdbcType=INTEGER},",
          "cityName = #{cityname,jdbcType=VARCHAR},",
          "terminalCityId = #{terminalcityid,jdbcType=INTEGER},",
          "terminalCityName = #{terminalcityname,jdbcType=VARCHAR},",
          "passByCityId = #{passbycityid,jdbcType=VARCHAR},",
          "serviceStartDate = #{servicestartdate,jdbcType=DATE},",
          "serviceStartTime = #{servicestarttime,jdbcType=TIME},",
          "serviceEndDate = #{serviceenddate,jdbcType=DATE},",
          "serviceAllDate = #{servicealldate,jdbcType=VARCHAR},",
          "serviceAllDateDisplay = #{servicealldatedisplay,jdbcType=VARCHAR},",
          "localDay = #{localday,jdbcType=INTEGER},",
          "localFee = #{localfee,jdbcType=INTEGER},",
          "nonlocalFee = #{nonlocalfee,jdbcType=INTEGER},",
          "nonlocalDay = #{nonlocalday,jdbcType=INTEGER},",
          "emptyFee = #{emptyfee,jdbcType=INTEGER},",
          "emptyday = #{emptyday,jdbcType=DECIMAL},",
          "departure = #{departure,jdbcType=VARCHAR},",
          "deptMobile = #{deptmobile,jdbcType=VARCHAR},",
          "deptLocation = #{deptlocation,jdbcType=VARCHAR},",
          "destination = #{destination,jdbcType=VARCHAR},",
          "detailAddress = #{detailaddress,jdbcType=VARCHAR},",
          "adultNum = #{adultnum,jdbcType=TINYINT},",
          "childNum = #{childnum,jdbcType=TINYINT},",
          "childSeat = #{childseat,jdbcType=VARCHAR},",
          "seatCategory = #{seatcategory,jdbcType=TINYINT},",
          "type = #{type,jdbcType=TINYINT},",
          "price = #{price,jdbcType=INTEGER},",
          "clientPrice = #{clientprice,jdbcType=INTEGER},",
          "guidePrice = #{guideprice,jdbcType=INTEGER},",
          "journeycomment = #{journeycomment,jdbcType=VARCHAR},",
          "username = #{username,jdbcType=VARCHAR},",
          "areaCode = #{areacode,jdbcType=VARCHAR},",
          "usermobile = #{usermobile,jdbcType=VARCHAR},",
          "usermobile1 = #{usermobile1,jdbcType=VARCHAR},",
          "usermobile2 = #{usermobile2,jdbcType=VARCHAR},",
          "useremail = #{useremail,jdbcType=VARCHAR},",
          "usercomment = #{usercomment,jdbcType=VARCHAR},",
          "usercontact = #{usercontact,jdbcType=VARCHAR},",
          "serviceType = #{servicetype,jdbcType=INTEGER},",
          "guideId = #{guideid,jdbcType=INTEGER},",
          "userGuideId = #{userguideid,jdbcType=INTEGER},",
          "clientType = #{clienttype,jdbcType=TINYINT},",
          "clientId = #{clientid,jdbcType=VARCHAR},",
          "userpassportId = #{userpassportid,jdbcType=VARCHAR},",
          "adminId = #{adminid,jdbcType=INTEGER},",
          "status = #{status,jdbcType=INTEGER},",
          "guideCommentStatus = #{guidecommentstatus,jdbcType=INTEGER},",
          "userCommentStatus = #{usercommentstatus,jdbcType=INTEGER},",
          "dealOrderTime = #{dealordertime,jdbcType=TIMESTAMP},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "deleted_at = #{deletedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(FinalOrderDaily record);
}