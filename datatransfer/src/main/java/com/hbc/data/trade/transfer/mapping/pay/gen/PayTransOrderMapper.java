package com.hbc.data.trade.transfer.mapping.pay.gen;

import com.hbc.data.trade.transfer.mapping.pay.gen.bean.PayTransOrder;
import com.hbc.data.trade.transfer.mapping.pay.gen.bean.PayTransOrderCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface PayTransOrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @SelectProvider(type=PayTransOrderSqlProvider.class, method="countByExample")
    int countByExample(PayTransOrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=PayTransOrderSqlProvider.class, method="deleteByExample")
    int deleteByExample(PayTransOrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `pay_trans_order`",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `pay_trans_order` (id, user_id, ",
        "account_id, channel, ",
        "gateway, mer_trans_no, ",
        "ser_trans_no, busi_trans_no, ",
        "batch_no, person_account, ",
        "person_name, mobile_no, ",
        "bank_code, trans_amount, ",
        "subject, body, create_time, ",
        "pay_time, ser_notify_time, ",
        "ser_notify_status, ser_notify_log, ",
        "callback_url, callback_status, ",
        "callback_count, callback_time)",
        "values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{accountId,jdbcType=VARCHAR}, #{channel,jdbcType=INTEGER}, ",
        "#{gateway,jdbcType=OTHER}, #{merTransNo,jdbcType=VARCHAR}, ",
        "#{serTransNo,jdbcType=VARCHAR}, #{busiTransNo,jdbcType=VARCHAR}, ",
        "#{batchNo,jdbcType=VARCHAR}, #{personAccount,jdbcType=VARCHAR}, ",
        "#{personName,jdbcType=VARCHAR}, #{mobileNo,jdbcType=CHAR}, ",
        "#{bankCode,jdbcType=VARCHAR}, #{transAmount,jdbcType=INTEGER}, ",
        "#{subject,jdbcType=VARCHAR}, #{body,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, ",
        "#{payTime,jdbcType=INTEGER}, #{serNotifyTime,jdbcType=INTEGER}, ",
        "#{serNotifyStatus,jdbcType=OTHER}, #{serNotifyLog,jdbcType=VARCHAR}, ",
        "#{callbackUrl,jdbcType=VARCHAR}, #{callbackStatus,jdbcType=OTHER}, ",
        "#{callbackCount,jdbcType=OTHER}, #{callbackTime,jdbcType=INTEGER})"
    })
    int insert(PayTransOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @InsertProvider(type=PayTransOrderSqlProvider.class, method="insertSelective")
    int insertSelective(PayTransOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @SelectProvider(type=PayTransOrderSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_id", property="accountId", jdbcType=JdbcType.VARCHAR),
        @Result(column="channel", property="channel", jdbcType=JdbcType.INTEGER),
        @Result(column="gateway", property="gateway", jdbcType=JdbcType.OTHER),
        @Result(column="mer_trans_no", property="merTransNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="ser_trans_no", property="serTransNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="busi_trans_no", property="busiTransNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="batch_no", property="batchNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="person_account", property="personAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="person_name", property="personName", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile_no", property="mobileNo", jdbcType=JdbcType.CHAR),
        @Result(column="bank_code", property="bankCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="trans_amount", property="transAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="subject", property="subject", jdbcType=JdbcType.VARCHAR),
        @Result(column="body", property="body", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_time", property="serNotifyTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_status", property="serNotifyStatus", jdbcType=JdbcType.OTHER),
        @Result(column="ser_notify_log", property="serNotifyLog", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_url", property="callbackUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_status", property="callbackStatus", jdbcType=JdbcType.OTHER),
        @Result(column="callback_count", property="callbackCount", jdbcType=JdbcType.OTHER),
        @Result(column="callback_time", property="callbackTime", jdbcType=JdbcType.INTEGER)
    })
    List<PayTransOrder> selectByExampleWithRowbounds(PayTransOrderCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @SelectProvider(type=PayTransOrderSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_id", property="accountId", jdbcType=JdbcType.VARCHAR),
        @Result(column="channel", property="channel", jdbcType=JdbcType.INTEGER),
        @Result(column="gateway", property="gateway", jdbcType=JdbcType.OTHER),
        @Result(column="mer_trans_no", property="merTransNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="ser_trans_no", property="serTransNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="busi_trans_no", property="busiTransNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="batch_no", property="batchNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="person_account", property="personAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="person_name", property="personName", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile_no", property="mobileNo", jdbcType=JdbcType.CHAR),
        @Result(column="bank_code", property="bankCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="trans_amount", property="transAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="subject", property="subject", jdbcType=JdbcType.VARCHAR),
        @Result(column="body", property="body", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_time", property="serNotifyTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_status", property="serNotifyStatus", jdbcType=JdbcType.OTHER),
        @Result(column="ser_notify_log", property="serNotifyLog", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_url", property="callbackUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_status", property="callbackStatus", jdbcType=JdbcType.OTHER),
        @Result(column="callback_count", property="callbackCount", jdbcType=JdbcType.OTHER),
        @Result(column="callback_time", property="callbackTime", jdbcType=JdbcType.INTEGER)
    })
    List<PayTransOrder> selectByExample(PayTransOrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, user_id, account_id, channel, gateway, mer_trans_no, ser_trans_no, busi_trans_no, ",
        "batch_no, person_account, person_name, mobile_no, bank_code, trans_amount, subject, ",
        "body, create_time, pay_time, ser_notify_time, ser_notify_status, ser_notify_log, ",
        "callback_url, callback_status, callback_count, callback_time",
        "from `pay_trans_order`",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_id", property="accountId", jdbcType=JdbcType.VARCHAR),
        @Result(column="channel", property="channel", jdbcType=JdbcType.INTEGER),
        @Result(column="gateway", property="gateway", jdbcType=JdbcType.OTHER),
        @Result(column="mer_trans_no", property="merTransNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="ser_trans_no", property="serTransNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="busi_trans_no", property="busiTransNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="batch_no", property="batchNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="person_account", property="personAccount", jdbcType=JdbcType.VARCHAR),
        @Result(column="person_name", property="personName", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobile_no", property="mobileNo", jdbcType=JdbcType.CHAR),
        @Result(column="bank_code", property="bankCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="trans_amount", property="transAmount", jdbcType=JdbcType.INTEGER),
        @Result(column="subject", property="subject", jdbcType=JdbcType.VARCHAR),
        @Result(column="body", property="body", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.INTEGER),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_time", property="serNotifyTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_status", property="serNotifyStatus", jdbcType=JdbcType.OTHER),
        @Result(column="ser_notify_log", property="serNotifyLog", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_url", property="callbackUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_status", property="callbackStatus", jdbcType=JdbcType.OTHER),
        @Result(column="callback_count", property="callbackCount", jdbcType=JdbcType.OTHER),
        @Result(column="callback_time", property="callbackTime", jdbcType=JdbcType.INTEGER)
    })
    PayTransOrder selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=PayTransOrderSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") PayTransOrder record, @Param("example") PayTransOrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=PayTransOrderSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") PayTransOrder record, @Param("example") PayTransOrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=PayTransOrderSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(PayTransOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_trans_order`
     *
     * @mbggenerated
     */
    @Update({
        "update `pay_trans_order`",
        "set user_id = #{userId,jdbcType=VARCHAR},",
          "account_id = #{accountId,jdbcType=VARCHAR},",
          "channel = #{channel,jdbcType=INTEGER},",
          "gateway = #{gateway,jdbcType=OTHER},",
          "mer_trans_no = #{merTransNo,jdbcType=VARCHAR},",
          "ser_trans_no = #{serTransNo,jdbcType=VARCHAR},",
          "busi_trans_no = #{busiTransNo,jdbcType=VARCHAR},",
          "batch_no = #{batchNo,jdbcType=VARCHAR},",
          "person_account = #{personAccount,jdbcType=VARCHAR},",
          "person_name = #{personName,jdbcType=VARCHAR},",
          "mobile_no = #{mobileNo,jdbcType=CHAR},",
          "bank_code = #{bankCode,jdbcType=VARCHAR},",
          "trans_amount = #{transAmount,jdbcType=INTEGER},",
          "subject = #{subject,jdbcType=VARCHAR},",
          "body = #{body,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=INTEGER},",
          "pay_time = #{payTime,jdbcType=INTEGER},",
          "ser_notify_time = #{serNotifyTime,jdbcType=INTEGER},",
          "ser_notify_status = #{serNotifyStatus,jdbcType=OTHER},",
          "ser_notify_log = #{serNotifyLog,jdbcType=VARCHAR},",
          "callback_url = #{callbackUrl,jdbcType=VARCHAR},",
          "callback_status = #{callbackStatus,jdbcType=OTHER},",
          "callback_count = #{callbackCount,jdbcType=OTHER},",
          "callback_time = #{callbackTime,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(PayTransOrder record);
}