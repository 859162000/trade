package com.hbc.data.trade.transfer.mapping.pay.gen;

import com.hbc.data.trade.transfer.mapping.pay.gen.bean.PayRefundOrder;
import com.hbc.data.trade.transfer.mapping.pay.gen.bean.PayRefundOrderCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface PayRefundOrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @SelectProvider(type=PayRefundOrderSqlProvider.class, method="countByExample")
    int countByExample(PayRefundOrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=PayRefundOrderSqlProvider.class, method="deleteByExample")
    int deleteByExample(PayRefundOrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `pay_refund_order`",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `pay_refund_order` (id, user_id, ",
        "account_id, channel, ",
        "gateway, recharge_id, ",
        "freeze_id, mer_refund_no, ",
        "ser_refund_no, busi_refund_no, ",
        "amount, subject, ",
        "body, create_time, ",
        "refund_time, ser_notify_time, ",
        "ser_notify_status, ser_notify_log, ",
        "callback_url, callback_status, ",
        "callback_count, callback_time, ",
        "seller_partner)",
        "values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, ",
        "#{accountId,jdbcType=VARCHAR}, #{channel,jdbcType=INTEGER}, ",
        "#{gateway,jdbcType=OTHER}, #{rechargeId,jdbcType=VARCHAR}, ",
        "#{freezeId,jdbcType=VARCHAR}, #{merRefundNo,jdbcType=VARCHAR}, ",
        "#{serRefundNo,jdbcType=VARCHAR}, #{busiRefundNo,jdbcType=VARCHAR}, ",
        "#{amount,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, ",
        "#{body,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, ",
        "#{refundTime,jdbcType=INTEGER}, #{serNotifyTime,jdbcType=INTEGER}, ",
        "#{serNotifyStatus,jdbcType=INTEGER}, #{serNotifyLog,jdbcType=VARCHAR}, ",
        "#{callbackUrl,jdbcType=VARCHAR}, #{callbackStatus,jdbcType=INTEGER}, ",
        "#{callbackCount,jdbcType=INTEGER}, #{callbackTime,jdbcType=INTEGER}, ",
        "#{sellerPartner,jdbcType=VARCHAR})"
    })
    int insert(PayRefundOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @InsertProvider(type=PayRefundOrderSqlProvider.class, method="insertSelective")
    int insertSelective(PayRefundOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @SelectProvider(type=PayRefundOrderSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_id", property="accountId", jdbcType=JdbcType.VARCHAR),
        @Result(column="channel", property="channel", jdbcType=JdbcType.INTEGER),
        @Result(column="gateway", property="gateway", jdbcType=JdbcType.OTHER),
        @Result(column="recharge_id", property="rechargeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="freeze_id", property="freezeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="mer_refund_no", property="merRefundNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="ser_refund_no", property="serRefundNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="busi_refund_no", property="busiRefundNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="amount", property="amount", jdbcType=JdbcType.INTEGER),
        @Result(column="subject", property="subject", jdbcType=JdbcType.VARCHAR),
        @Result(column="body", property="body", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.INTEGER),
        @Result(column="refund_time", property="refundTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_time", property="serNotifyTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_status", property="serNotifyStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_log", property="serNotifyLog", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_url", property="callbackUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_status", property="callbackStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="callback_count", property="callbackCount", jdbcType=JdbcType.INTEGER),
        @Result(column="callback_time", property="callbackTime", jdbcType=JdbcType.INTEGER),
        @Result(column="seller_partner", property="sellerPartner", jdbcType=JdbcType.VARCHAR)
    })
    List<PayRefundOrder> selectByExampleWithRowbounds(PayRefundOrderCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @SelectProvider(type=PayRefundOrderSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_id", property="accountId", jdbcType=JdbcType.VARCHAR),
        @Result(column="channel", property="channel", jdbcType=JdbcType.INTEGER),
        @Result(column="gateway", property="gateway", jdbcType=JdbcType.OTHER),
        @Result(column="recharge_id", property="rechargeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="freeze_id", property="freezeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="mer_refund_no", property="merRefundNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="ser_refund_no", property="serRefundNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="busi_refund_no", property="busiRefundNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="amount", property="amount", jdbcType=JdbcType.INTEGER),
        @Result(column="subject", property="subject", jdbcType=JdbcType.VARCHAR),
        @Result(column="body", property="body", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.INTEGER),
        @Result(column="refund_time", property="refundTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_time", property="serNotifyTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_status", property="serNotifyStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_log", property="serNotifyLog", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_url", property="callbackUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_status", property="callbackStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="callback_count", property="callbackCount", jdbcType=JdbcType.INTEGER),
        @Result(column="callback_time", property="callbackTime", jdbcType=JdbcType.INTEGER),
        @Result(column="seller_partner", property="sellerPartner", jdbcType=JdbcType.VARCHAR)
    })
    List<PayRefundOrder> selectByExample(PayRefundOrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, user_id, account_id, channel, gateway, recharge_id, freeze_id, mer_refund_no, ",
        "ser_refund_no, busi_refund_no, amount, subject, body, create_time, refund_time, ",
        "ser_notify_time, ser_notify_status, ser_notify_log, callback_url, callback_status, ",
        "callback_count, callback_time, seller_partner",
        "from `pay_refund_order`",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="account_id", property="accountId", jdbcType=JdbcType.VARCHAR),
        @Result(column="channel", property="channel", jdbcType=JdbcType.INTEGER),
        @Result(column="gateway", property="gateway", jdbcType=JdbcType.OTHER),
        @Result(column="recharge_id", property="rechargeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="freeze_id", property="freezeId", jdbcType=JdbcType.VARCHAR),
        @Result(column="mer_refund_no", property="merRefundNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="ser_refund_no", property="serRefundNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="busi_refund_no", property="busiRefundNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="amount", property="amount", jdbcType=JdbcType.INTEGER),
        @Result(column="subject", property="subject", jdbcType=JdbcType.VARCHAR),
        @Result(column="body", property="body", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.INTEGER),
        @Result(column="refund_time", property="refundTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_time", property="serNotifyTime", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_status", property="serNotifyStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="ser_notify_log", property="serNotifyLog", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_url", property="callbackUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="callback_status", property="callbackStatus", jdbcType=JdbcType.INTEGER),
        @Result(column="callback_count", property="callbackCount", jdbcType=JdbcType.INTEGER),
        @Result(column="callback_time", property="callbackTime", jdbcType=JdbcType.INTEGER),
        @Result(column="seller_partner", property="sellerPartner", jdbcType=JdbcType.VARCHAR)
    })
    PayRefundOrder selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=PayRefundOrderSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") PayRefundOrder record, @Param("example") PayRefundOrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=PayRefundOrderSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") PayRefundOrder record, @Param("example") PayRefundOrderCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=PayRefundOrderSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(PayRefundOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `pay_refund_order`
     *
     * @mbggenerated
     */
    @Update({
        "update `pay_refund_order`",
        "set user_id = #{userId,jdbcType=VARCHAR},",
          "account_id = #{accountId,jdbcType=VARCHAR},",
          "channel = #{channel,jdbcType=INTEGER},",
          "gateway = #{gateway,jdbcType=OTHER},",
          "recharge_id = #{rechargeId,jdbcType=VARCHAR},",
          "freeze_id = #{freezeId,jdbcType=VARCHAR},",
          "mer_refund_no = #{merRefundNo,jdbcType=VARCHAR},",
          "ser_refund_no = #{serRefundNo,jdbcType=VARCHAR},",
          "busi_refund_no = #{busiRefundNo,jdbcType=VARCHAR},",
          "amount = #{amount,jdbcType=INTEGER},",
          "subject = #{subject,jdbcType=VARCHAR},",
          "body = #{body,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=INTEGER},",
          "refund_time = #{refundTime,jdbcType=INTEGER},",
          "ser_notify_time = #{serNotifyTime,jdbcType=INTEGER},",
          "ser_notify_status = #{serNotifyStatus,jdbcType=INTEGER},",
          "ser_notify_log = #{serNotifyLog,jdbcType=VARCHAR},",
          "callback_url = #{callbackUrl,jdbcType=VARCHAR},",
          "callback_status = #{callbackStatus,jdbcType=INTEGER},",
          "callback_count = #{callbackCount,jdbcType=INTEGER},",
          "callback_time = #{callbackTime,jdbcType=INTEGER},",
          "seller_partner = #{sellerPartner,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(PayRefundOrder record);
}