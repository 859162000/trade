package com.hbc.data.trade.transfer.mapping.hbcfinal.gen;

import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderAlarm;
import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderAlarmCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalOrderAlarmMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderAlarmSqlProvider.class, method="countByExample")
    int countByExample(FinalOrderAlarmCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalOrderAlarmSqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalOrderAlarmCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `orderalarm`",
        "where orderAlarmId = #{orderalarmid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer orderalarmid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `orderalarm` (orderAlarmId, orderId, ",
        "clientId, clientType, ",
        "noticeNum, noticeType, ",
        "flag, noticeTarget, ",
        "noticeContent, planTime, ",
        "sendTime, type, ",
        "areaCode, status, ",
        "updated_at, created_at)",
        "values (#{orderalarmid,jdbcType=INTEGER}, #{orderid,jdbcType=VARCHAR}, ",
        "#{clientid,jdbcType=INTEGER}, #{clienttype,jdbcType=INTEGER}, ",
        "#{noticenum,jdbcType=INTEGER}, #{noticetype,jdbcType=INTEGER}, ",
        "#{flag,jdbcType=INTEGER}, #{noticetarget,jdbcType=VARCHAR}, ",
        "#{noticecontent,jdbcType=VARCHAR}, #{plantime,jdbcType=TIMESTAMP}, ",
        "#{sendtime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, ",
        "#{areacode,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(FinalOrderAlarm record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalOrderAlarmSqlProvider.class, method="insertSelective")
    int insertSelective(FinalOrderAlarm record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderAlarmSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderAlarmId", property="orderalarmid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.INTEGER),
        @Result(column="noticeNum", property="noticenum", jdbcType=JdbcType.INTEGER),
        @Result(column="noticeType", property="noticetype", jdbcType=JdbcType.INTEGER),
        @Result(column="flag", property="flag", jdbcType=JdbcType.INTEGER),
        @Result(column="noticeTarget", property="noticetarget", jdbcType=JdbcType.VARCHAR),
        @Result(column="noticeContent", property="noticecontent", jdbcType=JdbcType.VARCHAR),
        @Result(column="planTime", property="plantime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="sendTime", property="sendtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="areaCode", property="areacode", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalOrderAlarm> selectByExampleWithRowbounds(FinalOrderAlarmCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderAlarmSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderAlarmId", property="orderalarmid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.INTEGER),
        @Result(column="noticeNum", property="noticenum", jdbcType=JdbcType.INTEGER),
        @Result(column="noticeType", property="noticetype", jdbcType=JdbcType.INTEGER),
        @Result(column="flag", property="flag", jdbcType=JdbcType.INTEGER),
        @Result(column="noticeTarget", property="noticetarget", jdbcType=JdbcType.VARCHAR),
        @Result(column="noticeContent", property="noticecontent", jdbcType=JdbcType.VARCHAR),
        @Result(column="planTime", property="plantime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="sendTime", property="sendtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="areaCode", property="areacode", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalOrderAlarm> selectByExample(FinalOrderAlarmCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "orderAlarmId, orderId, clientId, clientType, noticeNum, noticeType, flag, noticeTarget, ",
        "noticeContent, planTime, sendTime, type, areaCode, status, updated_at, created_at",
        "from `orderalarm`",
        "where orderAlarmId = #{orderalarmid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="orderAlarmId", property="orderalarmid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.INTEGER),
        @Result(column="noticeNum", property="noticenum", jdbcType=JdbcType.INTEGER),
        @Result(column="noticeType", property="noticetype", jdbcType=JdbcType.INTEGER),
        @Result(column="flag", property="flag", jdbcType=JdbcType.INTEGER),
        @Result(column="noticeTarget", property="noticetarget", jdbcType=JdbcType.VARCHAR),
        @Result(column="noticeContent", property="noticecontent", jdbcType=JdbcType.VARCHAR),
        @Result(column="planTime", property="plantime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="sendTime", property="sendtime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="areaCode", property="areacode", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    FinalOrderAlarm selectByPrimaryKey(Integer orderalarmid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderAlarmSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalOrderAlarm record, @Param("example") FinalOrderAlarmCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderAlarmSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalOrderAlarm record, @Param("example") FinalOrderAlarmCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderAlarmSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalOrderAlarm record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderalarm`
     *
     * @mbggenerated
     */
    @Update({
        "update `orderalarm`",
        "set orderId = #{orderid,jdbcType=VARCHAR},",
          "clientId = #{clientid,jdbcType=INTEGER},",
          "clientType = #{clienttype,jdbcType=INTEGER},",
          "noticeNum = #{noticenum,jdbcType=INTEGER},",
          "noticeType = #{noticetype,jdbcType=INTEGER},",
          "flag = #{flag,jdbcType=INTEGER},",
          "noticeTarget = #{noticetarget,jdbcType=VARCHAR},",
          "noticeContent = #{noticecontent,jdbcType=VARCHAR},",
          "planTime = #{plantime,jdbcType=TIMESTAMP},",
          "sendTime = #{sendtime,jdbcType=TIMESTAMP},",
          "type = #{type,jdbcType=INTEGER},",
          "areaCode = #{areacode,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=INTEGER},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where orderAlarmId = #{orderalarmid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(FinalOrderAlarm record);
}