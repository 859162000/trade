package com.hbc.data.trade.transfer.mapping.hbcfund.gen;

import com.hbc.data.trade.transfer.mapping.hbcfund.gen.bean.FinalSysAccountLog;
import com.hbc.data.trade.transfer.mapping.hbcfund.gen.bean.FinalSysAccountLogCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalSysAccountLogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalSysAccountLogSqlProvider.class, method="countByExample")
    int countByExample(FinalSysAccountLogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalSysAccountLogSqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalSysAccountLogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `sysaccountlog`",
        "where sysAccountLogId = #{sysaccountlogid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String sysaccountlogid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `sysaccountlog` (sysAccountLogId, orderId, ",
        "guideId, agentId, ",
        "agencyId, userPassportId, ",
        "opUserId, opUserType, ",
        "bizType, price, ",
        "bizComment, updated_at, ",
        "created_at)",
        "values (#{sysaccountlogid,jdbcType=VARCHAR}, #{orderid,jdbcType=VARCHAR}, ",
        "#{guideid,jdbcType=INTEGER}, #{agentid,jdbcType=INTEGER}, ",
        "#{agencyid,jdbcType=INTEGER}, #{userpassportid,jdbcType=VARCHAR}, ",
        "#{opuserid,jdbcType=VARCHAR}, #{opusertype,jdbcType=INTEGER}, ",
        "#{biztype,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, ",
        "#{bizcomment,jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}, ",
        "#{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(FinalSysAccountLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalSysAccountLogSqlProvider.class, method="insertSelective")
    int insertSelective(FinalSysAccountLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalSysAccountLogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="sysAccountLogId", property="sysaccountlogid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="agentId", property="agentid", jdbcType=JdbcType.INTEGER),
        @Result(column="agencyId", property="agencyid", jdbcType=JdbcType.INTEGER),
        @Result(column="userPassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserId", property="opuserid", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserType", property="opusertype", jdbcType=JdbcType.INTEGER),
        @Result(column="bizType", property="biztype", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="bizComment", property="bizcomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalSysAccountLog> selectByExampleWithRowbounds(FinalSysAccountLogCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalSysAccountLogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="sysAccountLogId", property="sysaccountlogid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="agentId", property="agentid", jdbcType=JdbcType.INTEGER),
        @Result(column="agencyId", property="agencyid", jdbcType=JdbcType.INTEGER),
        @Result(column="userPassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserId", property="opuserid", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserType", property="opusertype", jdbcType=JdbcType.INTEGER),
        @Result(column="bizType", property="biztype", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="bizComment", property="bizcomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalSysAccountLog> selectByExample(FinalSysAccountLogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "sysAccountLogId, orderId, guideId, agentId, agencyId, userPassportId, opUserId, ",
        "opUserType, bizType, price, bizComment, updated_at, created_at",
        "from `sysaccountlog`",
        "where sysAccountLogId = #{sysaccountlogid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="sysAccountLogId", property="sysaccountlogid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="agentId", property="agentid", jdbcType=JdbcType.INTEGER),
        @Result(column="agencyId", property="agencyid", jdbcType=JdbcType.INTEGER),
        @Result(column="userPassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserId", property="opuserid", jdbcType=JdbcType.VARCHAR),
        @Result(column="opUserType", property="opusertype", jdbcType=JdbcType.INTEGER),
        @Result(column="bizType", property="biztype", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="bizComment", property="bizcomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    FinalSysAccountLog selectByPrimaryKey(String sysaccountlogid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalSysAccountLogSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalSysAccountLog record, @Param("example") FinalSysAccountLogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalSysAccountLogSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalSysAccountLog record, @Param("example") FinalSysAccountLogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalSysAccountLogSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalSysAccountLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sysaccountlog`
     *
     * @mbggenerated
     */
    @Update({
        "update `sysaccountlog`",
        "set orderId = #{orderid,jdbcType=VARCHAR},",
          "guideId = #{guideid,jdbcType=INTEGER},",
          "agentId = #{agentid,jdbcType=INTEGER},",
          "agencyId = #{agencyid,jdbcType=INTEGER},",
          "userPassportId = #{userpassportid,jdbcType=VARCHAR},",
          "opUserId = #{opuserid,jdbcType=VARCHAR},",
          "opUserType = #{opusertype,jdbcType=INTEGER},",
          "bizType = #{biztype,jdbcType=INTEGER},",
          "price = #{price,jdbcType=INTEGER},",
          "bizComment = #{bizcomment,jdbcType=VARCHAR},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where sysAccountLogId = #{sysaccountlogid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(FinalSysAccountLog record);
}