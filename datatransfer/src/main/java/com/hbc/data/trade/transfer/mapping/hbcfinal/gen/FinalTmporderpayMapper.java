package com.hbc.data.trade.transfer.mapping.hbcfinal.gen;

import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalTmporderpay;
import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalTmporderpayCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalTmporderpayMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalTmporderpaySqlProvider.class, method="countByExample")
    int countByExample(FinalTmporderpayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalTmporderpaySqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalTmporderpayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `tmporderpay`",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String orderid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `tmporderpay` (orderId, orderPrice, ",
        "agentPrice, couponPrice, ",
        "diffPrice, refundPrice, ",
        "updated_at, created_at)",
        "values (#{orderid,jdbcType=VARCHAR}, #{orderprice,jdbcType=INTEGER}, ",
        "#{agentprice,jdbcType=INTEGER}, #{couponprice,jdbcType=INTEGER}, ",
        "#{diffprice,jdbcType=INTEGER}, #{refundprice,jdbcType=INTEGER}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(FinalTmporderpay record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalTmporderpaySqlProvider.class, method="insertSelective")
    int insertSelective(FinalTmporderpay record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalTmporderpaySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderPrice", property="orderprice", jdbcType=JdbcType.INTEGER),
        @Result(column="agentPrice", property="agentprice", jdbcType=JdbcType.INTEGER),
        @Result(column="couponPrice", property="couponprice", jdbcType=JdbcType.INTEGER),
        @Result(column="diffPrice", property="diffprice", jdbcType=JdbcType.INTEGER),
        @Result(column="refundPrice", property="refundprice", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalTmporderpay> selectByExampleWithRowbounds(FinalTmporderpayCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalTmporderpaySqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderPrice", property="orderprice", jdbcType=JdbcType.INTEGER),
        @Result(column="agentPrice", property="agentprice", jdbcType=JdbcType.INTEGER),
        @Result(column="couponPrice", property="couponprice", jdbcType=JdbcType.INTEGER),
        @Result(column="diffPrice", property="diffprice", jdbcType=JdbcType.INTEGER),
        @Result(column="refundPrice", property="refundprice", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalTmporderpay> selectByExample(FinalTmporderpayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "orderId, orderPrice, agentPrice, couponPrice, diffPrice, refundPrice, updated_at, ",
        "created_at",
        "from `tmporderpay`",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderPrice", property="orderprice", jdbcType=JdbcType.INTEGER),
        @Result(column="agentPrice", property="agentprice", jdbcType=JdbcType.INTEGER),
        @Result(column="couponPrice", property="couponprice", jdbcType=JdbcType.INTEGER),
        @Result(column="diffPrice", property="diffprice", jdbcType=JdbcType.INTEGER),
        @Result(column="refundPrice", property="refundprice", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    FinalTmporderpay selectByPrimaryKey(String orderid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalTmporderpaySqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalTmporderpay record, @Param("example") FinalTmporderpayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalTmporderpaySqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalTmporderpay record, @Param("example") FinalTmporderpayCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalTmporderpaySqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalTmporderpay record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `tmporderpay`
     *
     * @mbggenerated
     */
    @Update({
        "update `tmporderpay`",
        "set orderPrice = #{orderprice,jdbcType=INTEGER},",
          "agentPrice = #{agentprice,jdbcType=INTEGER},",
          "couponPrice = #{couponprice,jdbcType=INTEGER},",
          "diffPrice = #{diffprice,jdbcType=INTEGER},",
          "refundPrice = #{refundprice,jdbcType=INTEGER},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(FinalTmporderpay record);
}