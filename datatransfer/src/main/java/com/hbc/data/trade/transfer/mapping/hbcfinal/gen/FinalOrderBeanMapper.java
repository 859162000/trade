package com.hbc.data.trade.transfer.mapping.hbcfinal.gen;

import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderBean;
import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderBeanCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalOrderBeanMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderBeanSqlProvider.class, method="countByExample")
    int countByExample(FinalOrderBeanCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalOrderBeanSqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalOrderBeanCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `order`",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String orderid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `order` (orderId, orderSN, ",
        "placeId, placeCityId, ",
        "serviceDate, serviceTime, ",
        "serviceAllDateDisplay, localDay, ",
        "nonlocalDay, departure, ",
        "destination, distance, ",
        "deptDetailAddress, destDetailAddress, ",
        "seatCategory, type, ",
        "price, clientPrice, ",
        "guidePrice, orderType, ",
        "userGuideId, preGuideId, ",
        "guideId, clientType, ",
        "clientId, userpassportId, ",
        "adminId, status, ",
        "payStatus, hasRefund, ",
        "imToken, deliveredPriority, ",
        "dealOrderTime, reDeliverType, ",
        "reDeliverCount, deliverTime, ",
        "guideCommentStatus, userCommentStatus, ",
        "updated_at, refId, ",
        "mode, serviceCar, ",
        "serviceGuide, serviceCarId, ",
        "serviceGuideId, agencyType, ",
        "deleted_at, created_at)",
        "values (#{orderid,jdbcType=VARCHAR}, #{ordersn,jdbcType=VARCHAR}, ",
        "#{placeid,jdbcType=INTEGER}, #{placecityid,jdbcType=INTEGER}, ",
        "#{servicedate,jdbcType=DATE}, #{servicetime,jdbcType=TIME}, ",
        "#{servicealldatedisplay,jdbcType=VARCHAR}, #{localday,jdbcType=INTEGER}, ",
        "#{nonlocalday,jdbcType=INTEGER}, #{departure,jdbcType=VARCHAR}, ",
        "#{destination,jdbcType=VARCHAR}, #{distance,jdbcType=DECIMAL}, ",
        "#{deptdetailaddress,jdbcType=VARCHAR}, #{destdetailaddress,jdbcType=VARCHAR}, ",
        "#{seatcategory,jdbcType=TINYINT}, #{type,jdbcType=INTEGER}, ",
        "#{price,jdbcType=INTEGER}, #{clientprice,jdbcType=INTEGER}, ",
        "#{guideprice,jdbcType=INTEGER}, #{ordertype,jdbcType=INTEGER}, ",
        "#{userguideid,jdbcType=INTEGER}, #{preguideid,jdbcType=INTEGER}, ",
        "#{guideid,jdbcType=INTEGER}, #{clienttype,jdbcType=TINYINT}, ",
        "#{clientid,jdbcType=VARCHAR}, #{userpassportid,jdbcType=VARCHAR}, ",
        "#{adminid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, ",
        "#{paystatus,jdbcType=INTEGER}, #{hasrefund,jdbcType=INTEGER}, ",
        "#{imtoken,jdbcType=VARCHAR}, #{deliveredpriority,jdbcType=INTEGER}, ",
        "#{dealordertime,jdbcType=TIMESTAMP}, #{redelivertype,jdbcType=INTEGER}, ",
        "#{redelivercount,jdbcType=INTEGER}, #{delivertime,jdbcType=TIMESTAMP}, ",
        "#{guidecommentstatus,jdbcType=INTEGER}, #{usercommentstatus,jdbcType=INTEGER}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{refid,jdbcType=VARCHAR}, ",
        "#{mode,jdbcType=INTEGER}, #{servicecar,jdbcType=VARCHAR}, ",
        "#{serviceguide,jdbcType=VARCHAR}, #{servicecarid,jdbcType=VARCHAR}, ",
        "#{serviceguideid,jdbcType=VARCHAR}, #{agencytype,jdbcType=INTEGER}, ",
        "#{deletedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(FinalOrderBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalOrderBeanSqlProvider.class, method="insertSelective")
    int insertSelective(FinalOrderBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderBeanSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderSN", property="ordersn", jdbcType=JdbcType.VARCHAR),
        @Result(column="placeId", property="placeid", jdbcType=JdbcType.INTEGER),
        @Result(column="placeCityId", property="placecityid", jdbcType=JdbcType.INTEGER),
        @Result(column="serviceDate", property="servicedate", jdbcType=JdbcType.DATE),
        @Result(column="serviceTime", property="servicetime", jdbcType=JdbcType.TIME),
        @Result(column="serviceAllDateDisplay", property="servicealldatedisplay", jdbcType=JdbcType.VARCHAR),
        @Result(column="localDay", property="localday", jdbcType=JdbcType.INTEGER),
        @Result(column="nonlocalDay", property="nonlocalday", jdbcType=JdbcType.INTEGER),
        @Result(column="departure", property="departure", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination", property="destination", jdbcType=JdbcType.VARCHAR),
        @Result(column="distance", property="distance", jdbcType=JdbcType.DECIMAL),
        @Result(column="deptDetailAddress", property="deptdetailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="destDetailAddress", property="destdetailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="seatCategory", property="seatcategory", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="orderType", property="ordertype", jdbcType=JdbcType.INTEGER),
        @Result(column="userGuideId", property="userguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="preGuideId", property="preguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.TINYINT),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userpassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="adminId", property="adminid", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="payStatus", property="paystatus", jdbcType=JdbcType.INTEGER),
        @Result(column="hasRefund", property="hasrefund", jdbcType=JdbcType.INTEGER),
        @Result(column="imToken", property="imtoken", jdbcType=JdbcType.VARCHAR),
        @Result(column="deliveredPriority", property="deliveredpriority", jdbcType=JdbcType.INTEGER),
        @Result(column="dealOrderTime", property="dealordertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="reDeliverType", property="redelivertype", jdbcType=JdbcType.INTEGER),
        @Result(column="reDeliverCount", property="redelivercount", jdbcType=JdbcType.INTEGER),
        @Result(column="deliverTime", property="delivertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="guideCommentStatus", property="guidecommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="userCommentStatus", property="usercommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="refId", property="refid", jdbcType=JdbcType.VARCHAR),
        @Result(column="mode", property="mode", jdbcType=JdbcType.INTEGER),
        @Result(column="serviceCar", property="servicecar", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceGuide", property="serviceguide", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceCarId", property="servicecarid", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceGuideId", property="serviceguideid", jdbcType=JdbcType.VARCHAR),
        @Result(column="agencyType", property="agencytype", jdbcType=JdbcType.INTEGER),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalOrderBean> selectByExampleWithRowbounds(FinalOrderBeanCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderBeanSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderSN", property="ordersn", jdbcType=JdbcType.VARCHAR),
        @Result(column="placeId", property="placeid", jdbcType=JdbcType.INTEGER),
        @Result(column="placeCityId", property="placecityid", jdbcType=JdbcType.INTEGER),
        @Result(column="serviceDate", property="servicedate", jdbcType=JdbcType.DATE),
        @Result(column="serviceTime", property="servicetime", jdbcType=JdbcType.TIME),
        @Result(column="serviceAllDateDisplay", property="servicealldatedisplay", jdbcType=JdbcType.VARCHAR),
        @Result(column="localDay", property="localday", jdbcType=JdbcType.INTEGER),
        @Result(column="nonlocalDay", property="nonlocalday", jdbcType=JdbcType.INTEGER),
        @Result(column="departure", property="departure", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination", property="destination", jdbcType=JdbcType.VARCHAR),
        @Result(column="distance", property="distance", jdbcType=JdbcType.DECIMAL),
        @Result(column="deptDetailAddress", property="deptdetailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="destDetailAddress", property="destdetailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="seatCategory", property="seatcategory", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="orderType", property="ordertype", jdbcType=JdbcType.INTEGER),
        @Result(column="userGuideId", property="userguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="preGuideId", property="preguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.TINYINT),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userpassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="adminId", property="adminid", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="payStatus", property="paystatus", jdbcType=JdbcType.INTEGER),
        @Result(column="hasRefund", property="hasrefund", jdbcType=JdbcType.INTEGER),
        @Result(column="imToken", property="imtoken", jdbcType=JdbcType.VARCHAR),
        @Result(column="deliveredPriority", property="deliveredpriority", jdbcType=JdbcType.INTEGER),
        @Result(column="dealOrderTime", property="dealordertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="reDeliverType", property="redelivertype", jdbcType=JdbcType.INTEGER),
        @Result(column="reDeliverCount", property="redelivercount", jdbcType=JdbcType.INTEGER),
        @Result(column="deliverTime", property="delivertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="guideCommentStatus", property="guidecommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="userCommentStatus", property="usercommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="refId", property="refid", jdbcType=JdbcType.VARCHAR),
        @Result(column="mode", property="mode", jdbcType=JdbcType.INTEGER),
        @Result(column="serviceCar", property="servicecar", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceGuide", property="serviceguide", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceCarId", property="servicecarid", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceGuideId", property="serviceguideid", jdbcType=JdbcType.VARCHAR),
        @Result(column="agencyType", property="agencytype", jdbcType=JdbcType.INTEGER),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalOrderBean> selectByExample(FinalOrderBeanCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "orderId, orderSN, placeId, placeCityId, serviceDate, serviceTime, serviceAllDateDisplay, ",
        "localDay, nonlocalDay, departure, destination, distance, deptDetailAddress, ",
        "destDetailAddress, seatCategory, type, price, clientPrice, guidePrice, orderType, ",
        "userGuideId, preGuideId, guideId, clientType, clientId, userpassportId, adminId, ",
        "status, payStatus, hasRefund, imToken, deliveredPriority, dealOrderTime, reDeliverType, ",
        "reDeliverCount, deliverTime, guideCommentStatus, userCommentStatus, updated_at, ",
        "refId, mode, serviceCar, serviceGuide, serviceCarId, serviceGuideId, agencyType, ",
        "deleted_at, created_at",
        "from `order`",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderSN", property="ordersn", jdbcType=JdbcType.VARCHAR),
        @Result(column="placeId", property="placeid", jdbcType=JdbcType.INTEGER),
        @Result(column="placeCityId", property="placecityid", jdbcType=JdbcType.INTEGER),
        @Result(column="serviceDate", property="servicedate", jdbcType=JdbcType.DATE),
        @Result(column="serviceTime", property="servicetime", jdbcType=JdbcType.TIME),
        @Result(column="serviceAllDateDisplay", property="servicealldatedisplay", jdbcType=JdbcType.VARCHAR),
        @Result(column="localDay", property="localday", jdbcType=JdbcType.INTEGER),
        @Result(column="nonlocalDay", property="nonlocalday", jdbcType=JdbcType.INTEGER),
        @Result(column="departure", property="departure", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination", property="destination", jdbcType=JdbcType.VARCHAR),
        @Result(column="distance", property="distance", jdbcType=JdbcType.DECIMAL),
        @Result(column="deptDetailAddress", property="deptdetailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="destDetailAddress", property="destdetailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="seatCategory", property="seatcategory", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="orderType", property="ordertype", jdbcType=JdbcType.INTEGER),
        @Result(column="userGuideId", property="userguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="preGuideId", property="preguideid", jdbcType=JdbcType.INTEGER),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.TINYINT),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userpassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="adminId", property="adminid", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="payStatus", property="paystatus", jdbcType=JdbcType.INTEGER),
        @Result(column="hasRefund", property="hasrefund", jdbcType=JdbcType.INTEGER),
        @Result(column="imToken", property="imtoken", jdbcType=JdbcType.VARCHAR),
        @Result(column="deliveredPriority", property="deliveredpriority", jdbcType=JdbcType.INTEGER),
        @Result(column="dealOrderTime", property="dealordertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="reDeliverType", property="redelivertype", jdbcType=JdbcType.INTEGER),
        @Result(column="reDeliverCount", property="redelivercount", jdbcType=JdbcType.INTEGER),
        @Result(column="deliverTime", property="delivertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="guideCommentStatus", property="guidecommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="userCommentStatus", property="usercommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="refId", property="refid", jdbcType=JdbcType.VARCHAR),
        @Result(column="mode", property="mode", jdbcType=JdbcType.INTEGER),
        @Result(column="serviceCar", property="servicecar", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceGuide", property="serviceguide", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceCarId", property="servicecarid", jdbcType=JdbcType.VARCHAR),
        @Result(column="serviceGuideId", property="serviceguideid", jdbcType=JdbcType.VARCHAR),
        @Result(column="agencyType", property="agencytype", jdbcType=JdbcType.INTEGER),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    FinalOrderBean selectByPrimaryKey(String orderid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderBeanSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalOrderBean record, @Param("example") FinalOrderBeanCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderBeanSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalOrderBean record, @Param("example") FinalOrderBeanCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderBeanSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalOrderBean record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `order`
     *
     * @mbggenerated
     */
    @Update({
        "update `order`",
        "set orderSN = #{ordersn,jdbcType=VARCHAR},",
          "placeId = #{placeid,jdbcType=INTEGER},",
          "placeCityId = #{placecityid,jdbcType=INTEGER},",
          "serviceDate = #{servicedate,jdbcType=DATE},",
          "serviceTime = #{servicetime,jdbcType=TIME},",
          "serviceAllDateDisplay = #{servicealldatedisplay,jdbcType=VARCHAR},",
          "localDay = #{localday,jdbcType=INTEGER},",
          "nonlocalDay = #{nonlocalday,jdbcType=INTEGER},",
          "departure = #{departure,jdbcType=VARCHAR},",
          "destination = #{destination,jdbcType=VARCHAR},",
          "distance = #{distance,jdbcType=DECIMAL},",
          "deptDetailAddress = #{deptdetailaddress,jdbcType=VARCHAR},",
          "destDetailAddress = #{destdetailaddress,jdbcType=VARCHAR},",
          "seatCategory = #{seatcategory,jdbcType=TINYINT},",
          "type = #{type,jdbcType=INTEGER},",
          "price = #{price,jdbcType=INTEGER},",
          "clientPrice = #{clientprice,jdbcType=INTEGER},",
          "guidePrice = #{guideprice,jdbcType=INTEGER},",
          "orderType = #{ordertype,jdbcType=INTEGER},",
          "userGuideId = #{userguideid,jdbcType=INTEGER},",
          "preGuideId = #{preguideid,jdbcType=INTEGER},",
          "guideId = #{guideid,jdbcType=INTEGER},",
          "clientType = #{clienttype,jdbcType=TINYINT},",
          "clientId = #{clientid,jdbcType=VARCHAR},",
          "userpassportId = #{userpassportid,jdbcType=VARCHAR},",
          "adminId = #{adminid,jdbcType=INTEGER},",
          "status = #{status,jdbcType=INTEGER},",
          "payStatus = #{paystatus,jdbcType=INTEGER},",
          "hasRefund = #{hasrefund,jdbcType=INTEGER},",
          "imToken = #{imtoken,jdbcType=VARCHAR},",
          "deliveredPriority = #{deliveredpriority,jdbcType=INTEGER},",
          "dealOrderTime = #{dealordertime,jdbcType=TIMESTAMP},",
          "reDeliverType = #{redelivertype,jdbcType=INTEGER},",
          "reDeliverCount = #{redelivercount,jdbcType=INTEGER},",
          "deliverTime = #{delivertime,jdbcType=TIMESTAMP},",
          "guideCommentStatus = #{guidecommentstatus,jdbcType=INTEGER},",
          "userCommentStatus = #{usercommentstatus,jdbcType=INTEGER},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "refId = #{refid,jdbcType=VARCHAR},",
          "mode = #{mode,jdbcType=INTEGER},",
          "serviceCar = #{servicecar,jdbcType=VARCHAR},",
          "serviceGuide = #{serviceguide,jdbcType=VARCHAR},",
          "serviceCarId = #{servicecarid,jdbcType=VARCHAR},",
          "serviceGuideId = #{serviceguideid,jdbcType=VARCHAR},",
          "agencyType = #{agencytype,jdbcType=INTEGER},",
          "deleted_at = #{deletedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(FinalOrderBean record);
}