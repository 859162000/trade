package com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean;

import com.hbc.data.trade.transfer.util.Page;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class FinalGuideDemandOrderCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    protected Page page;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public FinalGuideDemandOrderCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public void setPage(Page page) {
        this.page=page;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public Page getPage() {
        return page;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andGuideidIsNull() {
            addCriterion("guideId is null");
            return (Criteria) this;
        }

        public Criteria andGuideidIsNotNull() {
            addCriterion("guideId is not null");
            return (Criteria) this;
        }

        public Criteria andGuideidEqualTo(Integer value) {
            addCriterion("guideId =", value, "guideid");
            return (Criteria) this;
        }

        public Criteria andGuideidNotEqualTo(Integer value) {
            addCriterion("guideId <>", value, "guideid");
            return (Criteria) this;
        }

        public Criteria andGuideidGreaterThan(Integer value) {
            addCriterion("guideId >", value, "guideid");
            return (Criteria) this;
        }

        public Criteria andGuideidGreaterThanOrEqualTo(Integer value) {
            addCriterion("guideId >=", value, "guideid");
            return (Criteria) this;
        }

        public Criteria andGuideidLessThan(Integer value) {
            addCriterion("guideId <", value, "guideid");
            return (Criteria) this;
        }

        public Criteria andGuideidLessThanOrEqualTo(Integer value) {
            addCriterion("guideId <=", value, "guideid");
            return (Criteria) this;
        }

        public Criteria andGuideidIn(List<Integer> values) {
            addCriterion("guideId in", values, "guideid");
            return (Criteria) this;
        }

        public Criteria andGuideidNotIn(List<Integer> values) {
            addCriterion("guideId not in", values, "guideid");
            return (Criteria) this;
        }

        public Criteria andGuideidBetween(Integer value1, Integer value2) {
            addCriterion("guideId between", value1, value2, "guideid");
            return (Criteria) this;
        }

        public Criteria andGuideidNotBetween(Integer value1, Integer value2) {
            addCriterion("guideId not between", value1, value2, "guideid");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesIsNull() {
            addCriterion("serialFailTimes is null");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesIsNotNull() {
            addCriterion("serialFailTimes is not null");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesEqualTo(Integer value) {
            addCriterion("serialFailTimes =", value, "serialfailtimes");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesNotEqualTo(Integer value) {
            addCriterion("serialFailTimes <>", value, "serialfailtimes");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesGreaterThan(Integer value) {
            addCriterion("serialFailTimes >", value, "serialfailtimes");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("serialFailTimes >=", value, "serialfailtimes");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesLessThan(Integer value) {
            addCriterion("serialFailTimes <", value, "serialfailtimes");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesLessThanOrEqualTo(Integer value) {
            addCriterion("serialFailTimes <=", value, "serialfailtimes");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesIn(List<Integer> values) {
            addCriterion("serialFailTimes in", values, "serialfailtimes");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesNotIn(List<Integer> values) {
            addCriterion("serialFailTimes not in", values, "serialfailtimes");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesBetween(Integer value1, Integer value2) {
            addCriterion("serialFailTimes between", value1, value2, "serialfailtimes");
            return (Criteria) this;
        }

        public Criteria andSerialfailtimesNotBetween(Integer value1, Integer value2) {
            addCriterion("serialFailTimes not between", value1, value2, "serialfailtimes");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysIsNull() {
            addCriterion("serialFailDays is null");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysIsNotNull() {
            addCriterion("serialFailDays is not null");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysEqualTo(Integer value) {
            addCriterion("serialFailDays =", value, "serialfaildays");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysNotEqualTo(Integer value) {
            addCriterion("serialFailDays <>", value, "serialfaildays");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysGreaterThan(Integer value) {
            addCriterion("serialFailDays >", value, "serialfaildays");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysGreaterThanOrEqualTo(Integer value) {
            addCriterion("serialFailDays >=", value, "serialfaildays");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysLessThan(Integer value) {
            addCriterion("serialFailDays <", value, "serialfaildays");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysLessThanOrEqualTo(Integer value) {
            addCriterion("serialFailDays <=", value, "serialfaildays");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysIn(List<Integer> values) {
            addCriterion("serialFailDays in", values, "serialfaildays");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysNotIn(List<Integer> values) {
            addCriterion("serialFailDays not in", values, "serialfaildays");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysBetween(Integer value1, Integer value2) {
            addCriterion("serialFailDays between", value1, value2, "serialfaildays");
            return (Criteria) this;
        }

        public Criteria andSerialfaildaysNotBetween(Integer value1, Integer value2) {
            addCriterion("serialFailDays not between", value1, value2, "serialfaildays");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesIsNull() {
            addCriterion("todayFailTimes is null");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesIsNotNull() {
            addCriterion("todayFailTimes is not null");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesEqualTo(Integer value) {
            addCriterion("todayFailTimes =", value, "todayfailtimes");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesNotEqualTo(Integer value) {
            addCriterion("todayFailTimes <>", value, "todayfailtimes");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesGreaterThan(Integer value) {
            addCriterion("todayFailTimes >", value, "todayfailtimes");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("todayFailTimes >=", value, "todayfailtimes");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesLessThan(Integer value) {
            addCriterion("todayFailTimes <", value, "todayfailtimes");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesLessThanOrEqualTo(Integer value) {
            addCriterion("todayFailTimes <=", value, "todayfailtimes");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesIn(List<Integer> values) {
            addCriterion("todayFailTimes in", values, "todayfailtimes");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesNotIn(List<Integer> values) {
            addCriterion("todayFailTimes not in", values, "todayfailtimes");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesBetween(Integer value1, Integer value2) {
            addCriterion("todayFailTimes between", value1, value2, "todayfailtimes");
            return (Criteria) this;
        }

        public Criteria andTodayfailtimesNotBetween(Integer value1, Integer value2) {
            addCriterion("todayFailTimes not between", value1, value2, "todayfailtimes");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesIsNull() {
            addCriterion("todayDealTimes is null");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesIsNotNull() {
            addCriterion("todayDealTimes is not null");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesEqualTo(Integer value) {
            addCriterion("todayDealTimes =", value, "todaydealtimes");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesNotEqualTo(Integer value) {
            addCriterion("todayDealTimes <>", value, "todaydealtimes");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesGreaterThan(Integer value) {
            addCriterion("todayDealTimes >", value, "todaydealtimes");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("todayDealTimes >=", value, "todaydealtimes");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesLessThan(Integer value) {
            addCriterion("todayDealTimes <", value, "todaydealtimes");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesLessThanOrEqualTo(Integer value) {
            addCriterion("todayDealTimes <=", value, "todaydealtimes");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesIn(List<Integer> values) {
            addCriterion("todayDealTimes in", values, "todaydealtimes");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesNotIn(List<Integer> values) {
            addCriterion("todayDealTimes not in", values, "todaydealtimes");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesBetween(Integer value1, Integer value2) {
            addCriterion("todayDealTimes between", value1, value2, "todaydealtimes");
            return (Criteria) this;
        }

        public Criteria andTodaydealtimesNotBetween(Integer value1, Integer value2) {
            addCriterion("todayDealTimes not between", value1, value2, "todaydealtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysIsNull() {
            addCriterion("accumulativeFailDays is null");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysIsNotNull() {
            addCriterion("accumulativeFailDays is not null");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysEqualTo(Integer value) {
            addCriterion("accumulativeFailDays =", value, "accumulativefaildays");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysNotEqualTo(Integer value) {
            addCriterion("accumulativeFailDays <>", value, "accumulativefaildays");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysGreaterThan(Integer value) {
            addCriterion("accumulativeFailDays >", value, "accumulativefaildays");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysGreaterThanOrEqualTo(Integer value) {
            addCriterion("accumulativeFailDays >=", value, "accumulativefaildays");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysLessThan(Integer value) {
            addCriterion("accumulativeFailDays <", value, "accumulativefaildays");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysLessThanOrEqualTo(Integer value) {
            addCriterion("accumulativeFailDays <=", value, "accumulativefaildays");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysIn(List<Integer> values) {
            addCriterion("accumulativeFailDays in", values, "accumulativefaildays");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysNotIn(List<Integer> values) {
            addCriterion("accumulativeFailDays not in", values, "accumulativefaildays");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysBetween(Integer value1, Integer value2) {
            addCriterion("accumulativeFailDays between", value1, value2, "accumulativefaildays");
            return (Criteria) this;
        }

        public Criteria andAccumulativefaildaysNotBetween(Integer value1, Integer value2) {
            addCriterion("accumulativeFailDays not between", value1, value2, "accumulativefaildays");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesIsNull() {
            addCriterion("accumulativeFailTimes is null");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesIsNotNull() {
            addCriterion("accumulativeFailTimes is not null");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesEqualTo(Integer value) {
            addCriterion("accumulativeFailTimes =", value, "accumulativefailtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesNotEqualTo(Integer value) {
            addCriterion("accumulativeFailTimes <>", value, "accumulativefailtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesGreaterThan(Integer value) {
            addCriterion("accumulativeFailTimes >", value, "accumulativefailtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("accumulativeFailTimes >=", value, "accumulativefailtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesLessThan(Integer value) {
            addCriterion("accumulativeFailTimes <", value, "accumulativefailtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesLessThanOrEqualTo(Integer value) {
            addCriterion("accumulativeFailTimes <=", value, "accumulativefailtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesIn(List<Integer> values) {
            addCriterion("accumulativeFailTimes in", values, "accumulativefailtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesNotIn(List<Integer> values) {
            addCriterion("accumulativeFailTimes not in", values, "accumulativefailtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesBetween(Integer value1, Integer value2) {
            addCriterion("accumulativeFailTimes between", value1, value2, "accumulativefailtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativefailtimesNotBetween(Integer value1, Integer value2) {
            addCriterion("accumulativeFailTimes not between", value1, value2, "accumulativefailtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersIsNull() {
            addCriterion("accumulativeDealOrders is null");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersIsNotNull() {
            addCriterion("accumulativeDealOrders is not null");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersEqualTo(Integer value) {
            addCriterion("accumulativeDealOrders =", value, "accumulativedealorders");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersNotEqualTo(Integer value) {
            addCriterion("accumulativeDealOrders <>", value, "accumulativedealorders");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersGreaterThan(Integer value) {
            addCriterion("accumulativeDealOrders >", value, "accumulativedealorders");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersGreaterThanOrEqualTo(Integer value) {
            addCriterion("accumulativeDealOrders >=", value, "accumulativedealorders");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersLessThan(Integer value) {
            addCriterion("accumulativeDealOrders <", value, "accumulativedealorders");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersLessThanOrEqualTo(Integer value) {
            addCriterion("accumulativeDealOrders <=", value, "accumulativedealorders");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersIn(List<Integer> values) {
            addCriterion("accumulativeDealOrders in", values, "accumulativedealorders");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersNotIn(List<Integer> values) {
            addCriterion("accumulativeDealOrders not in", values, "accumulativedealorders");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersBetween(Integer value1, Integer value2) {
            addCriterion("accumulativeDealOrders between", value1, value2, "accumulativedealorders");
            return (Criteria) this;
        }

        public Criteria andAccumulativedealordersNotBetween(Integer value1, Integer value2) {
            addCriterion("accumulativeDealOrders not between", value1, value2, "accumulativedealorders");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesIsNull() {
            addCriterion("accumulativeExpectTimes is null");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesIsNotNull() {
            addCriterion("accumulativeExpectTimes is not null");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesEqualTo(Integer value) {
            addCriterion("accumulativeExpectTimes =", value, "accumulativeexpecttimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesNotEqualTo(Integer value) {
            addCriterion("accumulativeExpectTimes <>", value, "accumulativeexpecttimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesGreaterThan(Integer value) {
            addCriterion("accumulativeExpectTimes >", value, "accumulativeexpecttimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("accumulativeExpectTimes >=", value, "accumulativeexpecttimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesLessThan(Integer value) {
            addCriterion("accumulativeExpectTimes <", value, "accumulativeexpecttimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesLessThanOrEqualTo(Integer value) {
            addCriterion("accumulativeExpectTimes <=", value, "accumulativeexpecttimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesIn(List<Integer> values) {
            addCriterion("accumulativeExpectTimes in", values, "accumulativeexpecttimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesNotIn(List<Integer> values) {
            addCriterion("accumulativeExpectTimes not in", values, "accumulativeexpecttimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesBetween(Integer value1, Integer value2) {
            addCriterion("accumulativeExpectTimes between", value1, value2, "accumulativeexpecttimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativeexpecttimesNotBetween(Integer value1, Integer value2) {
            addCriterion("accumulativeExpectTimes not between", value1, value2, "accumulativeexpecttimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesIsNull() {
            addCriterion("accumulativeDemandTimes is null");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesIsNotNull() {
            addCriterion("accumulativeDemandTimes is not null");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesEqualTo(Integer value) {
            addCriterion("accumulativeDemandTimes =", value, "accumulativedemandtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesNotEqualTo(Integer value) {
            addCriterion("accumulativeDemandTimes <>", value, "accumulativedemandtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesGreaterThan(Integer value) {
            addCriterion("accumulativeDemandTimes >", value, "accumulativedemandtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("accumulativeDemandTimes >=", value, "accumulativedemandtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesLessThan(Integer value) {
            addCriterion("accumulativeDemandTimes <", value, "accumulativedemandtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesLessThanOrEqualTo(Integer value) {
            addCriterion("accumulativeDemandTimes <=", value, "accumulativedemandtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesIn(List<Integer> values) {
            addCriterion("accumulativeDemandTimes in", values, "accumulativedemandtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesNotIn(List<Integer> values) {
            addCriterion("accumulativeDemandTimes not in", values, "accumulativedemandtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesBetween(Integer value1, Integer value2) {
            addCriterion("accumulativeDemandTimes between", value1, value2, "accumulativedemandtimes");
            return (Criteria) this;
        }

        public Criteria andAccumulativedemandtimesNotBetween(Integer value1, Integer value2) {
            addCriterion("accumulativeDemandTimes not between", value1, value2, "accumulativedemandtimes");
            return (Criteria) this;
        }

        public Criteria andReptdtIsNull() {
            addCriterion("reptdt is null");
            return (Criteria) this;
        }

        public Criteria andReptdtIsNotNull() {
            addCriterion("reptdt is not null");
            return (Criteria) this;
        }

        public Criteria andReptdtEqualTo(Date value) {
            addCriterionForJDBCDate("reptdt =", value, "reptdt");
            return (Criteria) this;
        }

        public Criteria andReptdtNotEqualTo(Date value) {
            addCriterionForJDBCDate("reptdt <>", value, "reptdt");
            return (Criteria) this;
        }

        public Criteria andReptdtGreaterThan(Date value) {
            addCriterionForJDBCDate("reptdt >", value, "reptdt");
            return (Criteria) this;
        }

        public Criteria andReptdtGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("reptdt >=", value, "reptdt");
            return (Criteria) this;
        }

        public Criteria andReptdtLessThan(Date value) {
            addCriterionForJDBCDate("reptdt <", value, "reptdt");
            return (Criteria) this;
        }

        public Criteria andReptdtLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("reptdt <=", value, "reptdt");
            return (Criteria) this;
        }

        public Criteria andReptdtIn(List<Date> values) {
            addCriterionForJDBCDate("reptdt in", values, "reptdt");
            return (Criteria) this;
        }

        public Criteria andReptdtNotIn(List<Date> values) {
            addCriterionForJDBCDate("reptdt not in", values, "reptdt");
            return (Criteria) this;
        }

        public Criteria andReptdtBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("reptdt between", value1, value2, "reptdt");
            return (Criteria) this;
        }

        public Criteria andReptdtNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("reptdt not between", value1, value2, "reptdt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNull() {
            addCriterion("updated_at is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNotNull() {
            addCriterion("updated_at is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualTo(Date value) {
            addCriterion("updated_at =", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualTo(Date value) {
            addCriterion("updated_at <>", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThan(Date value) {
            addCriterion("updated_at >", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("updated_at >=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThan(Date value) {
            addCriterion("updated_at <", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
            addCriterion("updated_at <=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIn(List<Date> values) {
            addCriterion("updated_at in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotIn(List<Date> values) {
            addCriterion("updated_at not in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetween(Date value1, Date value2) {
            addCriterion("updated_at between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
            addCriterion("updated_at not between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table `guidedemandorder`
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}