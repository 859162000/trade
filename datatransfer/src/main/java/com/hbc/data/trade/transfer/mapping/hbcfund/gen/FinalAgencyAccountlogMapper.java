package com.hbc.data.trade.transfer.mapping.hbcfund.gen;

import com.hbc.data.trade.transfer.mapping.hbcfund.gen.bean.FinalAgencyAccountlog;
import com.hbc.data.trade.transfer.mapping.hbcfund.gen.bean.FinalAgencyAccountlogCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalAgencyAccountlogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalAgencyAccountlogSqlProvider.class, method="countByExample")
    int countByExample(FinalAgencyAccountlogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalAgencyAccountlogSqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalAgencyAccountlogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `agencyaccountlog`",
        "where agencyAccountLogId = #{agencyaccountlogid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String agencyaccountlogid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `agencyaccountlog` (agencyAccountLogId, agencyAccountSN, ",
        "agencyId, guideId, ",
        "orderId, agencyFinanceId, ",
        "type, price, bizType, ",
        "content, bizStatus, ",
        "payType, bizComment, ",
        "guideDrawId, updated_at, ",
        "created_at)",
        "values (#{agencyaccountlogid,jdbcType=VARCHAR}, #{agencyaccountsn,jdbcType=VARCHAR}, ",
        "#{agencyid,jdbcType=INTEGER}, #{guideid,jdbcType=INTEGER}, ",
        "#{orderid,jdbcType=VARCHAR}, #{agencyfinanceid,jdbcType=INTEGER}, ",
        "#{type,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, #{biztype,jdbcType=INTEGER}, ",
        "#{content,jdbcType=VARCHAR}, #{bizstatus,jdbcType=INTEGER}, ",
        "#{paytype,jdbcType=INTEGER}, #{bizcomment,jdbcType=VARCHAR}, ",
        "#{guidedrawid,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP}, ",
        "#{createdAt,jdbcType=TIMESTAMP})"
    })
    int insert(FinalAgencyAccountlog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalAgencyAccountlogSqlProvider.class, method="insertSelective")
    int insertSelective(FinalAgencyAccountlog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalAgencyAccountlogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="agencyAccountLogId", property="agencyaccountlogid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="agencyAccountSN", property="agencyaccountsn", jdbcType=JdbcType.VARCHAR),
        @Result(column="agencyId", property="agencyid", jdbcType=JdbcType.INTEGER),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="agencyFinanceId", property="agencyfinanceid", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="bizType", property="biztype", jdbcType=JdbcType.INTEGER),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="bizStatus", property="bizstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="payType", property="paytype", jdbcType=JdbcType.INTEGER),
        @Result(column="bizComment", property="bizcomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideDrawId", property="guidedrawid", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalAgencyAccountlog> selectByExampleWithRowbounds(FinalAgencyAccountlogCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalAgencyAccountlogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="agencyAccountLogId", property="agencyaccountlogid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="agencyAccountSN", property="agencyaccountsn", jdbcType=JdbcType.VARCHAR),
        @Result(column="agencyId", property="agencyid", jdbcType=JdbcType.INTEGER),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="agencyFinanceId", property="agencyfinanceid", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="bizType", property="biztype", jdbcType=JdbcType.INTEGER),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="bizStatus", property="bizstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="payType", property="paytype", jdbcType=JdbcType.INTEGER),
        @Result(column="bizComment", property="bizcomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideDrawId", property="guidedrawid", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    List<FinalAgencyAccountlog> selectByExample(FinalAgencyAccountlogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "agencyAccountLogId, agencyAccountSN, agencyId, guideId, orderId, agencyFinanceId, ",
        "type, price, bizType, content, bizStatus, payType, bizComment, guideDrawId, ",
        "updated_at, created_at",
        "from `agencyaccountlog`",
        "where agencyAccountLogId = #{agencyaccountlogid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="agencyAccountLogId", property="agencyaccountlogid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="agencyAccountSN", property="agencyaccountsn", jdbcType=JdbcType.VARCHAR),
        @Result(column="agencyId", property="agencyid", jdbcType=JdbcType.INTEGER),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR),
        @Result(column="agencyFinanceId", property="agencyfinanceid", jdbcType=JdbcType.INTEGER),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="bizType", property="biztype", jdbcType=JdbcType.INTEGER),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="bizStatus", property="bizstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="payType", property="paytype", jdbcType=JdbcType.INTEGER),
        @Result(column="bizComment", property="bizcomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideDrawId", property="guidedrawid", jdbcType=JdbcType.INTEGER),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP)
    })
    FinalAgencyAccountlog selectByPrimaryKey(String agencyaccountlogid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalAgencyAccountlogSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalAgencyAccountlog record, @Param("example") FinalAgencyAccountlogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalAgencyAccountlogSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalAgencyAccountlog record, @Param("example") FinalAgencyAccountlogCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalAgencyAccountlogSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalAgencyAccountlog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agencyaccountlog`
     *
     * @mbggenerated
     */
    @Update({
        "update `agencyaccountlog`",
        "set agencyAccountSN = #{agencyaccountsn,jdbcType=VARCHAR},",
          "agencyId = #{agencyid,jdbcType=INTEGER},",
          "guideId = #{guideid,jdbcType=INTEGER},",
          "orderId = #{orderid,jdbcType=VARCHAR},",
          "agencyFinanceId = #{agencyfinanceid,jdbcType=INTEGER},",
          "type = #{type,jdbcType=INTEGER},",
          "price = #{price,jdbcType=INTEGER},",
          "bizType = #{biztype,jdbcType=INTEGER},",
          "content = #{content,jdbcType=VARCHAR},",
          "bizStatus = #{bizstatus,jdbcType=INTEGER},",
          "payType = #{paytype,jdbcType=INTEGER},",
          "bizComment = #{bizcomment,jdbcType=VARCHAR},",
          "guideDrawId = #{guidedrawid,jdbcType=INTEGER},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP}",
        "where agencyAccountLogId = #{agencyaccountlogid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(FinalAgencyAccountlog record);
}