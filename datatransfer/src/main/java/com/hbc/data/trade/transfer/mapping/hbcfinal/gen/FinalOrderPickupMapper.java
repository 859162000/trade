package com.hbc.data.trade.transfer.mapping.hbcfinal.gen;

import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderPickup;
import com.hbc.data.trade.transfer.mapping.hbcfinal.gen.bean.FinalOrderPickupCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface FinalOrderPickupMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderPickupSqlProvider.class, method="countByExample")
    int countByExample(FinalOrderPickupCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=FinalOrderPickupSqlProvider.class, method="deleteByExample")
    int deleteByExample(FinalOrderPickupCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `orderpickup`",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String orderid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `orderpickup` (orderId, orderSN, ",
        "placeId, placeCityId, ",
        "cityName, flightNo, ",
        "flightDate, flightDeptimePlanDate, ",
        "serviceDate, serviceTime, ",
        "airport, terminal, ",
        "departure, deptLocation, ",
        "deptEnAddress, destination, ",
        "destLocation, detailAddress, ",
        "destMobile, destEnAddress, ",
        "isArrivalVisa, duration, ",
        "adultNum, childNum, ",
        "childSeat, brandSign, ",
        "seatCategory, type, ",
        "distance, price, ",
        "clientPrice, guidePrice, ",
        "username, areaCode, ",
        "usermobile, usermobile1, ",
        "usermobile2, useremail, ",
        "usercomment, usercontact, ",
        "guideId, clientType, ",
        "clientId, userpassportId, ",
        "adminId, status, ",
        "registerFlightId, guideCommentStatus, ",
        "userCommentStatus, dealOrderTime, ",
        "updated_at, deleted_at, ",
        "created_at, dep, ",
        "arr)",
        "values (#{orderid,jdbcType=VARCHAR}, #{ordersn,jdbcType=VARCHAR}, ",
        "#{placeid,jdbcType=INTEGER}, #{placecityid,jdbcType=INTEGER}, ",
        "#{cityname,jdbcType=VARCHAR}, #{flightno,jdbcType=VARCHAR}, ",
        "#{flightdate,jdbcType=DATE}, #{flightdeptimeplandate,jdbcType=TIMESTAMP}, ",
        "#{servicedate,jdbcType=DATE}, #{servicetime,jdbcType=TIME}, ",
        "#{airport,jdbcType=VARCHAR}, #{terminal,jdbcType=VARCHAR}, ",
        "#{departure,jdbcType=VARCHAR}, #{deptlocation,jdbcType=VARCHAR}, ",
        "#{deptenaddress,jdbcType=VARCHAR}, #{destination,jdbcType=VARCHAR}, ",
        "#{destlocation,jdbcType=VARCHAR}, #{detailaddress,jdbcType=VARCHAR}, ",
        "#{destmobile,jdbcType=VARCHAR}, #{destenaddress,jdbcType=VARCHAR}, ",
        "#{isarrivalvisa,jdbcType=INTEGER}, #{duration,jdbcType=INTEGER}, ",
        "#{adultnum,jdbcType=TINYINT}, #{childnum,jdbcType=TINYINT}, ",
        "#{childseat,jdbcType=VARCHAR}, #{brandsign,jdbcType=VARCHAR}, ",
        "#{seatcategory,jdbcType=TINYINT}, #{type,jdbcType=INTEGER}, ",
        "#{distance,jdbcType=DECIMAL}, #{price,jdbcType=INTEGER}, ",
        "#{clientprice,jdbcType=INTEGER}, #{guideprice,jdbcType=INTEGER}, ",
        "#{username,jdbcType=VARCHAR}, #{areacode,jdbcType=VARCHAR}, ",
        "#{usermobile,jdbcType=VARCHAR}, #{usermobile1,jdbcType=VARCHAR}, ",
        "#{usermobile2,jdbcType=VARCHAR}, #{useremail,jdbcType=VARCHAR}, ",
        "#{usercomment,jdbcType=VARCHAR}, #{usercontact,jdbcType=VARCHAR}, ",
        "#{guideid,jdbcType=INTEGER}, #{clienttype,jdbcType=TINYINT}, ",
        "#{clientid,jdbcType=VARCHAR}, #{userpassportid,jdbcType=VARCHAR}, ",
        "#{adminid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, ",
        "#{registerflightid,jdbcType=VARCHAR}, #{guidecommentstatus,jdbcType=INTEGER}, ",
        "#{usercommentstatus,jdbcType=INTEGER}, #{dealordertime,jdbcType=TIMESTAMP}, ",
        "#{updatedAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP}, ",
        "#{createdAt,jdbcType=TIMESTAMP}, #{dep,jdbcType=VARCHAR}, ",
        "#{arr,jdbcType=VARCHAR})"
    })
    int insert(FinalOrderPickup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @InsertProvider(type=FinalOrderPickupSqlProvider.class, method="insertSelective")
    int insertSelective(FinalOrderPickup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderPickupSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderSN", property="ordersn", jdbcType=JdbcType.VARCHAR),
        @Result(column="placeId", property="placeid", jdbcType=JdbcType.INTEGER),
        @Result(column="placeCityId", property="placecityid", jdbcType=JdbcType.INTEGER),
        @Result(column="cityName", property="cityname", jdbcType=JdbcType.VARCHAR),
        @Result(column="flightNo", property="flightno", jdbcType=JdbcType.VARCHAR),
        @Result(column="flightDate", property="flightdate", jdbcType=JdbcType.DATE),
        @Result(column="flightDeptimePlanDate", property="flightdeptimeplandate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="serviceDate", property="servicedate", jdbcType=JdbcType.DATE),
        @Result(column="serviceTime", property="servicetime", jdbcType=JdbcType.TIME),
        @Result(column="airport", property="airport", jdbcType=JdbcType.VARCHAR),
        @Result(column="terminal", property="terminal", jdbcType=JdbcType.VARCHAR),
        @Result(column="departure", property="departure", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptLocation", property="deptlocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptEnAddress", property="deptenaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination", property="destination", jdbcType=JdbcType.VARCHAR),
        @Result(column="destLocation", property="destlocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="detailAddress", property="detailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="destMobile", property="destmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="destEnAddress", property="destenaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="isArrivalVisa", property="isarrivalvisa", jdbcType=JdbcType.INTEGER),
        @Result(column="duration", property="duration", jdbcType=JdbcType.INTEGER),
        @Result(column="adultNum", property="adultnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childNum", property="childnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childSeat", property="childseat", jdbcType=JdbcType.VARCHAR),
        @Result(column="brandSign", property="brandsign", jdbcType=JdbcType.VARCHAR),
        @Result(column="seatCategory", property="seatcategory", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="distance", property="distance", jdbcType=JdbcType.DECIMAL),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="areaCode", property="areacode", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile", property="usermobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile1", property="usermobile1", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile2", property="usermobile2", jdbcType=JdbcType.VARCHAR),
        @Result(column="useremail", property="useremail", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercomment", property="usercomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercontact", property="usercontact", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.TINYINT),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userpassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="adminId", property="adminid", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="registerFlightId", property="registerflightid", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideCommentStatus", property="guidecommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="userCommentStatus", property="usercommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="dealOrderTime", property="dealordertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="dep", property="dep", jdbcType=JdbcType.VARCHAR),
        @Result(column="arr", property="arr", jdbcType=JdbcType.VARCHAR)
    })
    List<FinalOrderPickup> selectByExampleWithRowbounds(FinalOrderPickupCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @SelectProvider(type=FinalOrderPickupSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderSN", property="ordersn", jdbcType=JdbcType.VARCHAR),
        @Result(column="placeId", property="placeid", jdbcType=JdbcType.INTEGER),
        @Result(column="placeCityId", property="placecityid", jdbcType=JdbcType.INTEGER),
        @Result(column="cityName", property="cityname", jdbcType=JdbcType.VARCHAR),
        @Result(column="flightNo", property="flightno", jdbcType=JdbcType.VARCHAR),
        @Result(column="flightDate", property="flightdate", jdbcType=JdbcType.DATE),
        @Result(column="flightDeptimePlanDate", property="flightdeptimeplandate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="serviceDate", property="servicedate", jdbcType=JdbcType.DATE),
        @Result(column="serviceTime", property="servicetime", jdbcType=JdbcType.TIME),
        @Result(column="airport", property="airport", jdbcType=JdbcType.VARCHAR),
        @Result(column="terminal", property="terminal", jdbcType=JdbcType.VARCHAR),
        @Result(column="departure", property="departure", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptLocation", property="deptlocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptEnAddress", property="deptenaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination", property="destination", jdbcType=JdbcType.VARCHAR),
        @Result(column="destLocation", property="destlocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="detailAddress", property="detailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="destMobile", property="destmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="destEnAddress", property="destenaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="isArrivalVisa", property="isarrivalvisa", jdbcType=JdbcType.INTEGER),
        @Result(column="duration", property="duration", jdbcType=JdbcType.INTEGER),
        @Result(column="adultNum", property="adultnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childNum", property="childnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childSeat", property="childseat", jdbcType=JdbcType.VARCHAR),
        @Result(column="brandSign", property="brandsign", jdbcType=JdbcType.VARCHAR),
        @Result(column="seatCategory", property="seatcategory", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="distance", property="distance", jdbcType=JdbcType.DECIMAL),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="areaCode", property="areacode", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile", property="usermobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile1", property="usermobile1", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile2", property="usermobile2", jdbcType=JdbcType.VARCHAR),
        @Result(column="useremail", property="useremail", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercomment", property="usercomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercontact", property="usercontact", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.TINYINT),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userpassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="adminId", property="adminid", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="registerFlightId", property="registerflightid", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideCommentStatus", property="guidecommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="userCommentStatus", property="usercommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="dealOrderTime", property="dealordertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="dep", property="dep", jdbcType=JdbcType.VARCHAR),
        @Result(column="arr", property="arr", jdbcType=JdbcType.VARCHAR)
    })
    List<FinalOrderPickup> selectByExample(FinalOrderPickupCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "orderId, orderSN, placeId, placeCityId, cityName, flightNo, flightDate, flightDeptimePlanDate, ",
        "serviceDate, serviceTime, airport, terminal, departure, deptLocation, deptEnAddress, ",
        "destination, destLocation, detailAddress, destMobile, destEnAddress, isArrivalVisa, ",
        "duration, adultNum, childNum, childSeat, brandSign, seatCategory, type, distance, ",
        "price, clientPrice, guidePrice, username, areaCode, usermobile, usermobile1, ",
        "usermobile2, useremail, usercomment, usercontact, guideId, clientType, clientId, ",
        "userpassportId, adminId, status, registerFlightId, guideCommentStatus, userCommentStatus, ",
        "dealOrderTime, updated_at, deleted_at, created_at, dep, arr",
        "from `orderpickup`",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="orderId", property="orderid", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="orderSN", property="ordersn", jdbcType=JdbcType.VARCHAR),
        @Result(column="placeId", property="placeid", jdbcType=JdbcType.INTEGER),
        @Result(column="placeCityId", property="placecityid", jdbcType=JdbcType.INTEGER),
        @Result(column="cityName", property="cityname", jdbcType=JdbcType.VARCHAR),
        @Result(column="flightNo", property="flightno", jdbcType=JdbcType.VARCHAR),
        @Result(column="flightDate", property="flightdate", jdbcType=JdbcType.DATE),
        @Result(column="flightDeptimePlanDate", property="flightdeptimeplandate", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="serviceDate", property="servicedate", jdbcType=JdbcType.DATE),
        @Result(column="serviceTime", property="servicetime", jdbcType=JdbcType.TIME),
        @Result(column="airport", property="airport", jdbcType=JdbcType.VARCHAR),
        @Result(column="terminal", property="terminal", jdbcType=JdbcType.VARCHAR),
        @Result(column="departure", property="departure", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptLocation", property="deptlocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="deptEnAddress", property="deptenaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="destination", property="destination", jdbcType=JdbcType.VARCHAR),
        @Result(column="destLocation", property="destlocation", jdbcType=JdbcType.VARCHAR),
        @Result(column="detailAddress", property="detailaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="destMobile", property="destmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="destEnAddress", property="destenaddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="isArrivalVisa", property="isarrivalvisa", jdbcType=JdbcType.INTEGER),
        @Result(column="duration", property="duration", jdbcType=JdbcType.INTEGER),
        @Result(column="adultNum", property="adultnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childNum", property="childnum", jdbcType=JdbcType.TINYINT),
        @Result(column="childSeat", property="childseat", jdbcType=JdbcType.VARCHAR),
        @Result(column="brandSign", property="brandsign", jdbcType=JdbcType.VARCHAR),
        @Result(column="seatCategory", property="seatcategory", jdbcType=JdbcType.TINYINT),
        @Result(column="type", property="type", jdbcType=JdbcType.INTEGER),
        @Result(column="distance", property="distance", jdbcType=JdbcType.DECIMAL),
        @Result(column="price", property="price", jdbcType=JdbcType.INTEGER),
        @Result(column="clientPrice", property="clientprice", jdbcType=JdbcType.INTEGER),
        @Result(column="guidePrice", property="guideprice", jdbcType=JdbcType.INTEGER),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="areaCode", property="areacode", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile", property="usermobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile1", property="usermobile1", jdbcType=JdbcType.VARCHAR),
        @Result(column="usermobile2", property="usermobile2", jdbcType=JdbcType.VARCHAR),
        @Result(column="useremail", property="useremail", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercomment", property="usercomment", jdbcType=JdbcType.VARCHAR),
        @Result(column="usercontact", property="usercontact", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideId", property="guideid", jdbcType=JdbcType.INTEGER),
        @Result(column="clientType", property="clienttype", jdbcType=JdbcType.TINYINT),
        @Result(column="clientId", property="clientid", jdbcType=JdbcType.VARCHAR),
        @Result(column="userpassportId", property="userpassportid", jdbcType=JdbcType.VARCHAR),
        @Result(column="adminId", property="adminid", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="registerFlightId", property="registerflightid", jdbcType=JdbcType.VARCHAR),
        @Result(column="guideCommentStatus", property="guidecommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="userCommentStatus", property="usercommentstatus", jdbcType=JdbcType.INTEGER),
        @Result(column="dealOrderTime", property="dealordertime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updated_at", property="updatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted_at", property="deletedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="dep", property="dep", jdbcType=JdbcType.VARCHAR),
        @Result(column="arr", property="arr", jdbcType=JdbcType.VARCHAR)
    })
    FinalOrderPickup selectByPrimaryKey(String orderid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderPickupSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") FinalOrderPickup record, @Param("example") FinalOrderPickupCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderPickupSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") FinalOrderPickup record, @Param("example") FinalOrderPickupCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=FinalOrderPickupSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(FinalOrderPickup record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `orderpickup`
     *
     * @mbggenerated
     */
    @Update({
        "update `orderpickup`",
        "set orderSN = #{ordersn,jdbcType=VARCHAR},",
          "placeId = #{placeid,jdbcType=INTEGER},",
          "placeCityId = #{placecityid,jdbcType=INTEGER},",
          "cityName = #{cityname,jdbcType=VARCHAR},",
          "flightNo = #{flightno,jdbcType=VARCHAR},",
          "flightDate = #{flightdate,jdbcType=DATE},",
          "flightDeptimePlanDate = #{flightdeptimeplandate,jdbcType=TIMESTAMP},",
          "serviceDate = #{servicedate,jdbcType=DATE},",
          "serviceTime = #{servicetime,jdbcType=TIME},",
          "airport = #{airport,jdbcType=VARCHAR},",
          "terminal = #{terminal,jdbcType=VARCHAR},",
          "departure = #{departure,jdbcType=VARCHAR},",
          "deptLocation = #{deptlocation,jdbcType=VARCHAR},",
          "deptEnAddress = #{deptenaddress,jdbcType=VARCHAR},",
          "destination = #{destination,jdbcType=VARCHAR},",
          "destLocation = #{destlocation,jdbcType=VARCHAR},",
          "detailAddress = #{detailaddress,jdbcType=VARCHAR},",
          "destMobile = #{destmobile,jdbcType=VARCHAR},",
          "destEnAddress = #{destenaddress,jdbcType=VARCHAR},",
          "isArrivalVisa = #{isarrivalvisa,jdbcType=INTEGER},",
          "duration = #{duration,jdbcType=INTEGER},",
          "adultNum = #{adultnum,jdbcType=TINYINT},",
          "childNum = #{childnum,jdbcType=TINYINT},",
          "childSeat = #{childseat,jdbcType=VARCHAR},",
          "brandSign = #{brandsign,jdbcType=VARCHAR},",
          "seatCategory = #{seatcategory,jdbcType=TINYINT},",
          "type = #{type,jdbcType=INTEGER},",
          "distance = #{distance,jdbcType=DECIMAL},",
          "price = #{price,jdbcType=INTEGER},",
          "clientPrice = #{clientprice,jdbcType=INTEGER},",
          "guidePrice = #{guideprice,jdbcType=INTEGER},",
          "username = #{username,jdbcType=VARCHAR},",
          "areaCode = #{areacode,jdbcType=VARCHAR},",
          "usermobile = #{usermobile,jdbcType=VARCHAR},",
          "usermobile1 = #{usermobile1,jdbcType=VARCHAR},",
          "usermobile2 = #{usermobile2,jdbcType=VARCHAR},",
          "useremail = #{useremail,jdbcType=VARCHAR},",
          "usercomment = #{usercomment,jdbcType=VARCHAR},",
          "usercontact = #{usercontact,jdbcType=VARCHAR},",
          "guideId = #{guideid,jdbcType=INTEGER},",
          "clientType = #{clienttype,jdbcType=TINYINT},",
          "clientId = #{clientid,jdbcType=VARCHAR},",
          "userpassportId = #{userpassportid,jdbcType=VARCHAR},",
          "adminId = #{adminid,jdbcType=INTEGER},",
          "status = #{status,jdbcType=INTEGER},",
          "registerFlightId = #{registerflightid,jdbcType=VARCHAR},",
          "guideCommentStatus = #{guidecommentstatus,jdbcType=INTEGER},",
          "userCommentStatus = #{usercommentstatus,jdbcType=INTEGER},",
          "dealOrderTime = #{dealordertime,jdbcType=TIMESTAMP},",
          "updated_at = #{updatedAt,jdbcType=TIMESTAMP},",
          "deleted_at = #{deletedAt,jdbcType=TIMESTAMP},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP},",
          "dep = #{dep,jdbcType=VARCHAR},",
          "arr = #{arr,jdbcType=VARCHAR}",
        "where orderId = #{orderid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(FinalOrderPickup record);
}