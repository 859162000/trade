package com.hbc.data.trade.transfer.mapping.hbcbasedata.gen;

import com.hbc.data.trade.transfer.mapping.hbcbasedata.gen.bean.FinalAgency;
import com.hbc.data.trade.transfer.mapping.hbcbasedata.gen.bean.FinalAgencyCriteria.Criteria;
import com.hbc.data.trade.transfer.mapping.hbcbasedata.gen.bean.FinalAgencyCriteria.Criterion;
import com.hbc.data.trade.transfer.mapping.hbcbasedata.gen.bean.FinalAgencyCriteria;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class FinalAgencySqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency`
     *
     * @mbggenerated
     */
    public String countByExample(FinalAgencyCriteria example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("`agency`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency`
     *
     * @mbggenerated
     */
    public String deleteByExample(FinalAgencyCriteria example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("`agency`");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency`
     *
     * @mbggenerated
     */
    public String insertSelective(FinalAgency record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("`agency`");
        
        if (record.getAgencyid() != null) {
            sql.VALUES("agencyId", "#{agencyid,jdbcType=INTEGER}");
        }
        
        if (record.getName() != null) {
            sql.VALUES("name", "#{name,jdbcType=VARCHAR}");
        }
        
        if (record.getShortname() != null) {
            sql.VALUES("shortName", "#{shortname,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            sql.VALUES("address", "#{address,jdbcType=VARCHAR}");
        }
        
        if (record.getBirthday() != null) {
            sql.VALUES("birthday", "#{birthday,jdbcType=DATE}");
        }
        
        if (record.getPlaceid() != null) {
            sql.VALUES("placeId", "#{placeid,jdbcType=INTEGER}");
        }
        
        if (record.getPlacecityid() != null) {
            sql.VALUES("placeCityId", "#{placecityid,jdbcType=INTEGER}");
        }
        
        if (record.getGuideid() != null) {
            sql.VALUES("guideId", "#{guideid,jdbcType=INTEGER}");
        }
        
        if (record.getBossname() != null) {
            sql.VALUES("bossName", "#{bossname,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnername() != null) {
            sql.VALUES("ownerName", "#{ownername,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnermobile() != null) {
            sql.VALUES("ownerMobile", "#{ownermobile,jdbcType=VARCHAR}");
        }
        
        if (record.getContactname() != null) {
            sql.VALUES("contactName", "#{contactname,jdbcType=VARCHAR}");
        }
        
        if (record.getContactmobile() != null) {
            sql.VALUES("contactMobile", "#{contactmobile,jdbcType=VARCHAR}");
        }
        
        if (record.getFinaname() != null) {
            sql.VALUES("finaName", "#{finaname,jdbcType=VARCHAR}");
        }
        
        if (record.getFinamobile() != null) {
            sql.VALUES("finaMobile", "#{finamobile,jdbcType=VARCHAR}");
        }
        
        if (record.getSignday() != null) {
            sql.VALUES("signDay", "#{signday,jdbcType=DATE}");
        }
        
        if (record.getSendflag() != null) {
            sql.VALUES("sendFlag", "#{sendflag,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("status", "#{status,jdbcType=INTEGER}");
        }
        
        if (record.getUpdatedAt() != null) {
            sql.VALUES("updated_at", "#{updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreatedAt() != null) {
            sql.VALUES("created_at", "#{createdAt,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency`
     *
     * @mbggenerated
     */
    public String selectByExample(FinalAgencyCriteria example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("agencyId");
        } else {
            sql.SELECT("agencyId");
        }
        sql.SELECT("name");
        sql.SELECT("shortName");
        sql.SELECT("address");
        sql.SELECT("birthday");
        sql.SELECT("placeId");
        sql.SELECT("placeCityId");
        sql.SELECT("guideId");
        sql.SELECT("bossName");
        sql.SELECT("ownerName");
        sql.SELECT("ownerMobile");
        sql.SELECT("contactName");
        sql.SELECT("contactMobile");
        sql.SELECT("finaName");
        sql.SELECT("finaMobile");
        sql.SELECT("signDay");
        sql.SELECT("sendFlag");
        sql.SELECT("status");
        sql.SELECT("updated_at");
        sql.SELECT("created_at");
        sql.FROM("`agency`");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
         String sqlStr = sql.toString();
        if(example.getPage()!=null){
            sqlStr = sqlStr+" limit "+example.getPage().getOffset()+","+example.getPage().getLimit()+"";
             }
            return sqlStr;
        }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency`
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        FinalAgency record = (FinalAgency) parameter.get("record");
        FinalAgencyCriteria example = (FinalAgencyCriteria) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("`agency`");
        
        if (record.getAgencyid() != null) {
            sql.SET("agencyId = #{record.agencyid,jdbcType=INTEGER}");
        }
        
        if (record.getName() != null) {
            sql.SET("name = #{record.name,jdbcType=VARCHAR}");
        }
        
        if (record.getShortname() != null) {
            sql.SET("shortName = #{record.shortname,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        }
        
        if (record.getBirthday() != null) {
            sql.SET("birthday = #{record.birthday,jdbcType=DATE}");
        }
        
        if (record.getPlaceid() != null) {
            sql.SET("placeId = #{record.placeid,jdbcType=INTEGER}");
        }
        
        if (record.getPlacecityid() != null) {
            sql.SET("placeCityId = #{record.placecityid,jdbcType=INTEGER}");
        }
        
        if (record.getGuideid() != null) {
            sql.SET("guideId = #{record.guideid,jdbcType=INTEGER}");
        }
        
        if (record.getBossname() != null) {
            sql.SET("bossName = #{record.bossname,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnername() != null) {
            sql.SET("ownerName = #{record.ownername,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnermobile() != null) {
            sql.SET("ownerMobile = #{record.ownermobile,jdbcType=VARCHAR}");
        }
        
        if (record.getContactname() != null) {
            sql.SET("contactName = #{record.contactname,jdbcType=VARCHAR}");
        }
        
        if (record.getContactmobile() != null) {
            sql.SET("contactMobile = #{record.contactmobile,jdbcType=VARCHAR}");
        }
        
        if (record.getFinaname() != null) {
            sql.SET("finaName = #{record.finaname,jdbcType=VARCHAR}");
        }
        
        if (record.getFinamobile() != null) {
            sql.SET("finaMobile = #{record.finamobile,jdbcType=VARCHAR}");
        }
        
        if (record.getSignday() != null) {
            sql.SET("signDay = #{record.signday,jdbcType=DATE}");
        }
        
        if (record.getSendflag() != null) {
            sql.SET("sendFlag = #{record.sendflag,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{record.status,jdbcType=INTEGER}");
        }
        
        if (record.getUpdatedAt() != null) {
            sql.SET("updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreatedAt() != null) {
            sql.SET("created_at = #{record.createdAt,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency`
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("`agency`");
        
        sql.SET("agencyId = #{record.agencyid,jdbcType=INTEGER}");
        sql.SET("name = #{record.name,jdbcType=VARCHAR}");
        sql.SET("shortName = #{record.shortname,jdbcType=VARCHAR}");
        sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        sql.SET("birthday = #{record.birthday,jdbcType=DATE}");
        sql.SET("placeId = #{record.placeid,jdbcType=INTEGER}");
        sql.SET("placeCityId = #{record.placecityid,jdbcType=INTEGER}");
        sql.SET("guideId = #{record.guideid,jdbcType=INTEGER}");
        sql.SET("bossName = #{record.bossname,jdbcType=VARCHAR}");
        sql.SET("ownerName = #{record.ownername,jdbcType=VARCHAR}");
        sql.SET("ownerMobile = #{record.ownermobile,jdbcType=VARCHAR}");
        sql.SET("contactName = #{record.contactname,jdbcType=VARCHAR}");
        sql.SET("contactMobile = #{record.contactmobile,jdbcType=VARCHAR}");
        sql.SET("finaName = #{record.finaname,jdbcType=VARCHAR}");
        sql.SET("finaMobile = #{record.finamobile,jdbcType=VARCHAR}");
        sql.SET("signDay = #{record.signday,jdbcType=DATE}");
        sql.SET("sendFlag = #{record.sendflag,jdbcType=INTEGER}");
        sql.SET("status = #{record.status,jdbcType=INTEGER}");
        sql.SET("updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}");
        sql.SET("created_at = #{record.createdAt,jdbcType=TIMESTAMP}");
        
        FinalAgencyCriteria example = (FinalAgencyCriteria) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency`
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(FinalAgency record) {
        SQL sql = new SQL();
        sql.UPDATE("`agency`");
        
        if (record.getName() != null) {
            sql.SET("name = #{name,jdbcType=VARCHAR}");
        }
        
        if (record.getShortname() != null) {
            sql.SET("shortName = #{shortname,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            sql.SET("address = #{address,jdbcType=VARCHAR}");
        }
        
        if (record.getBirthday() != null) {
            sql.SET("birthday = #{birthday,jdbcType=DATE}");
        }
        
        if (record.getPlaceid() != null) {
            sql.SET("placeId = #{placeid,jdbcType=INTEGER}");
        }
        
        if (record.getPlacecityid() != null) {
            sql.SET("placeCityId = #{placecityid,jdbcType=INTEGER}");
        }
        
        if (record.getGuideid() != null) {
            sql.SET("guideId = #{guideid,jdbcType=INTEGER}");
        }
        
        if (record.getBossname() != null) {
            sql.SET("bossName = #{bossname,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnername() != null) {
            sql.SET("ownerName = #{ownername,jdbcType=VARCHAR}");
        }
        
        if (record.getOwnermobile() != null) {
            sql.SET("ownerMobile = #{ownermobile,jdbcType=VARCHAR}");
        }
        
        if (record.getContactname() != null) {
            sql.SET("contactName = #{contactname,jdbcType=VARCHAR}");
        }
        
        if (record.getContactmobile() != null) {
            sql.SET("contactMobile = #{contactmobile,jdbcType=VARCHAR}");
        }
        
        if (record.getFinaname() != null) {
            sql.SET("finaName = #{finaname,jdbcType=VARCHAR}");
        }
        
        if (record.getFinamobile() != null) {
            sql.SET("finaMobile = #{finamobile,jdbcType=VARCHAR}");
        }
        
        if (record.getSignday() != null) {
            sql.SET("signDay = #{signday,jdbcType=DATE}");
        }
        
        if (record.getSendflag() != null) {
            sql.SET("sendFlag = #{sendflag,jdbcType=INTEGER}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("status = #{status,jdbcType=INTEGER}");
        }
        
        if (record.getUpdatedAt() != null) {
            sql.SET("updated_at = #{updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getCreatedAt() != null) {
            sql.SET("created_at = #{createdAt,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("agencyId = #{agencyid,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `agency`
     *
     * @mbggenerated
     */
    protected void applyWhere(SQL sql, FinalAgencyCriteria example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}